2025-04-04 23:33:14,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:33:14,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:33:14,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:33:14,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:40:41,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:40:41,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:40:41,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:40:41,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:41:03,740:INFO:PyCaret ClassificationExperiment
2025-04-04 23:41:03,740:INFO:Logging name: clf-default-name
2025-04-04 23:41:03,740:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-04 23:41:03,740:INFO:version 3.3.2
2025-04-04 23:41:03,740:INFO:Initializing setup()
2025-04-04 23:41:03,740:INFO:self.USI: 5753
2025-04-04 23:41:03,740:INFO:self._variable_keys: {'y_test', 'data', 'logging_param', 'exp_name_log', 'fold_groups_param', 'idx', 'gpu_param', 'X_train', 'fix_imbalance', 'is_multiclass', 'pipeline', 'fold_shuffle_param', 'memory', 'target_param', 'seed', 'exp_id', 'y', '_ml_usecase', 'n_jobs_param', '_available_plots', 'html_param', 'X_test', 'y_train', 'USI', 'fold_generator', 'X', 'gpu_n_jobs_param', 'log_plots_param'}
2025-04-04 23:41:03,740:INFO:Checking environment
2025-04-04 23:41:03,740:INFO:python_version: 3.9.21
2025-04-04 23:41:03,740:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-04 23:41:03,740:INFO:machine: AMD64
2025-04-04 23:41:03,740:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-04 23:41:03,747:INFO:Memory: svmem(total=137112563712, available=108604780544, percent=20.8, used=28507783168, free=108604780544)
2025-04-04 23:41:03,747:INFO:Physical Core: 24
2025-04-04 23:41:03,747:INFO:Logical Core: 32
2025-04-04 23:41:03,747:INFO:Checking libraries
2025-04-04 23:41:03,747:INFO:System:
2025-04-04 23:41:03,747:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-04 23:41:03,747:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-04 23:41:03,747:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-04 23:41:03,747:INFO:PyCaret required dependencies:
2025-04-04 23:41:03,790:INFO:                 pip: 25.0
2025-04-04 23:41:03,791:INFO:          setuptools: 72.1.0
2025-04-04 23:41:03,791:INFO:             pycaret: 3.3.2
2025-04-04 23:41:03,791:INFO:             IPython: 8.18.1
2025-04-04 23:41:03,791:INFO:          ipywidgets: 8.1.5
2025-04-04 23:41:03,791:INFO:                tqdm: 4.67.1
2025-04-04 23:41:03,791:INFO:               numpy: 1.26.4
2025-04-04 23:41:03,791:INFO:              pandas: 2.1.4
2025-04-04 23:41:03,791:INFO:              jinja2: 3.1.6
2025-04-04 23:41:03,791:INFO:               scipy: 1.11.4
2025-04-04 23:41:03,791:INFO:              joblib: 1.3.2
2025-04-04 23:41:03,791:INFO:             sklearn: 1.4.2
2025-04-04 23:41:03,791:INFO:                pyod: 2.0.4
2025-04-04 23:41:03,791:INFO:            imblearn: 0.12.4
2025-04-04 23:41:03,791:INFO:   category_encoders: 2.6.4
2025-04-04 23:41:03,791:INFO:            lightgbm: 4.6.0
2025-04-04 23:41:03,791:INFO:               numba: 0.60.0
2025-04-04 23:41:03,791:INFO:            requests: 2.32.3
2025-04-04 23:41:03,791:INFO:          matplotlib: 3.7.5
2025-04-04 23:41:03,791:INFO:          scikitplot: 0.3.7
2025-04-04 23:41:03,791:INFO:         yellowbrick: 1.5
2025-04-04 23:41:03,791:INFO:              plotly: 5.24.1
2025-04-04 23:41:03,791:INFO:    plotly-resampler: Not installed
2025-04-04 23:41:03,791:INFO:             kaleido: 0.2.1
2025-04-04 23:41:03,791:INFO:           schemdraw: 0.15
2025-04-04 23:41:03,791:INFO:         statsmodels: 0.14.4
2025-04-04 23:41:03,791:INFO:              sktime: 0.26.0
2025-04-04 23:41:03,791:INFO:               tbats: 1.1.3
2025-04-04 23:41:03,791:INFO:            pmdarima: 2.0.4
2025-04-04 23:41:03,791:INFO:              psutil: 7.0.0
2025-04-04 23:41:03,791:INFO:          markupsafe: 3.0.2
2025-04-04 23:41:03,791:INFO:             pickle5: Not installed
2025-04-04 23:41:03,791:INFO:         cloudpickle: 3.1.1
2025-04-04 23:41:03,791:INFO:         deprecation: 2.1.0
2025-04-04 23:41:03,791:INFO:              xxhash: 3.5.0
2025-04-04 23:41:03,791:INFO:           wurlitzer: Not installed
2025-04-04 23:41:03,791:INFO:PyCaret optional dependencies:
2025-04-04 23:41:03,797:INFO:                shap: Not installed
2025-04-04 23:41:03,797:INFO:           interpret: Not installed
2025-04-04 23:41:03,797:INFO:                umap: Not installed
2025-04-04 23:41:03,797:INFO:     ydata_profiling: Not installed
2025-04-04 23:41:03,797:INFO:  explainerdashboard: Not installed
2025-04-04 23:41:03,797:INFO:             autoviz: Not installed
2025-04-04 23:41:03,797:INFO:           fairlearn: Not installed
2025-04-04 23:41:03,797:INFO:          deepchecks: Not installed
2025-04-04 23:41:03,797:INFO:             xgboost: Not installed
2025-04-04 23:41:03,797:INFO:            catboost: Not installed
2025-04-04 23:41:03,797:INFO:              kmodes: Not installed
2025-04-04 23:41:03,797:INFO:             mlxtend: Not installed
2025-04-04 23:41:03,797:INFO:       statsforecast: Not installed
2025-04-04 23:41:03,797:INFO:        tune_sklearn: Not installed
2025-04-04 23:41:03,797:INFO:                 ray: Not installed
2025-04-04 23:41:03,797:INFO:            hyperopt: Not installed
2025-04-04 23:41:03,797:INFO:              optuna: Not installed
2025-04-04 23:41:03,797:INFO:               skopt: Not installed
2025-04-04 23:41:03,797:INFO:              mlflow: Not installed
2025-04-04 23:41:03,797:INFO:              gradio: Not installed
2025-04-04 23:41:03,797:INFO:             fastapi: Not installed
2025-04-04 23:41:03,797:INFO:             uvicorn: Not installed
2025-04-04 23:41:03,797:INFO:              m2cgen: Not installed
2025-04-04 23:41:03,797:INFO:           evidently: Not installed
2025-04-04 23:41:03,797:INFO:               fugue: Not installed
2025-04-04 23:41:03,797:INFO:           streamlit: Not installed
2025-04-04 23:41:03,797:INFO:             prophet: Not installed
2025-04-04 23:41:03,797:INFO:None
2025-04-04 23:41:03,797:INFO:Set up data.
2025-04-04 23:41:03,803:INFO:Set up folding strategy.
2025-04-04 23:41:03,803:INFO:Set up train/test split.
2025-04-04 23:41:03,807:INFO:Set up index.
2025-04-04 23:41:03,807:INFO:Assigning column types.
2025-04-04 23:41:03,811:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-04 23:41:03,832:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-04 23:41:03,834:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:41:03,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:03,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:03,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-04 23:41:03,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:41:03,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:03,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:03,935:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-04 23:41:03,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:41:03,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:03,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:03,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:41:04,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,002:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-04 23:41:04,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,068:INFO:Preparing preprocessing pipeline...
2025-04-04 23:41:04,069:INFO:Set up simple imputation.
2025-04-04 23:41:04,069:INFO:Set up feature normalization.
2025-04-04 23:41:04,070:INFO:Set up column name cleaning.
2025-04-04 23:41:04,093:INFO:Finished creating preprocessing pipeline.
2025-04-04 23:41:04,096:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-04-04 23:41:04,096:INFO:Creating final display dataframe.
2025-04-04 23:41:04,170:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                 0
2                   Target type            Binary
3           Original data shape        (1000, 61)
4        Transformed data shape        (1000, 61)
5   Transformed train set shape         (990, 61)
6    Transformed test set shape          (10, 61)
7              Numeric features                60
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5753
2025-04-04 23:41:04,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,238:INFO:setup() successfully completed in 0.5s...............
2025-04-04 23:41:04,253:INFO:gpu_param set to False
2025-04-04 23:41:04,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,320:INFO:gpu_param set to False
2025-04-04 23:41:04,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:41:04,384:INFO:Initializing compare_models()
2025-04-04 23:41:04,384:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, include=['dt', 'rf', 'mlp', 'lr', 'et', 'lda', 'ridge', 'gbc', 'qda', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=100, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, 'include': ['dt', 'rf', 'mlp', 'lr', 'et', 'lda', 'ridge', 'gbc', 'qda', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 100, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-04 23:41:04,384:INFO:Checking exceptions
2025-04-04 23:41:04,387:INFO:Preparing display monitor
2025-04-04 23:41:04,398:INFO:Initializing Decision Tree Classifier
2025-04-04 23:41:04,398:INFO:Total runtime is 0.0 minutes
2025-04-04 23:41:04,400:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:04,400:INFO:Initializing create_model()
2025-04-04 23:41:04,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:04,400:INFO:Checking exceptions
2025-04-04 23:41:04,400:INFO:Importing libraries
2025-04-04 23:41:04,400:INFO:Copying training dataset
2025-04-04 23:41:04,404:INFO:Defining folds
2025-04-04 23:41:04,404:INFO:Declaring metric variables
2025-04-04 23:41:04,406:INFO:Importing untrained model
2025-04-04 23:41:04,408:INFO:Decision Tree Classifier Imported successfully
2025-04-04 23:41:04,411:INFO:Starting cross validation
2025-04-04 23:41:04,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:06,676:INFO:Calculating mean and std
2025-04-04 23:41:06,677:INFO:Creating metrics dataframe
2025-04-04 23:41:06,680:INFO:Uploading results into container
2025-04-04 23:41:06,680:INFO:Uploading model into container now
2025-04-04 23:41:06,681:INFO:_master_model_container: 1
2025-04-04 23:41:06,681:INFO:_display_container: 2
2025-04-04 23:41:06,681:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-04 23:41:06,681:INFO:create_model() successfully completed......................................
2025-04-04 23:41:06,745:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:06,745:INFO:Creating metrics dataframe
2025-04-04 23:41:06,749:INFO:Initializing Random Forest Classifier
2025-04-04 23:41:06,749:INFO:Total runtime is 0.03917668263117472 minutes
2025-04-04 23:41:06,750:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:06,750:INFO:Initializing create_model()
2025-04-04 23:41:06,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:06,751:INFO:Checking exceptions
2025-04-04 23:41:06,751:INFO:Importing libraries
2025-04-04 23:41:06,751:INFO:Copying training dataset
2025-04-04 23:41:06,756:INFO:Defining folds
2025-04-04 23:41:06,756:INFO:Declaring metric variables
2025-04-04 23:41:06,757:INFO:Importing untrained model
2025-04-04 23:41:06,759:INFO:Random Forest Classifier Imported successfully
2025-04-04 23:41:06,762:INFO:Starting cross validation
2025-04-04 23:41:06,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:08,449:INFO:Calculating mean and std
2025-04-04 23:41:08,450:INFO:Creating metrics dataframe
2025-04-04 23:41:08,451:INFO:Uploading results into container
2025-04-04 23:41:08,451:INFO:Uploading model into container now
2025-04-04 23:41:08,452:INFO:_master_model_container: 2
2025-04-04 23:41:08,452:INFO:_display_container: 2
2025-04-04 23:41:08,452:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-04 23:41:08,452:INFO:create_model() successfully completed......................................
2025-04-04 23:41:08,509:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:08,509:INFO:Creating metrics dataframe
2025-04-04 23:41:08,513:INFO:Initializing MLP Classifier
2025-04-04 23:41:08,513:INFO:Total runtime is 0.06857063770294189 minutes
2025-04-04 23:41:08,515:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:08,515:INFO:Initializing create_model()
2025-04-04 23:41:08,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:08,515:INFO:Checking exceptions
2025-04-04 23:41:08,515:INFO:Importing libraries
2025-04-04 23:41:08,515:INFO:Copying training dataset
2025-04-04 23:41:08,519:INFO:Defining folds
2025-04-04 23:41:08,519:INFO:Declaring metric variables
2025-04-04 23:41:08,520:INFO:Importing untrained model
2025-04-04 23:41:08,522:INFO:MLP Classifier Imported successfully
2025-04-04 23:41:08,525:INFO:Starting cross validation
2025-04-04 23:41:08,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:10,326:INFO:Calculating mean and std
2025-04-04 23:41:10,327:INFO:Creating metrics dataframe
2025-04-04 23:41:10,328:INFO:Uploading results into container
2025-04-04 23:41:10,329:INFO:Uploading model into container now
2025-04-04 23:41:10,329:INFO:_master_model_container: 3
2025-04-04 23:41:10,329:INFO:_display_container: 2
2025-04-04 23:41:10,330:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-04 23:41:10,330:INFO:create_model() successfully completed......................................
2025-04-04 23:41:10,386:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:10,386:INFO:Creating metrics dataframe
2025-04-04 23:41:10,390:INFO:Initializing Logistic Regression
2025-04-04 23:41:10,390:INFO:Total runtime is 0.09985899130503337 minutes
2025-04-04 23:41:10,392:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:10,392:INFO:Initializing create_model()
2025-04-04 23:41:10,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:10,393:INFO:Checking exceptions
2025-04-04 23:41:10,393:INFO:Importing libraries
2025-04-04 23:41:10,393:INFO:Copying training dataset
2025-04-04 23:41:10,397:INFO:Defining folds
2025-04-04 23:41:10,397:INFO:Declaring metric variables
2025-04-04 23:41:10,399:INFO:Importing untrained model
2025-04-04 23:41:10,400:INFO:Logistic Regression Imported successfully
2025-04-04 23:41:10,403:INFO:Starting cross validation
2025-04-04 23:41:10,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:11,455:INFO:Calculating mean and std
2025-04-04 23:41:11,456:INFO:Creating metrics dataframe
2025-04-04 23:41:11,458:INFO:Uploading results into container
2025-04-04 23:41:11,458:INFO:Uploading model into container now
2025-04-04 23:41:11,458:INFO:_master_model_container: 4
2025-04-04 23:41:11,458:INFO:_display_container: 2
2025-04-04 23:41:11,459:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:41:11,459:INFO:create_model() successfully completed......................................
2025-04-04 23:41:11,514:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:11,514:INFO:Creating metrics dataframe
2025-04-04 23:41:11,518:INFO:Initializing Extra Trees Classifier
2025-04-04 23:41:11,518:INFO:Total runtime is 0.11866859197616578 minutes
2025-04-04 23:41:11,520:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:11,520:INFO:Initializing create_model()
2025-04-04 23:41:11,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:11,520:INFO:Checking exceptions
2025-04-04 23:41:11,520:INFO:Importing libraries
2025-04-04 23:41:11,520:INFO:Copying training dataset
2025-04-04 23:41:11,524:INFO:Defining folds
2025-04-04 23:41:11,524:INFO:Declaring metric variables
2025-04-04 23:41:11,526:INFO:Importing untrained model
2025-04-04 23:41:11,528:INFO:Extra Trees Classifier Imported successfully
2025-04-04 23:41:11,531:INFO:Starting cross validation
2025-04-04 23:41:11,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:11,737:INFO:Calculating mean and std
2025-04-04 23:41:11,738:INFO:Creating metrics dataframe
2025-04-04 23:41:11,739:INFO:Uploading results into container
2025-04-04 23:41:11,739:INFO:Uploading model into container now
2025-04-04 23:41:11,740:INFO:_master_model_container: 5
2025-04-04 23:41:11,740:INFO:_display_container: 2
2025-04-04 23:41:11,740:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-04 23:41:11,740:INFO:create_model() successfully completed......................................
2025-04-04 23:41:11,791:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:11,791:INFO:Creating metrics dataframe
2025-04-04 23:41:11,795:INFO:Initializing Linear Discriminant Analysis
2025-04-04 23:41:11,795:INFO:Total runtime is 0.12327535152435304 minutes
2025-04-04 23:41:11,796:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:11,797:INFO:Initializing create_model()
2025-04-04 23:41:11,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:11,797:INFO:Checking exceptions
2025-04-04 23:41:11,797:INFO:Importing libraries
2025-04-04 23:41:11,797:INFO:Copying training dataset
2025-04-04 23:41:11,801:INFO:Defining folds
2025-04-04 23:41:11,801:INFO:Declaring metric variables
2025-04-04 23:41:11,803:INFO:Importing untrained model
2025-04-04 23:41:11,804:INFO:Linear Discriminant Analysis Imported successfully
2025-04-04 23:41:11,807:INFO:Starting cross validation
2025-04-04 23:41:11,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:11,859:INFO:Calculating mean and std
2025-04-04 23:41:11,860:INFO:Creating metrics dataframe
2025-04-04 23:41:11,861:INFO:Uploading results into container
2025-04-04 23:41:11,862:INFO:Uploading model into container now
2025-04-04 23:41:11,862:INFO:_master_model_container: 6
2025-04-04 23:41:11,862:INFO:_display_container: 2
2025-04-04 23:41:11,862:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:41:11,862:INFO:create_model() successfully completed......................................
2025-04-04 23:41:11,913:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:11,913:INFO:Creating metrics dataframe
2025-04-04 23:41:11,917:INFO:Initializing Ridge Classifier
2025-04-04 23:41:11,917:INFO:Total runtime is 0.12530868848164878 minutes
2025-04-04 23:41:11,919:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:11,919:INFO:Initializing create_model()
2025-04-04 23:41:11,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:11,919:INFO:Checking exceptions
2025-04-04 23:41:11,919:INFO:Importing libraries
2025-04-04 23:41:11,919:INFO:Copying training dataset
2025-04-04 23:41:11,923:INFO:Defining folds
2025-04-04 23:41:11,924:INFO:Declaring metric variables
2025-04-04 23:41:11,925:INFO:Importing untrained model
2025-04-04 23:41:11,926:INFO:Ridge Classifier Imported successfully
2025-04-04 23:41:11,929:INFO:Starting cross validation
2025-04-04 23:41:11,930:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:11,981:INFO:Calculating mean and std
2025-04-04 23:41:11,982:INFO:Creating metrics dataframe
2025-04-04 23:41:11,983:INFO:Uploading results into container
2025-04-04 23:41:11,983:INFO:Uploading model into container now
2025-04-04 23:41:11,983:INFO:_master_model_container: 7
2025-04-04 23:41:11,983:INFO:_display_container: 2
2025-04-04 23:41:11,984:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-04 23:41:11,984:INFO:create_model() successfully completed......................................
2025-04-04 23:41:12,033:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:12,033:INFO:Creating metrics dataframe
2025-04-04 23:41:12,036:INFO:Initializing Gradient Boosting Classifier
2025-04-04 23:41:12,036:INFO:Total runtime is 0.1273011366526286 minutes
2025-04-04 23:41:12,038:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:12,038:INFO:Initializing create_model()
2025-04-04 23:41:12,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:12,038:INFO:Checking exceptions
2025-04-04 23:41:12,038:INFO:Importing libraries
2025-04-04 23:41:12,038:INFO:Copying training dataset
2025-04-04 23:41:12,043:INFO:Defining folds
2025-04-04 23:41:12,043:INFO:Declaring metric variables
2025-04-04 23:41:12,044:INFO:Importing untrained model
2025-04-04 23:41:12,045:INFO:Gradient Boosting Classifier Imported successfully
2025-04-04 23:41:12,048:INFO:Starting cross validation
2025-04-04 23:41:12,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:13,418:INFO:Calculating mean and std
2025-04-04 23:41:13,419:INFO:Creating metrics dataframe
2025-04-04 23:41:13,420:INFO:Uploading results into container
2025-04-04 23:41:13,420:INFO:Uploading model into container now
2025-04-04 23:41:13,421:INFO:_master_model_container: 8
2025-04-04 23:41:13,421:INFO:_display_container: 2
2025-04-04 23:41:13,421:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-04 23:41:13,421:INFO:create_model() successfully completed......................................
2025-04-04 23:41:13,472:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:13,473:INFO:Creating metrics dataframe
2025-04-04 23:41:13,477:INFO:Initializing Quadratic Discriminant Analysis
2025-04-04 23:41:13,477:INFO:Total runtime is 0.15130672852198285 minutes
2025-04-04 23:41:13,478:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:13,478:INFO:Initializing create_model()
2025-04-04 23:41:13,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:13,479:INFO:Checking exceptions
2025-04-04 23:41:13,479:INFO:Importing libraries
2025-04-04 23:41:13,479:INFO:Copying training dataset
2025-04-04 23:41:13,482:INFO:Defining folds
2025-04-04 23:41:13,482:INFO:Declaring metric variables
2025-04-04 23:41:13,484:INFO:Importing untrained model
2025-04-04 23:41:13,485:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-04 23:41:13,488:INFO:Starting cross validation
2025-04-04 23:41:13,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:13,541:INFO:Calculating mean and std
2025-04-04 23:41:13,542:INFO:Creating metrics dataframe
2025-04-04 23:41:13,542:INFO:Uploading results into container
2025-04-04 23:41:13,543:INFO:Uploading model into container now
2025-04-04 23:41:13,543:INFO:_master_model_container: 9
2025-04-04 23:41:13,543:INFO:_display_container: 2
2025-04-04 23:41:13,543:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-04 23:41:13,543:INFO:create_model() successfully completed......................................
2025-04-04 23:41:13,595:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:13,595:INFO:Creating metrics dataframe
2025-04-04 23:41:13,599:INFO:Initializing custom model SVM - Radial Kernel
2025-04-04 23:41:13,599:INFO:Total runtime is 0.15334980885187788 minutes
2025-04-04 23:41:13,601:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:13,601:INFO:Initializing create_model()
2025-04-04 23:41:13,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC284610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:13,601:INFO:Checking exceptions
2025-04-04 23:41:13,601:INFO:Importing libraries
2025-04-04 23:41:13,601:INFO:Copying training dataset
2025-04-04 23:41:13,606:INFO:Defining folds
2025-04-04 23:41:13,606:INFO:Declaring metric variables
2025-04-04 23:41:13,607:INFO:Importing untrained model
2025-04-04 23:41:13,607:INFO:Declaring custom model
2025-04-04 23:41:13,609:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:41:13,612:INFO:Starting cross validation
2025-04-04 23:41:13,612:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:13,682:INFO:Calculating mean and std
2025-04-04 23:41:13,683:INFO:Creating metrics dataframe
2025-04-04 23:41:13,684:INFO:Uploading results into container
2025-04-04 23:41:13,684:INFO:Uploading model into container now
2025-04-04 23:41:13,684:INFO:_master_model_container: 10
2025-04-04 23:41:13,684:INFO:_display_container: 2
2025-04-04 23:41:13,684:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:41:13,684:INFO:create_model() successfully completed......................................
2025-04-04 23:41:13,734:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:13,734:INFO:Creating metrics dataframe
2025-04-04 23:41:13,739:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-04-04 23:41:13,743:INFO:Initializing create_model()
2025-04-04 23:41:13,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:13,743:INFO:Checking exceptions
2025-04-04 23:41:13,744:INFO:Importing libraries
2025-04-04 23:41:13,744:INFO:Copying training dataset
2025-04-04 23:41:13,748:INFO:Defining folds
2025-04-04 23:41:13,748:INFO:Declaring metric variables
2025-04-04 23:41:13,748:INFO:Importing untrained model
2025-04-04 23:41:13,748:INFO:Declaring custom model
2025-04-04 23:41:13,748:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:41:13,749:INFO:Cross validation set to False
2025-04-04 23:41:13,749:INFO:Fitting Model
2025-04-04 23:41:13,782:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:41:13,782:INFO:create_model() successfully completed......................................
2025-04-04 23:41:13,837:INFO:Initializing create_model()
2025-04-04 23:41:13,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:13,837:INFO:Checking exceptions
2025-04-04 23:41:13,839:INFO:Importing libraries
2025-04-04 23:41:13,839:INFO:Copying training dataset
2025-04-04 23:41:13,843:INFO:Defining folds
2025-04-04 23:41:13,843:INFO:Declaring metric variables
2025-04-04 23:41:13,843:INFO:Importing untrained model
2025-04-04 23:41:13,843:INFO:Declaring custom model
2025-04-04 23:41:13,843:INFO:Logistic Regression Imported successfully
2025-04-04 23:41:13,843:INFO:Cross validation set to False
2025-04-04 23:41:13,843:INFO:Fitting Model
2025-04-04 23:41:13,859:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:41:13,859:INFO:create_model() successfully completed......................................
2025-04-04 23:41:13,913:INFO:Initializing create_model()
2025-04-04 23:41:13,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:13,913:INFO:Checking exceptions
2025-04-04 23:41:13,914:INFO:Importing libraries
2025-04-04 23:41:13,914:INFO:Copying training dataset
2025-04-04 23:41:13,918:INFO:Defining folds
2025-04-04 23:41:13,918:INFO:Declaring metric variables
2025-04-04 23:41:13,919:INFO:Importing untrained model
2025-04-04 23:41:13,919:INFO:Declaring custom model
2025-04-04 23:41:13,919:INFO:MLP Classifier Imported successfully
2025-04-04 23:41:13,919:INFO:Cross validation set to False
2025-04-04 23:41:13,919:INFO:Fitting Model
2025-04-04 23:41:14,561:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-04 23:41:14,561:INFO:create_model() successfully completed......................................
2025-04-04 23:41:14,614:INFO:Initializing create_model()
2025-04-04 23:41:14,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:14,614:INFO:Checking exceptions
2025-04-04 23:41:14,615:INFO:Importing libraries
2025-04-04 23:41:14,615:INFO:Copying training dataset
2025-04-04 23:41:14,619:INFO:Defining folds
2025-04-04 23:41:14,619:INFO:Declaring metric variables
2025-04-04 23:41:14,619:INFO:Importing untrained model
2025-04-04 23:41:14,619:INFO:Declaring custom model
2025-04-04 23:41:14,619:INFO:Ridge Classifier Imported successfully
2025-04-04 23:41:14,620:INFO:Cross validation set to False
2025-04-04 23:41:14,620:INFO:Fitting Model
2025-04-04 23:41:14,628:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-04 23:41:14,628:INFO:create_model() successfully completed......................................
2025-04-04 23:41:14,679:INFO:Initializing create_model()
2025-04-04 23:41:14,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:14,679:INFO:Checking exceptions
2025-04-04 23:41:14,680:INFO:Importing libraries
2025-04-04 23:41:14,680:INFO:Copying training dataset
2025-04-04 23:41:14,684:INFO:Defining folds
2025-04-04 23:41:14,684:INFO:Declaring metric variables
2025-04-04 23:41:14,684:INFO:Importing untrained model
2025-04-04 23:41:14,684:INFO:Declaring custom model
2025-04-04 23:41:14,685:INFO:Extra Trees Classifier Imported successfully
2025-04-04 23:41:14,685:INFO:Cross validation set to False
2025-04-04 23:41:14,685:INFO:Fitting Model
2025-04-04 23:41:14,759:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-04 23:41:14,759:INFO:create_model() successfully completed......................................
2025-04-04 23:41:14,811:INFO:Initializing create_model()
2025-04-04 23:41:14,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:14,811:INFO:Checking exceptions
2025-04-04 23:41:14,812:INFO:Importing libraries
2025-04-04 23:41:14,812:INFO:Copying training dataset
2025-04-04 23:41:14,817:INFO:Defining folds
2025-04-04 23:41:14,817:INFO:Declaring metric variables
2025-04-04 23:41:14,817:INFO:Importing untrained model
2025-04-04 23:41:14,817:INFO:Declaring custom model
2025-04-04 23:41:14,817:INFO:Linear Discriminant Analysis Imported successfully
2025-04-04 23:41:14,818:INFO:Cross validation set to False
2025-04-04 23:41:14,818:INFO:Fitting Model
2025-04-04 23:41:14,842:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:41:14,842:INFO:create_model() successfully completed......................................
2025-04-04 23:41:14,892:INFO:Initializing create_model()
2025-04-04 23:41:14,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:14,893:INFO:Checking exceptions
2025-04-04 23:41:14,894:INFO:Importing libraries
2025-04-04 23:41:14,894:INFO:Copying training dataset
2025-04-04 23:41:14,897:INFO:Defining folds
2025-04-04 23:41:14,897:INFO:Declaring metric variables
2025-04-04 23:41:14,897:INFO:Importing untrained model
2025-04-04 23:41:14,897:INFO:Declaring custom model
2025-04-04 23:41:14,898:INFO:Gradient Boosting Classifier Imported successfully
2025-04-04 23:41:14,898:INFO:Cross validation set to False
2025-04-04 23:41:14,898:INFO:Fitting Model
2025-04-04 23:41:16,057:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-04 23:41:16,057:INFO:create_model() successfully completed......................................
2025-04-04 23:41:16,114:INFO:Initializing create_model()
2025-04-04 23:41:16,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:16,114:INFO:Checking exceptions
2025-04-04 23:41:16,115:INFO:Importing libraries
2025-04-04 23:41:16,115:INFO:Copying training dataset
2025-04-04 23:41:16,119:INFO:Defining folds
2025-04-04 23:41:16,119:INFO:Declaring metric variables
2025-04-04 23:41:16,119:INFO:Importing untrained model
2025-04-04 23:41:16,119:INFO:Declaring custom model
2025-04-04 23:41:16,120:INFO:Random Forest Classifier Imported successfully
2025-04-04 23:41:16,120:INFO:Cross validation set to False
2025-04-04 23:41:16,120:INFO:Fitting Model
2025-04-04 23:41:16,230:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-04 23:41:16,230:INFO:create_model() successfully completed......................................
2025-04-04 23:41:16,288:INFO:Initializing create_model()
2025-04-04 23:41:16,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:16,289:INFO:Checking exceptions
2025-04-04 23:41:16,289:INFO:Importing libraries
2025-04-04 23:41:16,289:INFO:Copying training dataset
2025-04-04 23:41:16,295:INFO:Defining folds
2025-04-04 23:41:16,295:INFO:Declaring metric variables
2025-04-04 23:41:16,295:INFO:Importing untrained model
2025-04-04 23:41:16,295:INFO:Declaring custom model
2025-04-04 23:41:16,296:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-04 23:41:16,296:INFO:Cross validation set to False
2025-04-04 23:41:16,296:INFO:Fitting Model
2025-04-04 23:41:16,326:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-04 23:41:16,326:INFO:create_model() successfully completed......................................
2025-04-04 23:41:16,383:INFO:Initializing create_model()
2025-04-04 23:41:16,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:16,383:INFO:Checking exceptions
2025-04-04 23:41:16,384:INFO:Importing libraries
2025-04-04 23:41:16,384:INFO:Copying training dataset
2025-04-04 23:41:16,389:INFO:Defining folds
2025-04-04 23:41:16,389:INFO:Declaring metric variables
2025-04-04 23:41:16,389:INFO:Importing untrained model
2025-04-04 23:41:16,389:INFO:Declaring custom model
2025-04-04 23:41:16,389:INFO:Decision Tree Classifier Imported successfully
2025-04-04 23:41:16,389:INFO:Cross validation set to False
2025-04-04 23:41:16,389:INFO:Fitting Model
2025-04-04 23:41:16,427:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-04 23:41:16,427:INFO:create_model() successfully completed......................................
2025-04-04 23:41:16,485:INFO:_master_model_container: 10
2025-04-04 23:41:16,485:INFO:_display_container: 2
2025-04-04 23:41:16,487:INFO:[SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')]
2025-04-04 23:41:16,487:INFO:compare_models() successfully completed......................................
2025-04-04 23:41:16,494:INFO:Initializing tune_model()
2025-04-04 23:41:16,494:INFO:tune_model(estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=4, round=4, n_iter=25, custom_grid={'probability': [True], 'C': [1.0], 'kernel': ['linear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>)
2025-04-04 23:41:16,494:INFO:Checking exceptions
2025-04-04 23:41:16,504:INFO:Copying training dataset
2025-04-04 23:41:16,508:INFO:Checking base model
2025-04-04 23:41:16,508:INFO:Base model : SVM - Radial Kernel
2025-04-04 23:41:16,509:INFO:Declaring metric variables
2025-04-04 23:41:16,511:INFO:Defining Hyperparameters
2025-04-04 23:41:16,566:INFO:custom_grid: {'actual_estimator__probability': [True], 'actual_estimator__C': [1.0], 'actual_estimator__kernel': ['linear']}
2025-04-04 23:41:16,566:INFO:Tuning with n_jobs=-1
2025-04-04 23:41:16,566:INFO:Initializing GridSearchCV
2025-04-04 23:41:16,616:INFO:best_params: {'actual_estimator__C': 1.0, 'actual_estimator__kernel': 'linear', 'actual_estimator__probability': True}
2025-04-04 23:41:16,616:INFO:Hyperparameter search completed
2025-04-04 23:41:16,616:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:16,617:INFO:Initializing create_model()
2025-04-04 23:41:16,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017ADC532640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1.0, 'kernel': 'linear', 'probability': True})
2025-04-04 23:41:16,617:INFO:Checking exceptions
2025-04-04 23:41:16,617:INFO:Importing libraries
2025-04-04 23:41:16,617:INFO:Copying training dataset
2025-04-04 23:41:16,621:INFO:Defining folds
2025-04-04 23:41:16,621:INFO:Declaring metric variables
2025-04-04 23:41:16,623:INFO:Importing untrained model
2025-04-04 23:41:16,623:INFO:Declaring custom model
2025-04-04 23:41:16,625:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:41:16,627:INFO:Starting cross validation
2025-04-04 23:41:16,628:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:16,680:INFO:Calculating mean and std
2025-04-04 23:41:16,680:INFO:Creating metrics dataframe
2025-04-04 23:41:16,683:INFO:Finalizing model
2025-04-04 23:41:16,720:INFO:Uploading results into container
2025-04-04 23:41:16,721:INFO:Uploading model into container now
2025-04-04 23:41:16,721:INFO:_master_model_container: 11
2025-04-04 23:41:16,721:INFO:_display_container: 3
2025-04-04 23:41:16,721:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:41:16,721:INFO:create_model() successfully completed......................................
2025-04-04 23:41:16,772:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:16,772:INFO:choose_better activated
2025-04-04 23:41:16,773:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:16,774:INFO:Initializing create_model()
2025-04-04 23:41:16,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:16,774:INFO:Checking exceptions
2025-04-04 23:41:16,775:INFO:Importing libraries
2025-04-04 23:41:16,775:INFO:Copying training dataset
2025-04-04 23:41:16,779:INFO:Defining folds
2025-04-04 23:41:16,779:INFO:Declaring metric variables
2025-04-04 23:41:16,779:INFO:Importing untrained model
2025-04-04 23:41:16,779:INFO:Declaring custom model
2025-04-04 23:41:16,779:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:41:16,779:INFO:Starting cross validation
2025-04-04 23:41:16,780:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:16,835:INFO:Calculating mean and std
2025-04-04 23:41:16,835:INFO:Creating metrics dataframe
2025-04-04 23:41:16,836:INFO:Finalizing model
2025-04-04 23:41:16,872:INFO:Uploading results into container
2025-04-04 23:41:16,872:INFO:Uploading model into container now
2025-04-04 23:41:16,873:INFO:_master_model_container: 12
2025-04-04 23:41:16,873:INFO:_display_container: 4
2025-04-04 23:41:16,873:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:41:16,873:INFO:create_model() successfully completed......................................
2025-04-04 23:41:16,924:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:16,924:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.9994
2025-04-04 23:41:16,924:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.9994
2025-04-04 23:41:16,924:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) is best model
2025-04-04 23:41:16,924:INFO:choose_better completed
2025-04-04 23:41:16,925:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:41:16,929:INFO:_master_model_container: 12
2025-04-04 23:41:16,929:INFO:_display_container: 3
2025-04-04 23:41:16,930:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:41:16,930:INFO:tune_model() successfully completed......................................
2025-04-04 23:41:16,986:INFO:Initializing tune_model()
2025-04-04 23:41:16,986:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=4, round=4, n_iter=25, custom_grid={'C': [1], 'solver': ['liblinear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>)
2025-04-04 23:41:16,986:INFO:Checking exceptions
2025-04-04 23:41:16,995:INFO:Copying training dataset
2025-04-04 23:41:16,998:INFO:Checking base model
2025-04-04 23:41:16,998:INFO:Base model : Logistic Regression
2025-04-04 23:41:16,999:INFO:Declaring metric variables
2025-04-04 23:41:17,001:INFO:Defining Hyperparameters
2025-04-04 23:41:17,055:INFO:custom_grid: {'actual_estimator__C': [1], 'actual_estimator__solver': ['liblinear']}
2025-04-04 23:41:17,055:INFO:Tuning with n_jobs=-1
2025-04-04 23:41:17,055:INFO:Initializing GridSearchCV
2025-04-04 23:41:17,085:INFO:best_params: {'actual_estimator__C': 1, 'actual_estimator__solver': 'liblinear'}
2025-04-04 23:41:17,085:INFO:Hyperparameter search completed
2025-04-04 23:41:17,085:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:17,086:INFO:Initializing create_model()
2025-04-04 23:41:17,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AE404E8B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1, 'solver': 'liblinear'})
2025-04-04 23:41:17,086:INFO:Checking exceptions
2025-04-04 23:41:17,086:INFO:Importing libraries
2025-04-04 23:41:17,086:INFO:Copying training dataset
2025-04-04 23:41:17,090:INFO:Defining folds
2025-04-04 23:41:17,090:INFO:Declaring metric variables
2025-04-04 23:41:17,092:INFO:Importing untrained model
2025-04-04 23:41:17,092:INFO:Declaring custom model
2025-04-04 23:41:17,094:INFO:Logistic Regression Imported successfully
2025-04-04 23:41:17,097:INFO:Starting cross validation
2025-04-04 23:41:17,097:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:17,132:INFO:Calculating mean and std
2025-04-04 23:41:17,132:INFO:Creating metrics dataframe
2025-04-04 23:41:17,135:INFO:Finalizing model
2025-04-04 23:41:17,148:INFO:Uploading results into container
2025-04-04 23:41:17,148:INFO:Uploading model into container now
2025-04-04 23:41:17,149:INFO:_master_model_container: 13
2025-04-04 23:41:17,149:INFO:_display_container: 4
2025-04-04 23:41:17,149:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:41:17,149:INFO:create_model() successfully completed......................................
2025-04-04 23:41:17,221:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:17,221:INFO:choose_better activated
2025-04-04 23:41:17,223:INFO:SubProcess create_model() called ==================================
2025-04-04 23:41:17,224:INFO:Initializing create_model()
2025-04-04 23:41:17,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:41:17,224:INFO:Checking exceptions
2025-04-04 23:41:17,225:INFO:Importing libraries
2025-04-04 23:41:17,225:INFO:Copying training dataset
2025-04-04 23:41:17,230:INFO:Defining folds
2025-04-04 23:41:17,230:INFO:Declaring metric variables
2025-04-04 23:41:17,230:INFO:Importing untrained model
2025-04-04 23:41:17,230:INFO:Declaring custom model
2025-04-04 23:41:17,231:INFO:Logistic Regression Imported successfully
2025-04-04 23:41:17,231:INFO:Starting cross validation
2025-04-04 23:41:17,231:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:41:17,274:INFO:Calculating mean and std
2025-04-04 23:41:17,274:INFO:Creating metrics dataframe
2025-04-04 23:41:17,275:INFO:Finalizing model
2025-04-04 23:41:17,292:INFO:Uploading results into container
2025-04-04 23:41:17,293:INFO:Uploading model into container now
2025-04-04 23:41:17,293:INFO:_master_model_container: 14
2025-04-04 23:41:17,293:INFO:_display_container: 5
2025-04-04 23:41:17,293:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:41:17,293:INFO:create_model() successfully completed......................................
2025-04-04 23:41:17,353:INFO:SubProcess create_model() end ==================================
2025-04-04 23:41:17,353:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9992
2025-04-04 23:41:17,354:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9992
2025-04-04 23:41:17,354:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-04-04 23:41:17,354:INFO:choose_better completed
2025-04-04 23:41:17,354:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:41:17,362:INFO:_master_model_container: 14
2025-04-04 23:41:17,363:INFO:_display_container: 4
2025-04-04 23:41:17,363:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:41:17,363:INFO:tune_model() successfully completed......................................
2025-04-04 23:41:17,427:INFO:Initializing tune_model()
2025-04-04 23:41:17,427:INFO:tune_model(estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AE1B6BF40>)
2025-04-04 23:41:17,427:INFO:Checking exceptions
2025-04-04 23:41:17,427:ERROR:
'skopt' is a soft dependency and not included in the pycaret installation. Please run: `pip install scikit-optimize` to install.
Alternately, you can install this by running `pip install pycaret[tuners]`
NoneType: None
2025-04-04 23:42:59,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:42:59,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:42:59,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:42:59,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-04 23:43:00,142:INFO:PyCaret ClassificationExperiment
2025-04-04 23:43:00,142:INFO:Logging name: clf-default-name
2025-04-04 23:43:00,142:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-04 23:43:00,142:INFO:version 3.3.2
2025-04-04 23:43:00,142:INFO:Initializing setup()
2025-04-04 23:43:00,142:INFO:self.USI: 7e4c
2025-04-04 23:43:00,142:INFO:self._variable_keys: {'X', 'is_multiclass', 'seed', 'gpu_param', 'fold_groups_param', 'idx', '_ml_usecase', 'fix_imbalance', 'log_plots_param', 'n_jobs_param', '_available_plots', 'fold_generator', 'X_train', 'exp_name_log', 'y', 'gpu_n_jobs_param', 'y_test', 'exp_id', 'y_train', 'X_test', 'target_param', 'html_param', 'data', 'memory', 'fold_shuffle_param', 'USI', 'logging_param', 'pipeline'}
2025-04-04 23:43:00,142:INFO:Checking environment
2025-04-04 23:43:00,142:INFO:python_version: 3.9.21
2025-04-04 23:43:00,142:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-04 23:43:00,142:INFO:machine: AMD64
2025-04-04 23:43:00,142:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-04 23:43:00,147:INFO:Memory: svmem(total=137112563712, available=108587765760, percent=20.8, used=28524797952, free=108587765760)
2025-04-04 23:43:00,147:INFO:Physical Core: 24
2025-04-04 23:43:00,147:INFO:Logical Core: 32
2025-04-04 23:43:00,147:INFO:Checking libraries
2025-04-04 23:43:00,147:INFO:System:
2025-04-04 23:43:00,148:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-04 23:43:00,148:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-04 23:43:00,148:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-04 23:43:00,148:INFO:PyCaret required dependencies:
2025-04-04 23:43:00,160:INFO:                 pip: 25.0
2025-04-04 23:43:00,160:INFO:          setuptools: 72.1.0
2025-04-04 23:43:00,160:INFO:             pycaret: 3.3.2
2025-04-04 23:43:00,160:INFO:             IPython: 8.18.1
2025-04-04 23:43:00,160:INFO:          ipywidgets: 8.1.5
2025-04-04 23:43:00,160:INFO:                tqdm: 4.67.1
2025-04-04 23:43:00,160:INFO:               numpy: 1.26.4
2025-04-04 23:43:00,160:INFO:              pandas: 2.1.4
2025-04-04 23:43:00,160:INFO:              jinja2: 3.1.6
2025-04-04 23:43:00,160:INFO:               scipy: 1.11.4
2025-04-04 23:43:00,160:INFO:              joblib: 1.3.2
2025-04-04 23:43:00,160:INFO:             sklearn: 1.4.2
2025-04-04 23:43:00,160:INFO:                pyod: 2.0.4
2025-04-04 23:43:00,160:INFO:            imblearn: 0.12.4
2025-04-04 23:43:00,160:INFO:   category_encoders: 2.6.4
2025-04-04 23:43:00,160:INFO:            lightgbm: 4.6.0
2025-04-04 23:43:00,160:INFO:               numba: 0.60.0
2025-04-04 23:43:00,160:INFO:            requests: 2.32.3
2025-04-04 23:43:00,160:INFO:          matplotlib: 3.7.5
2025-04-04 23:43:00,160:INFO:          scikitplot: 0.3.7
2025-04-04 23:43:00,160:INFO:         yellowbrick: 1.5
2025-04-04 23:43:00,160:INFO:              plotly: 5.24.1
2025-04-04 23:43:00,160:INFO:    plotly-resampler: Not installed
2025-04-04 23:43:00,160:INFO:             kaleido: 0.2.1
2025-04-04 23:43:00,160:INFO:           schemdraw: 0.15
2025-04-04 23:43:00,160:INFO:         statsmodels: 0.14.4
2025-04-04 23:43:00,160:INFO:              sktime: 0.26.0
2025-04-04 23:43:00,160:INFO:               tbats: 1.1.3
2025-04-04 23:43:00,160:INFO:            pmdarima: 2.0.4
2025-04-04 23:43:00,160:INFO:              psutil: 7.0.0
2025-04-04 23:43:00,160:INFO:          markupsafe: 3.0.2
2025-04-04 23:43:00,161:INFO:             pickle5: Not installed
2025-04-04 23:43:00,161:INFO:         cloudpickle: 3.1.1
2025-04-04 23:43:00,161:INFO:         deprecation: 2.1.0
2025-04-04 23:43:00,161:INFO:              xxhash: 3.5.0
2025-04-04 23:43:00,161:INFO:           wurlitzer: Not installed
2025-04-04 23:43:00,161:INFO:PyCaret optional dependencies:
2025-04-04 23:43:00,166:INFO:                shap: Not installed
2025-04-04 23:43:00,166:INFO:           interpret: Not installed
2025-04-04 23:43:00,166:INFO:                umap: Not installed
2025-04-04 23:43:00,166:INFO:     ydata_profiling: Not installed
2025-04-04 23:43:00,166:INFO:  explainerdashboard: Not installed
2025-04-04 23:43:00,166:INFO:             autoviz: Not installed
2025-04-04 23:43:00,166:INFO:           fairlearn: Not installed
2025-04-04 23:43:00,166:INFO:          deepchecks: Not installed
2025-04-04 23:43:00,166:INFO:             xgboost: Not installed
2025-04-04 23:43:00,166:INFO:            catboost: Not installed
2025-04-04 23:43:00,166:INFO:              kmodes: Not installed
2025-04-04 23:43:00,166:INFO:             mlxtend: Not installed
2025-04-04 23:43:00,166:INFO:       statsforecast: Not installed
2025-04-04 23:43:00,166:INFO:        tune_sklearn: Not installed
2025-04-04 23:43:00,166:INFO:                 ray: Not installed
2025-04-04 23:43:00,166:INFO:            hyperopt: 0.2.7
2025-04-04 23:43:00,166:INFO:              optuna: 4.2.1
2025-04-04 23:43:00,166:INFO:               skopt: 0.10.2
2025-04-04 23:43:00,166:INFO:              mlflow: Not installed
2025-04-04 23:43:00,166:INFO:              gradio: Not installed
2025-04-04 23:43:00,166:INFO:             fastapi: Not installed
2025-04-04 23:43:00,166:INFO:             uvicorn: Not installed
2025-04-04 23:43:00,166:INFO:              m2cgen: Not installed
2025-04-04 23:43:00,166:INFO:           evidently: Not installed
2025-04-04 23:43:00,166:INFO:               fugue: Not installed
2025-04-04 23:43:00,166:INFO:           streamlit: Not installed
2025-04-04 23:43:00,166:INFO:             prophet: Not installed
2025-04-04 23:43:00,166:INFO:None
2025-04-04 23:43:00,166:INFO:Set up data.
2025-04-04 23:43:00,171:INFO:Set up folding strategy.
2025-04-04 23:43:00,171:INFO:Set up train/test split.
2025-04-04 23:43:00,175:INFO:Set up index.
2025-04-04 23:43:00,175:INFO:Assigning column types.
2025-04-04 23:43:00,179:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-04 23:43:00,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-04 23:43:00,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:43:00,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,237:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-04 23:43:00,238:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:43:00,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,251:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-04 23:43:00,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:43:00,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-04 23:43:00,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,314:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-04 23:43:00,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,375:INFO:Preparing preprocessing pipeline...
2025-04-04 23:43:00,376:INFO:Set up simple imputation.
2025-04-04 23:43:00,376:INFO:Set up feature normalization.
2025-04-04 23:43:00,377:INFO:Set up column name cleaning.
2025-04-04 23:43:00,413:INFO:Finished creating preprocessing pipeline.
2025-04-04 23:43:00,416:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-04-04 23:43:00,416:INFO:Creating final display dataframe.
2025-04-04 23:43:00,498:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                 0
2                   Target type            Binary
3           Original data shape        (1000, 61)
4        Transformed data shape        (1000, 61)
5   Transformed train set shape         (990, 61)
6    Transformed test set shape          (10, 61)
7              Numeric features                60
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7e4c
2025-04-04 23:43:00,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,561:INFO:setup() successfully completed in 0.42s...............
2025-04-04 23:43:00,572:INFO:gpu_param set to False
2025-04-04 23:43:00,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,638:INFO:gpu_param set to False
2025-04-04 23:43:00,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-04 23:43:00,702:INFO:Initializing compare_models()
2025-04-04 23:43:00,702:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, include=['dt', 'lr', 'lda', 'qda', 'ridge', 'rf', 'mlp', 'gbc', 'et', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=100, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, 'include': ['dt', 'lr', 'lda', 'qda', 'ridge', 'rf', 'mlp', 'gbc', 'et', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 100, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-04 23:43:00,702:INFO:Checking exceptions
2025-04-04 23:43:00,705:INFO:Preparing display monitor
2025-04-04 23:43:00,717:INFO:Initializing Decision Tree Classifier
2025-04-04 23:43:00,717:INFO:Total runtime is 0.0 minutes
2025-04-04 23:43:00,718:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:00,718:INFO:Initializing create_model()
2025-04-04 23:43:00,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:00,719:INFO:Checking exceptions
2025-04-04 23:43:00,719:INFO:Importing libraries
2025-04-04 23:43:00,719:INFO:Copying training dataset
2025-04-04 23:43:00,723:INFO:Defining folds
2025-04-04 23:43:00,723:INFO:Declaring metric variables
2025-04-04 23:43:00,725:INFO:Importing untrained model
2025-04-04 23:43:00,726:INFO:Decision Tree Classifier Imported successfully
2025-04-04 23:43:00,729:INFO:Starting cross validation
2025-04-04 23:43:00,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:02,566:INFO:Calculating mean and std
2025-04-04 23:43:02,567:INFO:Creating metrics dataframe
2025-04-04 23:43:02,569:INFO:Uploading results into container
2025-04-04 23:43:02,569:INFO:Uploading model into container now
2025-04-04 23:43:02,570:INFO:_master_model_container: 1
2025-04-04 23:43:02,570:INFO:_display_container: 2
2025-04-04 23:43:02,570:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-04 23:43:02,570:INFO:create_model() successfully completed......................................
2025-04-04 23:43:02,631:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:02,631:INFO:Creating metrics dataframe
2025-04-04 23:43:02,634:INFO:Initializing Logistic Regression
2025-04-04 23:43:02,634:INFO:Total runtime is 0.031937170028686526 minutes
2025-04-04 23:43:02,636:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:02,636:INFO:Initializing create_model()
2025-04-04 23:43:02,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:02,636:INFO:Checking exceptions
2025-04-04 23:43:02,636:INFO:Importing libraries
2025-04-04 23:43:02,636:INFO:Copying training dataset
2025-04-04 23:43:02,640:INFO:Defining folds
2025-04-04 23:43:02,640:INFO:Declaring metric variables
2025-04-04 23:43:02,641:INFO:Importing untrained model
2025-04-04 23:43:02,643:INFO:Logistic Regression Imported successfully
2025-04-04 23:43:02,646:INFO:Starting cross validation
2025-04-04 23:43:02,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:04,078:INFO:Calculating mean and std
2025-04-04 23:43:04,079:INFO:Creating metrics dataframe
2025-04-04 23:43:04,081:INFO:Uploading results into container
2025-04-04 23:43:04,082:INFO:Uploading model into container now
2025-04-04 23:43:04,082:INFO:_master_model_container: 2
2025-04-04 23:43:04,083:INFO:_display_container: 2
2025-04-04 23:43:04,083:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:43:04,083:INFO:create_model() successfully completed......................................
2025-04-04 23:43:04,133:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:04,133:INFO:Creating metrics dataframe
2025-04-04 23:43:04,136:INFO:Initializing Linear Discriminant Analysis
2025-04-04 23:43:04,137:INFO:Total runtime is 0.05699027379353841 minutes
2025-04-04 23:43:04,138:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:04,138:INFO:Initializing create_model()
2025-04-04 23:43:04,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:04,138:INFO:Checking exceptions
2025-04-04 23:43:04,139:INFO:Importing libraries
2025-04-04 23:43:04,139:INFO:Copying training dataset
2025-04-04 23:43:04,143:INFO:Defining folds
2025-04-04 23:43:04,143:INFO:Declaring metric variables
2025-04-04 23:43:04,144:INFO:Importing untrained model
2025-04-04 23:43:04,146:INFO:Linear Discriminant Analysis Imported successfully
2025-04-04 23:43:04,148:INFO:Starting cross validation
2025-04-04 23:43:04,149:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:05,571:INFO:Calculating mean and std
2025-04-04 23:43:05,572:INFO:Creating metrics dataframe
2025-04-04 23:43:05,574:INFO:Uploading results into container
2025-04-04 23:43:05,574:INFO:Uploading model into container now
2025-04-04 23:43:05,574:INFO:_master_model_container: 3
2025-04-04 23:43:05,575:INFO:_display_container: 2
2025-04-04 23:43:05,575:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:43:05,575:INFO:create_model() successfully completed......................................
2025-04-04 23:43:05,622:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:05,623:INFO:Creating metrics dataframe
2025-04-04 23:43:05,626:INFO:Initializing Quadratic Discriminant Analysis
2025-04-04 23:43:05,626:INFO:Total runtime is 0.08181701103846231 minutes
2025-04-04 23:43:05,628:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:05,628:INFO:Initializing create_model()
2025-04-04 23:43:05,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:05,628:INFO:Checking exceptions
2025-04-04 23:43:05,628:INFO:Importing libraries
2025-04-04 23:43:05,628:INFO:Copying training dataset
2025-04-04 23:43:05,632:INFO:Defining folds
2025-04-04 23:43:05,632:INFO:Declaring metric variables
2025-04-04 23:43:05,633:INFO:Importing untrained model
2025-04-04 23:43:05,635:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-04 23:43:05,638:INFO:Starting cross validation
2025-04-04 23:43:05,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:06,667:INFO:Calculating mean and std
2025-04-04 23:43:06,668:INFO:Creating metrics dataframe
2025-04-04 23:43:06,669:INFO:Uploading results into container
2025-04-04 23:43:06,669:INFO:Uploading model into container now
2025-04-04 23:43:06,669:INFO:_master_model_container: 4
2025-04-04 23:43:06,670:INFO:_display_container: 2
2025-04-04 23:43:06,670:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-04 23:43:06,670:INFO:create_model() successfully completed......................................
2025-04-04 23:43:06,721:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:06,721:INFO:Creating metrics dataframe
2025-04-04 23:43:06,724:INFO:Initializing Ridge Classifier
2025-04-04 23:43:06,724:INFO:Total runtime is 0.1001031438509623 minutes
2025-04-04 23:43:06,726:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:06,726:INFO:Initializing create_model()
2025-04-04 23:43:06,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:06,726:INFO:Checking exceptions
2025-04-04 23:43:06,726:INFO:Importing libraries
2025-04-04 23:43:06,726:INFO:Copying training dataset
2025-04-04 23:43:06,730:INFO:Defining folds
2025-04-04 23:43:06,730:INFO:Declaring metric variables
2025-04-04 23:43:06,732:INFO:Importing untrained model
2025-04-04 23:43:06,733:INFO:Ridge Classifier Imported successfully
2025-04-04 23:43:06,736:INFO:Starting cross validation
2025-04-04 23:43:06,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:06,792:INFO:Calculating mean and std
2025-04-04 23:43:06,793:INFO:Creating metrics dataframe
2025-04-04 23:43:06,794:INFO:Uploading results into container
2025-04-04 23:43:06,794:INFO:Uploading model into container now
2025-04-04 23:43:06,794:INFO:_master_model_container: 5
2025-04-04 23:43:06,794:INFO:_display_container: 2
2025-04-04 23:43:06,795:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-04 23:43:06,795:INFO:create_model() successfully completed......................................
2025-04-04 23:43:06,841:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:06,841:INFO:Creating metrics dataframe
2025-04-04 23:43:06,845:INFO:Initializing Random Forest Classifier
2025-04-04 23:43:06,845:INFO:Total runtime is 0.1021209677060445 minutes
2025-04-04 23:43:06,846:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:06,846:INFO:Initializing create_model()
2025-04-04 23:43:06,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:06,846:INFO:Checking exceptions
2025-04-04 23:43:06,846:INFO:Importing libraries
2025-04-04 23:43:06,847:INFO:Copying training dataset
2025-04-04 23:43:06,850:INFO:Defining folds
2025-04-04 23:43:06,850:INFO:Declaring metric variables
2025-04-04 23:43:06,852:INFO:Importing untrained model
2025-04-04 23:43:06,853:INFO:Random Forest Classifier Imported successfully
2025-04-04 23:43:06,856:INFO:Starting cross validation
2025-04-04 23:43:06,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:07,131:INFO:Calculating mean and std
2025-04-04 23:43:07,132:INFO:Creating metrics dataframe
2025-04-04 23:43:07,133:INFO:Uploading results into container
2025-04-04 23:43:07,133:INFO:Uploading model into container now
2025-04-04 23:43:07,134:INFO:_master_model_container: 6
2025-04-04 23:43:07,134:INFO:_display_container: 2
2025-04-04 23:43:07,134:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-04 23:43:07,134:INFO:create_model() successfully completed......................................
2025-04-04 23:43:07,183:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:07,183:INFO:Creating metrics dataframe
2025-04-04 23:43:07,187:INFO:Initializing MLP Classifier
2025-04-04 23:43:07,187:INFO:Total runtime is 0.10782378911972043 minutes
2025-04-04 23:43:07,188:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:07,189:INFO:Initializing create_model()
2025-04-04 23:43:07,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:07,189:INFO:Checking exceptions
2025-04-04 23:43:07,189:INFO:Importing libraries
2025-04-04 23:43:07,189:INFO:Copying training dataset
2025-04-04 23:43:07,193:INFO:Defining folds
2025-04-04 23:43:07,193:INFO:Declaring metric variables
2025-04-04 23:43:07,195:INFO:Importing untrained model
2025-04-04 23:43:07,196:INFO:MLP Classifier Imported successfully
2025-04-04 23:43:07,200:INFO:Starting cross validation
2025-04-04 23:43:07,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:07,579:INFO:Calculating mean and std
2025-04-04 23:43:07,580:INFO:Creating metrics dataframe
2025-04-04 23:43:07,581:INFO:Uploading results into container
2025-04-04 23:43:07,581:INFO:Uploading model into container now
2025-04-04 23:43:07,581:INFO:_master_model_container: 7
2025-04-04 23:43:07,581:INFO:_display_container: 2
2025-04-04 23:43:07,582:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-04 23:43:07,582:INFO:create_model() successfully completed......................................
2025-04-04 23:43:07,632:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:07,632:INFO:Creating metrics dataframe
2025-04-04 23:43:07,636:INFO:Initializing Gradient Boosting Classifier
2025-04-04 23:43:07,636:INFO:Total runtime is 0.11530357996622718 minutes
2025-04-04 23:43:07,638:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:07,638:INFO:Initializing create_model()
2025-04-04 23:43:07,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:07,638:INFO:Checking exceptions
2025-04-04 23:43:07,638:INFO:Importing libraries
2025-04-04 23:43:07,638:INFO:Copying training dataset
2025-04-04 23:43:07,643:INFO:Defining folds
2025-04-04 23:43:07,643:INFO:Declaring metric variables
2025-04-04 23:43:07,644:INFO:Importing untrained model
2025-04-04 23:43:07,646:INFO:Gradient Boosting Classifier Imported successfully
2025-04-04 23:43:07,649:INFO:Starting cross validation
2025-04-04 23:43:07,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:09,059:INFO:Calculating mean and std
2025-04-04 23:43:09,060:INFO:Creating metrics dataframe
2025-04-04 23:43:09,061:INFO:Uploading results into container
2025-04-04 23:43:09,061:INFO:Uploading model into container now
2025-04-04 23:43:09,062:INFO:_master_model_container: 8
2025-04-04 23:43:09,062:INFO:_display_container: 2
2025-04-04 23:43:09,062:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-04 23:43:09,062:INFO:create_model() successfully completed......................................
2025-04-04 23:43:09,109:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:09,109:INFO:Creating metrics dataframe
2025-04-04 23:43:09,114:INFO:Initializing Extra Trees Classifier
2025-04-04 23:43:09,114:INFO:Total runtime is 0.13994059165318803 minutes
2025-04-04 23:43:09,115:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:09,115:INFO:Initializing create_model()
2025-04-04 23:43:09,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:09,116:INFO:Checking exceptions
2025-04-04 23:43:09,116:INFO:Importing libraries
2025-04-04 23:43:09,116:INFO:Copying training dataset
2025-04-04 23:43:09,120:INFO:Defining folds
2025-04-04 23:43:09,120:INFO:Declaring metric variables
2025-04-04 23:43:09,122:INFO:Importing untrained model
2025-04-04 23:43:09,123:INFO:Extra Trees Classifier Imported successfully
2025-04-04 23:43:09,126:INFO:Starting cross validation
2025-04-04 23:43:09,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:09,336:INFO:Calculating mean and std
2025-04-04 23:43:09,336:INFO:Creating metrics dataframe
2025-04-04 23:43:09,338:INFO:Uploading results into container
2025-04-04 23:43:09,338:INFO:Uploading model into container now
2025-04-04 23:43:09,338:INFO:_master_model_container: 9
2025-04-04 23:43:09,338:INFO:_display_container: 2
2025-04-04 23:43:09,338:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-04 23:43:09,339:INFO:create_model() successfully completed......................................
2025-04-04 23:43:09,384:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:09,384:INFO:Creating metrics dataframe
2025-04-04 23:43:09,389:INFO:Initializing custom model SVM - Radial Kernel
2025-04-04 23:43:09,389:INFO:Total runtime is 0.14452615976333616 minutes
2025-04-04 23:43:09,390:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:09,390:INFO:Initializing create_model()
2025-04-04 23:43:09,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:09,391:INFO:Checking exceptions
2025-04-04 23:43:09,391:INFO:Importing libraries
2025-04-04 23:43:09,391:INFO:Copying training dataset
2025-04-04 23:43:09,394:INFO:Defining folds
2025-04-04 23:43:09,395:INFO:Declaring metric variables
2025-04-04 23:43:09,396:INFO:Importing untrained model
2025-04-04 23:43:09,396:INFO:Declaring custom model
2025-04-04 23:43:09,397:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:43:09,401:INFO:Starting cross validation
2025-04-04 23:43:09,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:09,491:INFO:Calculating mean and std
2025-04-04 23:43:09,492:INFO:Creating metrics dataframe
2025-04-04 23:43:09,493:INFO:Uploading results into container
2025-04-04 23:43:09,493:INFO:Uploading model into container now
2025-04-04 23:43:09,493:INFO:_master_model_container: 10
2025-04-04 23:43:09,493:INFO:_display_container: 2
2025-04-04 23:43:09,494:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:43:09,494:INFO:create_model() successfully completed......................................
2025-04-04 23:43:09,539:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:09,539:INFO:Creating metrics dataframe
2025-04-04 23:43:09,544:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-04-04 23:43:09,548:INFO:Initializing create_model()
2025-04-04 23:43:09,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:09,548:INFO:Checking exceptions
2025-04-04 23:43:09,549:INFO:Importing libraries
2025-04-04 23:43:09,549:INFO:Copying training dataset
2025-04-04 23:43:09,552:INFO:Defining folds
2025-04-04 23:43:09,552:INFO:Declaring metric variables
2025-04-04 23:43:09,553:INFO:Importing untrained model
2025-04-04 23:43:09,553:INFO:Declaring custom model
2025-04-04 23:43:09,553:INFO:Logistic Regression Imported successfully
2025-04-04 23:43:09,553:INFO:Cross validation set to False
2025-04-04 23:43:09,553:INFO:Fitting Model
2025-04-04 23:43:09,571:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:43:09,571:INFO:create_model() successfully completed......................................
2025-04-04 23:43:09,621:INFO:Initializing create_model()
2025-04-04 23:43:09,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:09,621:INFO:Checking exceptions
2025-04-04 23:43:09,622:INFO:Importing libraries
2025-04-04 23:43:09,622:INFO:Copying training dataset
2025-04-04 23:43:09,626:INFO:Defining folds
2025-04-04 23:43:09,626:INFO:Declaring metric variables
2025-04-04 23:43:09,626:INFO:Importing untrained model
2025-04-04 23:43:09,626:INFO:Declaring custom model
2025-04-04 23:43:09,626:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:43:09,627:INFO:Cross validation set to False
2025-04-04 23:43:09,627:INFO:Fitting Model
2025-04-04 23:43:09,660:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:43:09,660:INFO:create_model() successfully completed......................................
2025-04-04 23:43:09,711:INFO:Initializing create_model()
2025-04-04 23:43:09,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:09,711:INFO:Checking exceptions
2025-04-04 23:43:09,712:INFO:Importing libraries
2025-04-04 23:43:09,712:INFO:Copying training dataset
2025-04-04 23:43:09,716:INFO:Defining folds
2025-04-04 23:43:09,716:INFO:Declaring metric variables
2025-04-04 23:43:09,716:INFO:Importing untrained model
2025-04-04 23:43:09,716:INFO:Declaring custom model
2025-04-04 23:43:09,717:INFO:MLP Classifier Imported successfully
2025-04-04 23:43:09,717:INFO:Cross validation set to False
2025-04-04 23:43:09,717:INFO:Fitting Model
2025-04-04 23:43:10,361:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-04 23:43:10,361:INFO:create_model() successfully completed......................................
2025-04-04 23:43:10,411:INFO:Initializing create_model()
2025-04-04 23:43:10,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:10,411:INFO:Checking exceptions
2025-04-04 23:43:10,412:INFO:Importing libraries
2025-04-04 23:43:10,412:INFO:Copying training dataset
2025-04-04 23:43:10,416:INFO:Defining folds
2025-04-04 23:43:10,416:INFO:Declaring metric variables
2025-04-04 23:43:10,416:INFO:Importing untrained model
2025-04-04 23:43:10,416:INFO:Declaring custom model
2025-04-04 23:43:10,416:INFO:Ridge Classifier Imported successfully
2025-04-04 23:43:10,417:INFO:Cross validation set to False
2025-04-04 23:43:10,417:INFO:Fitting Model
2025-04-04 23:43:10,425:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-04 23:43:10,425:INFO:create_model() successfully completed......................................
2025-04-04 23:43:10,478:INFO:Initializing create_model()
2025-04-04 23:43:10,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:10,478:INFO:Checking exceptions
2025-04-04 23:43:10,479:INFO:Importing libraries
2025-04-04 23:43:10,479:INFO:Copying training dataset
2025-04-04 23:43:10,482:INFO:Defining folds
2025-04-04 23:43:10,482:INFO:Declaring metric variables
2025-04-04 23:43:10,483:INFO:Importing untrained model
2025-04-04 23:43:10,483:INFO:Declaring custom model
2025-04-04 23:43:10,483:INFO:Linear Discriminant Analysis Imported successfully
2025-04-04 23:43:10,483:INFO:Cross validation set to False
2025-04-04 23:43:10,483:INFO:Fitting Model
2025-04-04 23:43:10,506:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:43:10,506:INFO:create_model() successfully completed......................................
2025-04-04 23:43:10,557:INFO:Initializing create_model()
2025-04-04 23:43:10,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:10,557:INFO:Checking exceptions
2025-04-04 23:43:10,558:INFO:Importing libraries
2025-04-04 23:43:10,558:INFO:Copying training dataset
2025-04-04 23:43:10,562:INFO:Defining folds
2025-04-04 23:43:10,562:INFO:Declaring metric variables
2025-04-04 23:43:10,562:INFO:Importing untrained model
2025-04-04 23:43:10,562:INFO:Declaring custom model
2025-04-04 23:43:10,562:INFO:Gradient Boosting Classifier Imported successfully
2025-04-04 23:43:10,562:INFO:Cross validation set to False
2025-04-04 23:43:10,562:INFO:Fitting Model
2025-04-04 23:43:12,038:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-04 23:43:12,038:INFO:create_model() successfully completed......................................
2025-04-04 23:43:12,086:INFO:Initializing create_model()
2025-04-04 23:43:12,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:12,086:INFO:Checking exceptions
2025-04-04 23:43:12,087:INFO:Importing libraries
2025-04-04 23:43:12,087:INFO:Copying training dataset
2025-04-04 23:43:12,094:INFO:Defining folds
2025-04-04 23:43:12,094:INFO:Declaring metric variables
2025-04-04 23:43:12,094:INFO:Importing untrained model
2025-04-04 23:43:12,094:INFO:Declaring custom model
2025-04-04 23:43:12,095:INFO:Extra Trees Classifier Imported successfully
2025-04-04 23:43:12,095:INFO:Cross validation set to False
2025-04-04 23:43:12,095:INFO:Fitting Model
2025-04-04 23:43:12,196:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-04 23:43:12,196:INFO:create_model() successfully completed......................................
2025-04-04 23:43:12,244:INFO:Initializing create_model()
2025-04-04 23:43:12,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:12,244:INFO:Checking exceptions
2025-04-04 23:43:12,245:INFO:Importing libraries
2025-04-04 23:43:12,245:INFO:Copying training dataset
2025-04-04 23:43:12,256:INFO:Defining folds
2025-04-04 23:43:12,256:INFO:Declaring metric variables
2025-04-04 23:43:12,257:INFO:Importing untrained model
2025-04-04 23:43:12,257:INFO:Declaring custom model
2025-04-04 23:43:12,257:INFO:Random Forest Classifier Imported successfully
2025-04-04 23:43:12,257:INFO:Cross validation set to False
2025-04-04 23:43:12,257:INFO:Fitting Model
2025-04-04 23:43:12,368:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-04 23:43:12,368:INFO:create_model() successfully completed......................................
2025-04-04 23:43:12,416:INFO:Initializing create_model()
2025-04-04 23:43:12,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:12,416:INFO:Checking exceptions
2025-04-04 23:43:12,417:INFO:Importing libraries
2025-04-04 23:43:12,418:INFO:Copying training dataset
2025-04-04 23:43:12,422:INFO:Defining folds
2025-04-04 23:43:12,422:INFO:Declaring metric variables
2025-04-04 23:43:12,423:INFO:Importing untrained model
2025-04-04 23:43:12,423:INFO:Declaring custom model
2025-04-04 23:43:12,423:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-04 23:43:12,423:INFO:Cross validation set to False
2025-04-04 23:43:12,423:INFO:Fitting Model
2025-04-04 23:43:12,458:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-04 23:43:12,458:INFO:create_model() successfully completed......................................
2025-04-04 23:43:12,508:INFO:Initializing create_model()
2025-04-04 23:43:12,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:12,508:INFO:Checking exceptions
2025-04-04 23:43:12,509:INFO:Importing libraries
2025-04-04 23:43:12,509:INFO:Copying training dataset
2025-04-04 23:43:12,513:INFO:Defining folds
2025-04-04 23:43:12,513:INFO:Declaring metric variables
2025-04-04 23:43:12,513:INFO:Importing untrained model
2025-04-04 23:43:12,513:INFO:Declaring custom model
2025-04-04 23:43:12,513:INFO:Decision Tree Classifier Imported successfully
2025-04-04 23:43:12,514:INFO:Cross validation set to False
2025-04-04 23:43:12,514:INFO:Fitting Model
2025-04-04 23:43:12,546:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-04 23:43:12,546:INFO:create_model() successfully completed......................................
2025-04-04 23:43:12,606:INFO:_master_model_container: 10
2025-04-04 23:43:12,606:INFO:_display_container: 2
2025-04-04 23:43:12,607:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')]
2025-04-04 23:43:12,607:INFO:compare_models() successfully completed......................................
2025-04-04 23:43:12,622:INFO:Initializing tune_model()
2025-04-04 23:43:12,623:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=4, round=4, n_iter=25, custom_grid={'C': [1], 'solver': ['liblinear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:43:12,623:INFO:Checking exceptions
2025-04-04 23:43:12,631:INFO:Copying training dataset
2025-04-04 23:43:12,640:INFO:Checking base model
2025-04-04 23:43:12,640:INFO:Base model : Logistic Regression
2025-04-04 23:43:12,642:INFO:Declaring metric variables
2025-04-04 23:43:12,643:INFO:Defining Hyperparameters
2025-04-04 23:43:12,694:INFO:custom_grid: {'actual_estimator__C': [1], 'actual_estimator__solver': ['liblinear']}
2025-04-04 23:43:12,695:INFO:Tuning with n_jobs=-1
2025-04-04 23:43:12,695:INFO:Initializing GridSearchCV
2025-04-04 23:43:12,761:INFO:best_params: {'actual_estimator__C': 1, 'actual_estimator__solver': 'liblinear'}
2025-04-04 23:43:12,761:INFO:Hyperparameter search completed
2025-04-04 23:43:12,761:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:12,761:INFO:Initializing create_model()
2025-04-04 23:43:12,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04CFD9DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1, 'solver': 'liblinear'})
2025-04-04 23:43:12,761:INFO:Checking exceptions
2025-04-04 23:43:12,761:INFO:Importing libraries
2025-04-04 23:43:12,761:INFO:Copying training dataset
2025-04-04 23:43:12,765:INFO:Defining folds
2025-04-04 23:43:12,765:INFO:Declaring metric variables
2025-04-04 23:43:12,767:INFO:Importing untrained model
2025-04-04 23:43:12,767:INFO:Declaring custom model
2025-04-04 23:43:12,770:INFO:Logistic Regression Imported successfully
2025-04-04 23:43:12,776:INFO:Starting cross validation
2025-04-04 23:43:12,779:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:12,838:INFO:Calculating mean and std
2025-04-04 23:43:12,838:INFO:Creating metrics dataframe
2025-04-04 23:43:12,841:INFO:Finalizing model
2025-04-04 23:43:12,853:INFO:Uploading results into container
2025-04-04 23:43:12,854:INFO:Uploading model into container now
2025-04-04 23:43:12,854:INFO:_master_model_container: 11
2025-04-04 23:43:12,854:INFO:_display_container: 3
2025-04-04 23:43:12,854:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:43:12,854:INFO:create_model() successfully completed......................................
2025-04-04 23:43:12,958:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:12,958:INFO:choose_better activated
2025-04-04 23:43:12,961:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:12,961:INFO:Initializing create_model()
2025-04-04 23:43:12,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:12,961:INFO:Checking exceptions
2025-04-04 23:43:12,962:INFO:Importing libraries
2025-04-04 23:43:12,962:INFO:Copying training dataset
2025-04-04 23:43:12,966:INFO:Defining folds
2025-04-04 23:43:12,966:INFO:Declaring metric variables
2025-04-04 23:43:12,966:INFO:Importing untrained model
2025-04-04 23:43:12,966:INFO:Declaring custom model
2025-04-04 23:43:12,967:INFO:Logistic Regression Imported successfully
2025-04-04 23:43:12,967:INFO:Starting cross validation
2025-04-04 23:43:12,967:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:13,025:INFO:Calculating mean and std
2025-04-04 23:43:13,025:INFO:Creating metrics dataframe
2025-04-04 23:43:13,026:INFO:Finalizing model
2025-04-04 23:43:13,051:INFO:Uploading results into container
2025-04-04 23:43:13,051:INFO:Uploading model into container now
2025-04-04 23:43:13,051:INFO:_master_model_container: 12
2025-04-04 23:43:13,051:INFO:_display_container: 4
2025-04-04 23:43:13,051:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:43:13,051:INFO:create_model() successfully completed......................................
2025-04-04 23:43:13,098:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:13,099:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9994
2025-04-04 23:43:13,099:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9994
2025-04-04 23:43:13,099:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-04-04 23:43:13,099:INFO:choose_better completed
2025-04-04 23:43:13,099:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:43:13,107:INFO:_master_model_container: 12
2025-04-04 23:43:13,107:INFO:_display_container: 3
2025-04-04 23:43:13,107:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:43:13,107:INFO:tune_model() successfully completed......................................
2025-04-04 23:43:13,154:INFO:Initializing tune_model()
2025-04-04 23:43:13,155:INFO:tune_model(estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=4, round=4, n_iter=25, custom_grid={'probability': [True], 'C': [1.0], 'kernel': ['linear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:43:13,155:INFO:Checking exceptions
2025-04-04 23:43:13,163:INFO:Copying training dataset
2025-04-04 23:43:13,166:INFO:Checking base model
2025-04-04 23:43:13,166:INFO:Base model : SVM - Radial Kernel
2025-04-04 23:43:13,167:INFO:Declaring metric variables
2025-04-04 23:43:13,169:INFO:Defining Hyperparameters
2025-04-04 23:43:13,222:INFO:custom_grid: {'actual_estimator__probability': [True], 'actual_estimator__C': [1.0], 'actual_estimator__kernel': ['linear']}
2025-04-04 23:43:13,222:INFO:Tuning with n_jobs=-1
2025-04-04 23:43:13,222:INFO:Initializing GridSearchCV
2025-04-04 23:43:13,277:INFO:best_params: {'actual_estimator__C': 1.0, 'actual_estimator__kernel': 'linear', 'actual_estimator__probability': True}
2025-04-04 23:43:13,277:INFO:Hyperparameter search completed
2025-04-04 23:43:13,277:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:13,277:INFO:Initializing create_model()
2025-04-04 23:43:13,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04F0B62B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1.0, 'kernel': 'linear', 'probability': True})
2025-04-04 23:43:13,277:INFO:Checking exceptions
2025-04-04 23:43:13,277:INFO:Importing libraries
2025-04-04 23:43:13,277:INFO:Copying training dataset
2025-04-04 23:43:13,282:INFO:Defining folds
2025-04-04 23:43:13,282:INFO:Declaring metric variables
2025-04-04 23:43:13,284:INFO:Importing untrained model
2025-04-04 23:43:13,284:INFO:Declaring custom model
2025-04-04 23:43:13,286:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:43:13,289:INFO:Starting cross validation
2025-04-04 23:43:13,289:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:13,337:INFO:Calculating mean and std
2025-04-04 23:43:13,337:INFO:Creating metrics dataframe
2025-04-04 23:43:13,340:INFO:Finalizing model
2025-04-04 23:43:13,373:INFO:Uploading results into container
2025-04-04 23:43:13,374:INFO:Uploading model into container now
2025-04-04 23:43:13,374:INFO:_master_model_container: 13
2025-04-04 23:43:13,374:INFO:_display_container: 4
2025-04-04 23:43:13,375:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:43:13,375:INFO:create_model() successfully completed......................................
2025-04-04 23:43:13,423:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:13,423:INFO:choose_better activated
2025-04-04 23:43:13,425:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:13,426:INFO:Initializing create_model()
2025-04-04 23:43:13,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:13,426:INFO:Checking exceptions
2025-04-04 23:43:13,427:INFO:Importing libraries
2025-04-04 23:43:13,427:INFO:Copying training dataset
2025-04-04 23:43:13,431:INFO:Defining folds
2025-04-04 23:43:13,431:INFO:Declaring metric variables
2025-04-04 23:43:13,431:INFO:Importing untrained model
2025-04-04 23:43:13,431:INFO:Declaring custom model
2025-04-04 23:43:13,432:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:43:13,432:INFO:Starting cross validation
2025-04-04 23:43:13,432:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:13,491:INFO:Calculating mean and std
2025-04-04 23:43:13,491:INFO:Creating metrics dataframe
2025-04-04 23:43:13,492:INFO:Finalizing model
2025-04-04 23:43:13,524:INFO:Uploading results into container
2025-04-04 23:43:13,525:INFO:Uploading model into container now
2025-04-04 23:43:13,525:INFO:_master_model_container: 14
2025-04-04 23:43:13,525:INFO:_display_container: 5
2025-04-04 23:43:13,525:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:43:13,525:INFO:create_model() successfully completed......................................
2025-04-04 23:43:13,572:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:13,572:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.9993
2025-04-04 23:43:13,572:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.9993
2025-04-04 23:43:13,573:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) is best model
2025-04-04 23:43:13,573:INFO:choose_better completed
2025-04-04 23:43:13,573:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:43:13,577:INFO:_master_model_container: 14
2025-04-04 23:43:13,577:INFO:_display_container: 4
2025-04-04 23:43:13,577:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:43:13,577:INFO:tune_model() successfully completed......................................
2025-04-04 23:43:13,626:INFO:Initializing tune_model()
2025-04-04 23:43:13,626:INFO:tune_model(estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:43:13,627:INFO:Checking exceptions
2025-04-04 23:43:13,627:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-04 23:43:13,651:INFO:Copying training dataset
2025-04-04 23:43:13,654:INFO:Checking base model
2025-04-04 23:43:13,654:INFO:Base model : MLP Classifier
2025-04-04 23:43:13,654:INFO:Model has a special tunable class, using that
2025-04-04 23:43:13,657:INFO:Declaring metric variables
2025-04-04 23:43:13,658:INFO:Defining Hyperparameters
2025-04-04 23:43:13,725:INFO:Tuning with n_jobs=-1
2025-04-04 23:43:13,727:INFO:Initializing skopt.BayesSearchCV
2025-04-04 23:43:34,713:INFO:best_params: OrderedDict([('actual_estimator__activation', 'identity'), ('actual_estimator__alpha', 6.905829578050526e-05), ('actual_estimator__hidden_layer_size_0', 83), ('actual_estimator__hidden_layer_size_1', 29), ('actual_estimator__hidden_layer_size_2', 83), ('actual_estimator__learning_rate', 'constant')])
2025-04-04 23:43:34,714:INFO:Hyperparameter search completed
2025-04-04 23:43:34,714:INFO:Getting base sklearn object from tunable
2025-04-04 23:43:34,716:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:34,716:INFO:Initializing create_model()
2025-04-04 23:43:34,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04F311040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'activation': 'identity', 'alpha': 6.905829578050526e-05, 'batch_size': 'auto', 'beta_1': 0.9, 'beta_2': 0.999, 'early_stopping': False, 'epsilon': 1e-08, 'hidden_layer_sizes': [83, 29, 83], 'learning_rate': 'constant', 'learning_rate_init': 0.001, 'max_fun': 15000, 'max_iter': 500, 'momentum': 0.9, 'n_iter_no_change': 10, 'nesterovs_momentum': True, 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'solver': 'adam', 'tol': 0.0001, 'validation_fraction': 0.1, 'warm_start': False})
2025-04-04 23:43:34,716:INFO:Checking exceptions
2025-04-04 23:43:34,716:INFO:Importing libraries
2025-04-04 23:43:34,716:INFO:Copying training dataset
2025-04-04 23:43:34,724:INFO:Defining folds
2025-04-04 23:43:34,724:INFO:Declaring metric variables
2025-04-04 23:43:34,726:INFO:Importing untrained model
2025-04-04 23:43:34,726:INFO:Declaring custom model
2025-04-04 23:43:34,728:INFO:MLP Classifier Imported successfully
2025-04-04 23:43:34,731:INFO:Starting cross validation
2025-04-04 23:43:34,732:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:35,030:INFO:Calculating mean and std
2025-04-04 23:43:35,030:INFO:Creating metrics dataframe
2025-04-04 23:43:35,033:INFO:Finalizing model
2025-04-04 23:43:36,483:INFO:Uploading results into container
2025-04-04 23:43:36,484:INFO:Uploading model into container now
2025-04-04 23:43:36,484:INFO:_master_model_container: 15
2025-04-04 23:43:36,484:INFO:_display_container: 5
2025-04-04 23:43:36,484:INFO:MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False)
2025-04-04 23:43:36,484:INFO:create_model() successfully completed......................................
2025-04-04 23:43:36,532:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:36,532:INFO:choose_better activated
2025-04-04 23:43:36,534:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:36,535:INFO:Initializing create_model()
2025-04-04 23:43:36,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:36,535:INFO:Checking exceptions
2025-04-04 23:43:36,536:INFO:Importing libraries
2025-04-04 23:43:36,536:INFO:Copying training dataset
2025-04-04 23:43:36,540:INFO:Defining folds
2025-04-04 23:43:36,540:INFO:Declaring metric variables
2025-04-04 23:43:36,540:INFO:Importing untrained model
2025-04-04 23:43:36,540:INFO:Declaring custom model
2025-04-04 23:43:36,540:INFO:MLP Classifier Imported successfully
2025-04-04 23:43:36,540:INFO:Starting cross validation
2025-04-04 23:43:36,541:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:36,813:INFO:Calculating mean and std
2025-04-04 23:43:36,813:INFO:Creating metrics dataframe
2025-04-04 23:43:36,816:INFO:Finalizing model
2025-04-04 23:43:38,292:INFO:Uploading results into container
2025-04-04 23:43:38,292:INFO:Uploading model into container now
2025-04-04 23:43:38,293:INFO:_master_model_container: 16
2025-04-04 23:43:38,293:INFO:_display_container: 6
2025-04-04 23:43:38,293:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-04 23:43:38,293:INFO:create_model() successfully completed......................................
2025-04-04 23:43:38,376:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:38,376:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False) result for AUC is 0.9982
2025-04-04 23:43:38,376:INFO:MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False) result for AUC is 0.9998
2025-04-04 23:43:38,379:INFO:MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False) is best model
2025-04-04 23:43:38,379:INFO:choose_better completed
2025-04-04 23:43:38,386:INFO:_master_model_container: 16
2025-04-04 23:43:38,386:INFO:_display_container: 5
2025-04-04 23:43:38,386:INFO:MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False)
2025-04-04 23:43:38,386:INFO:tune_model() successfully completed......................................
2025-04-04 23:43:38,469:INFO:Initializing tune_model()
2025-04-04 23:43:38,469:INFO:tune_model(estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'alpha': [1], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:43:38,469:INFO:Checking exceptions
2025-04-04 23:43:38,484:INFO:Copying training dataset
2025-04-04 23:43:38,488:INFO:Checking base model
2025-04-04 23:43:38,489:INFO:Base model : Ridge Classifier
2025-04-04 23:43:38,490:INFO:Declaring metric variables
2025-04-04 23:43:38,492:INFO:Defining Hyperparameters
2025-04-04 23:43:38,554:INFO:custom_grid: {'actual_estimator__alpha': [1], 'actual_estimator__solver': ['lsqr']}
2025-04-04 23:43:38,554:INFO:Tuning with n_jobs=-1
2025-04-04 23:43:38,555:INFO:Initializing GridSearchCV
2025-04-04 23:43:38,590:INFO:best_params: {'actual_estimator__alpha': 1, 'actual_estimator__solver': 'lsqr'}
2025-04-04 23:43:38,590:INFO:Hyperparameter search completed
2025-04-04 23:43:38,590:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:38,590:INFO:Initializing create_model()
2025-04-04 23:43:38,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F048F545B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'alpha': 1, 'solver': 'lsqr'})
2025-04-04 23:43:38,590:INFO:Checking exceptions
2025-04-04 23:43:38,590:INFO:Importing libraries
2025-04-04 23:43:38,591:INFO:Copying training dataset
2025-04-04 23:43:38,595:INFO:Defining folds
2025-04-04 23:43:38,595:INFO:Declaring metric variables
2025-04-04 23:43:38,597:INFO:Importing untrained model
2025-04-04 23:43:38,597:INFO:Declaring custom model
2025-04-04 23:43:38,598:INFO:Ridge Classifier Imported successfully
2025-04-04 23:43:38,601:INFO:Starting cross validation
2025-04-04 23:43:38,602:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:38,638:INFO:Calculating mean and std
2025-04-04 23:43:38,638:INFO:Creating metrics dataframe
2025-04-04 23:43:38,641:INFO:Finalizing model
2025-04-04 23:43:38,659:INFO:Uploading results into container
2025-04-04 23:43:38,659:INFO:Uploading model into container now
2025-04-04 23:43:38,660:INFO:_master_model_container: 17
2025-04-04 23:43:38,660:INFO:_display_container: 6
2025-04-04 23:43:38,660:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001)
2025-04-04 23:43:38,660:INFO:create_model() successfully completed......................................
2025-04-04 23:43:38,707:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:38,707:INFO:choose_better activated
2025-04-04 23:43:38,709:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:38,709:INFO:Initializing create_model()
2025-04-04 23:43:38,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:38,709:INFO:Checking exceptions
2025-04-04 23:43:38,710:INFO:Importing libraries
2025-04-04 23:43:38,710:INFO:Copying training dataset
2025-04-04 23:43:38,714:INFO:Defining folds
2025-04-04 23:43:38,714:INFO:Declaring metric variables
2025-04-04 23:43:38,714:INFO:Importing untrained model
2025-04-04 23:43:38,714:INFO:Declaring custom model
2025-04-04 23:43:38,714:INFO:Ridge Classifier Imported successfully
2025-04-04 23:43:38,714:INFO:Starting cross validation
2025-04-04 23:43:38,715:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:38,750:INFO:Calculating mean and std
2025-04-04 23:43:38,750:INFO:Creating metrics dataframe
2025-04-04 23:43:38,751:INFO:Finalizing model
2025-04-04 23:43:38,760:INFO:Uploading results into container
2025-04-04 23:43:38,760:INFO:Uploading model into container now
2025-04-04 23:43:38,760:INFO:_master_model_container: 18
2025-04-04 23:43:38,760:INFO:_display_container: 7
2025-04-04 23:43:38,761:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-04 23:43:38,761:INFO:create_model() successfully completed......................................
2025-04-04 23:43:38,807:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:38,807:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for AUC is 0.9927
2025-04-04 23:43:38,807:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001) result for AUC is 0.9926
2025-04-04 23:43:38,807:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) is best model
2025-04-04 23:43:38,807:INFO:choose_better completed
2025-04-04 23:43:38,808:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:43:38,812:INFO:_master_model_container: 18
2025-04-04 23:43:38,812:INFO:_display_container: 6
2025-04-04 23:43:38,812:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-04 23:43:38,812:INFO:tune_model() successfully completed......................................
2025-04-04 23:43:38,861:INFO:Initializing tune_model()
2025-04-04 23:43:38,861:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'shrinkage': [0.0], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:43:38,861:INFO:Checking exceptions
2025-04-04 23:43:38,870:INFO:Copying training dataset
2025-04-04 23:43:38,873:INFO:Checking base model
2025-04-04 23:43:38,873:INFO:Base model : Linear Discriminant Analysis
2025-04-04 23:43:38,875:INFO:Declaring metric variables
2025-04-04 23:43:38,877:INFO:Defining Hyperparameters
2025-04-04 23:43:38,930:INFO:custom_grid: {'actual_estimator__shrinkage': [0.0], 'actual_estimator__solver': ['lsqr']}
2025-04-04 23:43:38,930:INFO:Tuning with n_jobs=-1
2025-04-04 23:43:38,930:INFO:Initializing GridSearchCV
2025-04-04 23:43:38,954:INFO:best_params: {'actual_estimator__shrinkage': 0.0, 'actual_estimator__solver': 'lsqr'}
2025-04-04 23:43:38,954:INFO:Hyperparameter search completed
2025-04-04 23:43:38,954:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:38,954:INFO:Initializing create_model()
2025-04-04 23:43:38,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04F0ADBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'shrinkage': 0.0, 'solver': 'lsqr'})
2025-04-04 23:43:38,955:INFO:Checking exceptions
2025-04-04 23:43:38,955:INFO:Importing libraries
2025-04-04 23:43:38,955:INFO:Copying training dataset
2025-04-04 23:43:38,959:INFO:Defining folds
2025-04-04 23:43:38,959:INFO:Declaring metric variables
2025-04-04 23:43:38,961:INFO:Importing untrained model
2025-04-04 23:43:38,961:INFO:Declaring custom model
2025-04-04 23:43:38,962:INFO:Linear Discriminant Analysis Imported successfully
2025-04-04 23:43:38,965:INFO:Starting cross validation
2025-04-04 23:43:38,966:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:39,000:INFO:Calculating mean and std
2025-04-04 23:43:39,001:INFO:Creating metrics dataframe
2025-04-04 23:43:39,005:INFO:Finalizing model
2025-04-04 23:43:39,023:INFO:Uploading results into container
2025-04-04 23:43:39,024:INFO:Uploading model into container now
2025-04-04 23:43:39,024:INFO:_master_model_container: 19
2025-04-04 23:43:39,024:INFO:_display_container: 7
2025-04-04 23:43:39,024:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:43:39,024:INFO:create_model() successfully completed......................................
2025-04-04 23:43:39,073:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:39,073:INFO:choose_better activated
2025-04-04 23:43:39,075:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:39,076:INFO:Initializing create_model()
2025-04-04 23:43:39,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:39,076:INFO:Checking exceptions
2025-04-04 23:43:39,077:INFO:Importing libraries
2025-04-04 23:43:39,077:INFO:Copying training dataset
2025-04-04 23:43:39,081:INFO:Defining folds
2025-04-04 23:43:39,081:INFO:Declaring metric variables
2025-04-04 23:43:39,081:INFO:Importing untrained model
2025-04-04 23:43:39,081:INFO:Declaring custom model
2025-04-04 23:43:39,081:INFO:Linear Discriminant Analysis Imported successfully
2025-04-04 23:43:39,081:INFO:Starting cross validation
2025-04-04 23:43:39,082:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:39,109:INFO:Calculating mean and std
2025-04-04 23:43:39,109:INFO:Creating metrics dataframe
2025-04-04 23:43:39,110:INFO:Finalizing model
2025-04-04 23:43:39,129:INFO:Uploading results into container
2025-04-04 23:43:39,129:INFO:Uploading model into container now
2025-04-04 23:43:39,129:INFO:_master_model_container: 20
2025-04-04 23:43:39,129:INFO:_display_container: 8
2025-04-04 23:43:39,129:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:43:39,129:INFO:create_model() successfully completed......................................
2025-04-04 23:43:39,176:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:39,176:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.9865
2025-04-04 23:43:39,176:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.9865
2025-04-04 23:43:39,177:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2025-04-04 23:43:39,177:INFO:choose_better completed
2025-04-04 23:43:39,177:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:43:39,182:INFO:_master_model_container: 20
2025-04-04 23:43:39,182:INFO:_display_container: 7
2025-04-04 23:43:39,182:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:43:39,182:INFO:tune_model() successfully completed......................................
2025-04-04 23:43:39,233:INFO:Initializing tune_model()
2025-04-04 23:43:39,233:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:43:39,233:INFO:Checking exceptions
2025-04-04 23:43:39,233:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-04 23:43:39,242:INFO:Copying training dataset
2025-04-04 23:43:39,245:INFO:Checking base model
2025-04-04 23:43:39,245:INFO:Base model : Extra Trees Classifier
2025-04-04 23:43:39,246:INFO:Declaring metric variables
2025-04-04 23:43:39,248:INFO:Defining Hyperparameters
2025-04-04 23:43:39,298:INFO:Tuning with n_jobs=-1
2025-04-04 23:43:39,300:INFO:Initializing skopt.BayesSearchCV
2025-04-04 23:43:52,599:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', False), ('actual_estimator__class_weight', 'balanced'), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 9), ('actual_estimator__max_features', 0.4), ('actual_estimator__min_impurity_decrease', 6.8171362589727084e-06), ('actual_estimator__min_samples_leaf', 2), ('actual_estimator__min_samples_split', 9), ('actual_estimator__n_estimators', 136)])
2025-04-04 23:43:52,600:INFO:Hyperparameter search completed
2025-04-04 23:43:52,600:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:52,600:INFO:Initializing create_model()
2025-04-04 23:43:52,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04F2A7580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': False, 'class_weight': 'balanced', 'criterion': 'entropy', 'max_depth': 9, 'max_features': 0.4, 'min_impurity_decrease': 6.8171362589727084e-06, 'min_samples_leaf': 2, 'min_samples_split': 9, 'n_estimators': 136})
2025-04-04 23:43:52,600:INFO:Checking exceptions
2025-04-04 23:43:52,600:INFO:Importing libraries
2025-04-04 23:43:52,600:INFO:Copying training dataset
2025-04-04 23:43:52,607:INFO:Defining folds
2025-04-04 23:43:52,607:INFO:Declaring metric variables
2025-04-04 23:43:52,611:INFO:Importing untrained model
2025-04-04 23:43:52,611:INFO:Declaring custom model
2025-04-04 23:43:52,613:INFO:Extra Trees Classifier Imported successfully
2025-04-04 23:43:52,617:INFO:Starting cross validation
2025-04-04 23:43:52,618:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:52,828:INFO:Calculating mean and std
2025-04-04 23:43:52,828:INFO:Creating metrics dataframe
2025-04-04 23:43:52,833:INFO:Finalizing model
2025-04-04 23:43:52,954:INFO:Uploading results into container
2025-04-04 23:43:52,954:INFO:Uploading model into container now
2025-04-04 23:43:52,955:INFO:_master_model_container: 21
2025-04-04 23:43:52,955:INFO:_display_container: 8
2025-04-04 23:43:52,956:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=9, max_features=0.4,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=6.8171362589727084e-06,
                     min_samples_leaf=2, min_samples_split=9,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=136, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-04-04 23:43:52,956:INFO:create_model() successfully completed......................................
2025-04-04 23:43:53,050:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:53,050:INFO:choose_better activated
2025-04-04 23:43:53,054:INFO:SubProcess create_model() called ==================================
2025-04-04 23:43:53,054:INFO:Initializing create_model()
2025-04-04 23:43:53,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:43:53,055:INFO:Checking exceptions
2025-04-04 23:43:53,057:INFO:Importing libraries
2025-04-04 23:43:53,057:INFO:Copying training dataset
2025-04-04 23:43:53,063:INFO:Defining folds
2025-04-04 23:43:53,063:INFO:Declaring metric variables
2025-04-04 23:43:53,063:INFO:Importing untrained model
2025-04-04 23:43:53,063:INFO:Declaring custom model
2025-04-04 23:43:53,063:INFO:Extra Trees Classifier Imported successfully
2025-04-04 23:43:53,063:INFO:Starting cross validation
2025-04-04 23:43:53,064:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:43:53,249:INFO:Calculating mean and std
2025-04-04 23:43:53,249:INFO:Creating metrics dataframe
2025-04-04 23:43:53,250:INFO:Finalizing model
2025-04-04 23:43:53,329:INFO:Uploading results into container
2025-04-04 23:43:53,330:INFO:Uploading model into container now
2025-04-04 23:43:53,330:INFO:_master_model_container: 22
2025-04-04 23:43:53,330:INFO:_display_container: 9
2025-04-04 23:43:53,330:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-04 23:43:53,331:INFO:create_model() successfully completed......................................
2025-04-04 23:43:53,391:INFO:SubProcess create_model() end ==================================
2025-04-04 23:43:53,391:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for AUC is 0.9807
2025-04-04 23:43:53,391:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                     criterion='entropy', max_depth=9, max_features=0.4,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=6.8171362589727084e-06,
                     min_samples_leaf=2, min_samples_split=9,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=136, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for AUC is 0.9716
2025-04-04 23:43:53,392:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2025-04-04 23:43:53,392:INFO:choose_better completed
2025-04-04 23:43:53,392:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:43:53,399:INFO:_master_model_container: 22
2025-04-04 23:43:53,399:INFO:_display_container: 8
2025-04-04 23:43:53,399:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-04 23:43:53,400:INFO:tune_model() successfully completed......................................
2025-04-04 23:43:53,447:INFO:Initializing tune_model()
2025-04-04 23:43:53,447:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:43:53,447:INFO:Checking exceptions
2025-04-04 23:43:53,447:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-04 23:43:53,459:INFO:Copying training dataset
2025-04-04 23:43:53,462:INFO:Checking base model
2025-04-04 23:43:53,463:INFO:Base model : Random Forest Classifier
2025-04-04 23:43:53,464:INFO:Declaring metric variables
2025-04-04 23:43:53,466:INFO:Defining Hyperparameters
2025-04-04 23:43:53,538:INFO:Tuning with n_jobs=-1
2025-04-04 23:43:53,540:INFO:Initializing skopt.BayesSearchCV
2025-04-04 23:44:12,479:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', True), ('actual_estimator__class_weight', 'balanced'), ('actual_estimator__criterion', 'gini'), ('actual_estimator__max_depth', 11), ('actual_estimator__max_features', 1.0), ('actual_estimator__min_impurity_decrease', 4.744171002221953e-08), ('actual_estimator__min_samples_leaf', 2), ('actual_estimator__min_samples_split', 6), ('actual_estimator__n_estimators', 113)])
2025-04-04 23:44:12,479:INFO:Hyperparameter search completed
2025-04-04 23:44:12,479:INFO:SubProcess create_model() called ==================================
2025-04-04 23:44:12,480:INFO:Initializing create_model()
2025-04-04 23:44:12,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F04F5D7D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': True, 'class_weight': 'balanced', 'criterion': 'gini', 'max_depth': 11, 'max_features': 1.0, 'min_impurity_decrease': 4.744171002221953e-08, 'min_samples_leaf': 2, 'min_samples_split': 6, 'n_estimators': 113})
2025-04-04 23:44:12,480:INFO:Checking exceptions
2025-04-04 23:44:12,480:INFO:Importing libraries
2025-04-04 23:44:12,480:INFO:Copying training dataset
2025-04-04 23:44:12,484:INFO:Defining folds
2025-04-04 23:44:12,484:INFO:Declaring metric variables
2025-04-04 23:44:12,486:INFO:Importing untrained model
2025-04-04 23:44:12,486:INFO:Declaring custom model
2025-04-04 23:44:12,488:INFO:Random Forest Classifier Imported successfully
2025-04-04 23:44:12,491:INFO:Starting cross validation
2025-04-04 23:44:12,492:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:44:12,945:INFO:Calculating mean and std
2025-04-04 23:44:12,946:INFO:Creating metrics dataframe
2025-04-04 23:44:12,949:INFO:Finalizing model
2025-04-04 23:44:13,153:INFO:Uploading results into container
2025-04-04 23:44:13,154:INFO:Uploading model into container now
2025-04-04 23:44:13,154:INFO:_master_model_container: 23
2025-04-04 23:44:13,154:INFO:_display_container: 9
2025-04-04 23:44:13,154:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=11, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=4.744171002221953e-08,
                       min_samples_leaf=2, min_samples_split=6,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=113, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-04 23:44:13,154:INFO:create_model() successfully completed......................................
2025-04-04 23:44:13,203:INFO:SubProcess create_model() end ==================================
2025-04-04 23:44:13,203:INFO:choose_better activated
2025-04-04 23:44:13,205:INFO:SubProcess create_model() called ==================================
2025-04-04 23:44:13,206:INFO:Initializing create_model()
2025-04-04 23:44:13,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:13,206:INFO:Checking exceptions
2025-04-04 23:44:13,207:INFO:Importing libraries
2025-04-04 23:44:13,207:INFO:Copying training dataset
2025-04-04 23:44:13,211:INFO:Defining folds
2025-04-04 23:44:13,211:INFO:Declaring metric variables
2025-04-04 23:44:13,211:INFO:Importing untrained model
2025-04-04 23:44:13,211:INFO:Declaring custom model
2025-04-04 23:44:13,212:INFO:Random Forest Classifier Imported successfully
2025-04-04 23:44:13,212:INFO:Starting cross validation
2025-04-04 23:44:13,212:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:44:13,438:INFO:Calculating mean and std
2025-04-04 23:44:13,438:INFO:Creating metrics dataframe
2025-04-04 23:44:13,439:INFO:Finalizing model
2025-04-04 23:44:13,560:INFO:Uploading results into container
2025-04-04 23:44:13,561:INFO:Uploading model into container now
2025-04-04 23:44:13,561:INFO:_master_model_container: 24
2025-04-04 23:44:13,561:INFO:_display_container: 10
2025-04-04 23:44:13,561:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-04 23:44:13,561:INFO:create_model() successfully completed......................................
2025-04-04 23:44:13,607:INFO:SubProcess create_model() end ==================================
2025-04-04 23:44:13,607:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for AUC is 0.9714
2025-04-04 23:44:13,608:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=11, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=4.744171002221953e-08,
                       min_samples_leaf=2, min_samples_split=6,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=113, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for AUC is 0.9596
2025-04-04 23:44:13,608:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2025-04-04 23:44:13,608:INFO:choose_better completed
2025-04-04 23:44:13,608:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-04 23:44:13,612:INFO:_master_model_container: 24
2025-04-04 23:44:13,612:INFO:_display_container: 9
2025-04-04 23:44:13,613:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-04 23:44:13,613:INFO:tune_model() successfully completed......................................
2025-04-04 23:44:13,668:INFO:Initializing tune_model()
2025-04-04 23:44:13,669:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>)
2025-04-04 23:44:13,669:INFO:Checking exceptions
2025-04-04 23:44:13,669:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-04 23:44:13,684:INFO:Copying training dataset
2025-04-04 23:44:13,687:INFO:Checking base model
2025-04-04 23:44:13,687:INFO:Base model : Decision Tree Classifier
2025-04-04 23:44:13,689:INFO:Declaring metric variables
2025-04-04 23:44:13,691:INFO:Defining Hyperparameters
2025-04-04 23:44:13,792:INFO:Tuning with n_jobs=-1
2025-04-04 23:44:13,794:INFO:Initializing skopt.BayesSearchCV
2025-04-04 23:44:23,097:INFO:best_params: OrderedDict([('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 6), ('actual_estimator__max_features', 0.4), ('actual_estimator__min_impurity_decrease', 1.2570314440604321e-08), ('actual_estimator__min_samples_leaf', 5), ('actual_estimator__min_samples_split', 3)])
2025-04-04 23:44:23,098:INFO:Hyperparameter search completed
2025-04-04 23:44:23,099:INFO:SubProcess create_model() called ==================================
2025-04-04 23:44:23,099:INFO:Initializing create_model()
2025-04-04 23:44:23,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0672642E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'criterion': 'entropy', 'max_depth': 6, 'max_features': 0.4, 'min_impurity_decrease': 1.2570314440604321e-08, 'min_samples_leaf': 5, 'min_samples_split': 3})
2025-04-04 23:44:23,099:INFO:Checking exceptions
2025-04-04 23:44:23,099:INFO:Importing libraries
2025-04-04 23:44:23,099:INFO:Copying training dataset
2025-04-04 23:44:23,107:INFO:Defining folds
2025-04-04 23:44:23,107:INFO:Declaring metric variables
2025-04-04 23:44:23,110:INFO:Importing untrained model
2025-04-04 23:44:23,110:INFO:Declaring custom model
2025-04-04 23:44:23,112:INFO:Decision Tree Classifier Imported successfully
2025-04-04 23:44:23,117:INFO:Starting cross validation
2025-04-04 23:44:23,118:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:44:23,177:INFO:Calculating mean and std
2025-04-04 23:44:23,177:INFO:Creating metrics dataframe
2025-04-04 23:44:23,180:INFO:Finalizing model
2025-04-04 23:44:23,200:INFO:Uploading results into container
2025-04-04 23:44:23,200:INFO:Uploading model into container now
2025-04-04 23:44:23,200:INFO:_master_model_container: 25
2025-04-04 23:44:23,200:INFO:_display_container: 10
2025-04-04 23:44:23,200:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=0.4, max_leaf_nodes=None,
                       min_impurity_decrease=1.2570314440604321e-08,
                       min_samples_leaf=5, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best')
2025-04-04 23:44:23,200:INFO:create_model() successfully completed......................................
2025-04-04 23:44:23,253:INFO:SubProcess create_model() end ==================================
2025-04-04 23:44:23,253:INFO:choose_better activated
2025-04-04 23:44:23,255:INFO:SubProcess create_model() called ==================================
2025-04-04 23:44:23,255:INFO:Initializing create_model()
2025-04-04 23:44:23,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:23,255:INFO:Checking exceptions
2025-04-04 23:44:23,256:INFO:Importing libraries
2025-04-04 23:44:23,256:INFO:Copying training dataset
2025-04-04 23:44:23,260:INFO:Defining folds
2025-04-04 23:44:23,260:INFO:Declaring metric variables
2025-04-04 23:44:23,260:INFO:Importing untrained model
2025-04-04 23:44:23,260:INFO:Declaring custom model
2025-04-04 23:44:23,260:INFO:Decision Tree Classifier Imported successfully
2025-04-04 23:44:23,260:INFO:Starting cross validation
2025-04-04 23:44:23,261:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-04 23:44:23,317:INFO:Calculating mean and std
2025-04-04 23:44:23,317:INFO:Creating metrics dataframe
2025-04-04 23:44:23,318:INFO:Finalizing model
2025-04-04 23:44:23,350:INFO:Uploading results into container
2025-04-04 23:44:23,351:INFO:Uploading model into container now
2025-04-04 23:44:23,351:INFO:_master_model_container: 26
2025-04-04 23:44:23,351:INFO:_display_container: 11
2025-04-04 23:44:23,351:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-04 23:44:23,351:INFO:create_model() successfully completed......................................
2025-04-04 23:44:23,398:INFO:SubProcess create_model() end ==================================
2025-04-04 23:44:23,399:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for AUC is 0.7612
2025-04-04 23:44:23,399:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=0.4, max_leaf_nodes=None,
                       min_impurity_decrease=1.2570314440604321e-08,
                       min_samples_leaf=5, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best') result for AUC is 0.8258
2025-04-04 23:44:23,399:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=0.4, max_leaf_nodes=None,
                       min_impurity_decrease=1.2570314440604321e-08,
                       min_samples_leaf=5, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best') is best model
2025-04-04 23:44:23,399:INFO:choose_better completed
2025-04-04 23:44:23,403:INFO:_master_model_container: 26
2025-04-04 23:44:23,403:INFO:_display_container: 10
2025-04-04 23:44:23,403:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=0.4, max_leaf_nodes=None,
                       min_impurity_decrease=1.2570314440604321e-08,
                       min_samples_leaf=5, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best')
2025-04-04 23:44:23,403:INFO:tune_model() successfully completed......................................
2025-04-04 23:44:23,452:INFO:Initializing finalize_model()
2025-04-04 23:44:23,452:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:23,452:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-04 23:44:23,455:INFO:Initializing create_model()
2025-04-04 23:44:23,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:23,456:INFO:Checking exceptions
2025-04-04 23:44:23,456:INFO:Importing libraries
2025-04-04 23:44:23,456:INFO:Copying training dataset
2025-04-04 23:44:23,457:INFO:Defining folds
2025-04-04 23:44:23,457:INFO:Declaring metric variables
2025-04-04 23:44:23,457:INFO:Importing untrained model
2025-04-04 23:44:23,457:INFO:Declaring custom model
2025-04-04 23:44:23,457:INFO:Logistic Regression Imported successfully
2025-04-04 23:44:23,458:INFO:Cross validation set to False
2025-04-04 23:44:23,458:INFO:Fitting Model
2025-04-04 23:44:23,485:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-04 23:44:23,485:INFO:create_model() successfully completed......................................
2025-04-04 23:44:23,531:INFO:_master_model_container: 26
2025-04-04 23:44:23,531:INFO:_display_container: 10
2025-04-04 23:44:23,534:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-04 23:44:23,534:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:23,577:INFO:Initializing finalize_model()
2025-04-04 23:44:23,577:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:23,577:INFO:Finalizing SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-04 23:44:23,580:INFO:Initializing create_model()
2025-04-04 23:44:23,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:23,580:INFO:Checking exceptions
2025-04-04 23:44:23,581:INFO:Importing libraries
2025-04-04 23:44:23,581:INFO:Copying training dataset
2025-04-04 23:44:23,581:INFO:Defining folds
2025-04-04 23:44:23,581:INFO:Declaring metric variables
2025-04-04 23:44:23,581:INFO:Importing untrained model
2025-04-04 23:44:23,581:INFO:Declaring custom model
2025-04-04 23:44:23,582:INFO:SVM - Radial Kernel Imported successfully
2025-04-04 23:44:23,582:INFO:Cross validation set to False
2025-04-04 23:44:23,582:INFO:Fitting Model
2025-04-04 23:44:23,615:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-04 23:44:23,615:INFO:create_model() successfully completed......................................
2025-04-04 23:44:23,661:INFO:_master_model_container: 26
2025-04-04 23:44:23,661:INFO:_display_container: 10
2025-04-04 23:44:23,664:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-04 23:44:23,664:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:23,706:INFO:Initializing finalize_model()
2025-04-04 23:44:23,706:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:23,707:INFO:Finalizing MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False)
2025-04-04 23:44:23,710:INFO:Initializing create_model()
2025-04-04 23:44:23,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=MLPClassifier(activation='identity', alpha=6.905829578050526e-05,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:23,710:INFO:Checking exceptions
2025-04-04 23:44:23,711:INFO:Importing libraries
2025-04-04 23:44:23,711:INFO:Copying training dataset
2025-04-04 23:44:23,711:INFO:Defining folds
2025-04-04 23:44:23,711:INFO:Declaring metric variables
2025-04-04 23:44:23,711:INFO:Importing untrained model
2025-04-04 23:44:23,711:INFO:Declaring custom model
2025-04-04 23:44:23,711:INFO:MLP Classifier Imported successfully
2025-04-04 23:44:23,712:INFO:Cross validation set to False
2025-04-04 23:44:23,712:INFO:Fitting Model
2025-04-04 23:44:25,445:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                               beta_1=0.9, beta_2=0.999, early_stopping=False,
                               epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
                               learning_rate='constant',
                               learning_rate_init=0.001, max_fun=15000,
                               max_iter=500, momentum=0.9, n_iter_no_change=10,
                               nesterovs_momentum=True, power_t=0.5,
                               random_state=123, shuffle=True, solver='adam',
                               tol=0.0001, validation_fraction=0.1,
                               verbose=False, warm_start=False))],
         verbose=False)
2025-04-04 23:44:25,445:INFO:create_model() successfully completed......................................
2025-04-04 23:44:25,491:INFO:_master_model_container: 26
2025-04-04 23:44:25,491:INFO:_display_container: 10
2025-04-04 23:44:25,494:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                               beta_1=0.9, beta_2=0.999, early_stopping=False,
                               epsilon=1e-08, hidden_layer_sizes=[83, 29, 83],
                               learning_rate='constant',
                               learning_rate_init=0.001, max_fun=15000,
                               max_iter=500, momentum=0.9, n_iter_no_change=10,
                               nesterovs_momentum=True, power_t=0.5,
                               random_state=123, shuffle=True, solver='adam',
                               tol=0.0001, validation_fraction=0.1,
                               verbose=False, warm_start=False))],
         verbose=False)
2025-04-04 23:44:25,494:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:25,538:INFO:Initializing finalize_model()
2025-04-04 23:44:25,538:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:25,538:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-04 23:44:25,541:INFO:Initializing create_model()
2025-04-04 23:44:25,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:25,541:INFO:Checking exceptions
2025-04-04 23:44:25,542:INFO:Importing libraries
2025-04-04 23:44:25,542:INFO:Copying training dataset
2025-04-04 23:44:25,542:INFO:Defining folds
2025-04-04 23:44:25,542:INFO:Declaring metric variables
2025-04-04 23:44:25,542:INFO:Importing untrained model
2025-04-04 23:44:25,542:INFO:Declaring custom model
2025-04-04 23:44:25,543:INFO:Ridge Classifier Imported successfully
2025-04-04 23:44:25,543:INFO:Cross validation set to False
2025-04-04 23:44:25,543:INFO:Fitting Model
2025-04-04 23:44:25,555:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-04 23:44:25,555:INFO:create_model() successfully completed......................................
2025-04-04 23:44:25,622:INFO:_master_model_container: 26
2025-04-04 23:44:25,622:INFO:_display_container: 10
2025-04-04 23:44:25,624:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-04 23:44:25,624:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:25,666:INFO:Initializing finalize_model()
2025-04-04 23:44:25,666:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:25,667:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-04 23:44:25,670:INFO:Initializing create_model()
2025-04-04 23:44:25,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:25,670:INFO:Checking exceptions
2025-04-04 23:44:25,670:INFO:Importing libraries
2025-04-04 23:44:25,671:INFO:Copying training dataset
2025-04-04 23:44:25,671:INFO:Defining folds
2025-04-04 23:44:25,671:INFO:Declaring metric variables
2025-04-04 23:44:25,671:INFO:Importing untrained model
2025-04-04 23:44:25,671:INFO:Declaring custom model
2025-04-04 23:44:25,671:INFO:Linear Discriminant Analysis Imported successfully
2025-04-04 23:44:25,672:INFO:Cross validation set to False
2025-04-04 23:44:25,672:INFO:Fitting Model
2025-04-04 23:44:25,708:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-04 23:44:25,708:INFO:create_model() successfully completed......................................
2025-04-04 23:44:25,755:INFO:_master_model_container: 26
2025-04-04 23:44:25,755:INFO:_display_container: 10
2025-04-04 23:44:25,757:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-04 23:44:25,757:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:25,802:INFO:Initializing finalize_model()
2025-04-04 23:44:25,803:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:25,804:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-04 23:44:25,809:INFO:Initializing create_model()
2025-04-04 23:44:25,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:25,809:INFO:Checking exceptions
2025-04-04 23:44:25,810:INFO:Importing libraries
2025-04-04 23:44:25,810:INFO:Copying training dataset
2025-04-04 23:44:25,811:INFO:Defining folds
2025-04-04 23:44:25,813:INFO:Declaring metric variables
2025-04-04 23:44:25,813:INFO:Importing untrained model
2025-04-04 23:44:25,813:INFO:Declaring custom model
2025-04-04 23:44:25,813:INFO:Gradient Boosting Classifier Imported successfully
2025-04-04 23:44:25,814:INFO:Cross validation set to False
2025-04-04 23:44:25,814:INFO:Fitting Model
2025-04-04 23:44:27,078:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-04-04 23:44:27,078:INFO:create_model() successfully completed......................................
2025-04-04 23:44:27,161:INFO:_master_model_container: 26
2025-04-04 23:44:27,161:INFO:_display_container: 10
2025-04-04 23:44:27,166:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-04-04 23:44:27,166:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:27,247:INFO:Initializing finalize_model()
2025-04-04 23:44:27,247:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:27,247:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-04 23:44:27,255:INFO:Initializing create_model()
2025-04-04 23:44:27,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:27,255:INFO:Checking exceptions
2025-04-04 23:44:27,256:INFO:Importing libraries
2025-04-04 23:44:27,256:INFO:Copying training dataset
2025-04-04 23:44:27,256:INFO:Defining folds
2025-04-04 23:44:27,256:INFO:Declaring metric variables
2025-04-04 23:44:27,256:INFO:Importing untrained model
2025-04-04 23:44:27,256:INFO:Declaring custom model
2025-04-04 23:44:27,256:INFO:Extra Trees Classifier Imported successfully
2025-04-04 23:44:27,259:INFO:Cross validation set to False
2025-04-04 23:44:27,259:INFO:Fitting Model
2025-04-04 23:44:27,356:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-04-04 23:44:27,356:INFO:create_model() successfully completed......................................
2025-04-04 23:44:27,405:INFO:_master_model_container: 26
2025-04-04 23:44:27,405:INFO:_display_container: 10
2025-04-04 23:44:27,408:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-04-04 23:44:27,408:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:27,452:INFO:Initializing finalize_model()
2025-04-04 23:44:27,452:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:27,452:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-04 23:44:27,455:INFO:Initializing create_model()
2025-04-04 23:44:27,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:27,455:INFO:Checking exceptions
2025-04-04 23:44:27,456:INFO:Importing libraries
2025-04-04 23:44:27,456:INFO:Copying training dataset
2025-04-04 23:44:27,457:INFO:Defining folds
2025-04-04 23:44:27,457:INFO:Declaring metric variables
2025-04-04 23:44:27,457:INFO:Importing untrained model
2025-04-04 23:44:27,457:INFO:Declaring custom model
2025-04-04 23:44:27,458:INFO:Random Forest Classifier Imported successfully
2025-04-04 23:44:27,458:INFO:Cross validation set to False
2025-04-04 23:44:27,458:INFO:Fitting Model
2025-04-04 23:44:27,565:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-04 23:44:27,565:INFO:create_model() successfully completed......................................
2025-04-04 23:44:27,612:INFO:_master_model_container: 26
2025-04-04 23:44:27,612:INFO:_display_container: 10
2025-04-04 23:44:27,615:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-04 23:44:27,615:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:27,659:INFO:Initializing finalize_model()
2025-04-04 23:44:27,659:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:27,659:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-04 23:44:27,662:INFO:Initializing create_model()
2025-04-04 23:44:27,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:27,663:INFO:Checking exceptions
2025-04-04 23:44:27,663:INFO:Importing libraries
2025-04-04 23:44:27,664:INFO:Copying training dataset
2025-04-04 23:44:27,664:INFO:Defining folds
2025-04-04 23:44:27,664:INFO:Declaring metric variables
2025-04-04 23:44:27,664:INFO:Importing untrained model
2025-04-04 23:44:27,664:INFO:Declaring custom model
2025-04-04 23:44:27,665:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-04 23:44:27,665:INFO:Cross validation set to False
2025-04-04 23:44:27,665:INFO:Fitting Model
2025-04-04 23:44:27,698:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-04-04 23:44:27,698:INFO:create_model() successfully completed......................................
2025-04-04 23:44:27,746:INFO:_master_model_container: 26
2025-04-04 23:44:27,746:INFO:_display_container: 10
2025-04-04 23:44:27,749:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-04-04 23:44:27,749:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:27,792:INFO:Initializing finalize_model()
2025-04-04 23:44:27,792:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=0.4, max_leaf_nodes=None,
                       min_impurity_decrease=1.2570314440604321e-08,
                       min_samples_leaf=5, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-04 23:44:27,792:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=0.4, max_leaf_nodes=None,
                       min_impurity_decrease=1.2570314440604321e-08,
                       min_samples_leaf=5, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best')
2025-04-04 23:44:27,795:INFO:Initializing create_model()
2025-04-04 23:44:27,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F04CFE1820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=0.4, max_leaf_nodes=None,
                       min_impurity_decrease=1.2570314440604321e-08,
                       min_samples_leaf=5, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-04 23:44:27,795:INFO:Checking exceptions
2025-04-04 23:44:27,796:INFO:Importing libraries
2025-04-04 23:44:27,796:INFO:Copying training dataset
2025-04-04 23:44:27,797:INFO:Defining folds
2025-04-04 23:44:27,797:INFO:Declaring metric variables
2025-04-04 23:44:27,797:INFO:Importing untrained model
2025-04-04 23:44:27,797:INFO:Declaring custom model
2025-04-04 23:44:27,797:INFO:Decision Tree Classifier Imported successfully
2025-04-04 23:44:27,797:INFO:Cross validation set to False
2025-04-04 23:44:27,797:INFO:Fitting Model
2025-04-04 23:44:27,828:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='entropy', max_depth=6,
                                        max_features=0.4, max_leaf_nodes=None,
                                        min_impurity_decrease=1.2570314440604321e-08,
                                        min_samples_leaf=5, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-04-04 23:44:27,828:INFO:create_model() successfully completed......................................
2025-04-04 23:44:27,874:INFO:_master_model_container: 26
2025-04-04 23:44:27,874:INFO:_display_container: 10
2025-04-04 23:44:27,877:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['I0 lag0', 'I0 lag1', 'I1 lag0',
                                             'I1 lag1', 'I2 lag0', 'I2 lag1',
                                             'I3 lag0', 'I3 lag1', 'I4 lag0',
                                             'I4 lag1', 'R0 from I0 lag0',
                                             'R0 from I0 lag1',
                                             'R1 from I3 lag0',
                                             'R1 from I3 lag1',
                                             'R2 from I4 lag0',
                                             'R2 from I4 lag1',
                                             'R3 from I2 lag0',
                                             'R3 from I2 lag1',
                                             'R4 from I0 lag0',
                                             'R4 from I0 lag1',
                                             'R5...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='entropy', max_depth=6,
                                        max_features=0.4, max_leaf_nodes=None,
                                        min_impurity_decrease=1.2570314440604321e-08,
                                        min_samples_leaf=5, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-04-04 23:44:27,877:INFO:finalize_model() successfully completed......................................
2025-04-04 23:44:27,978:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\arch\bootstrap\base.py:402: FutureWarning: random_state is deprecated and will be removed in a future version. The default random number generator is changing to a NumPy Generator. To continue using RandomState, please directly pass a RandomState instance using the ``generator`` keyword argument.
  warnings.warn(

2025-04-06 16:27:01,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 16:27:01,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 16:27:01,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 16:27:01,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 16:27:46,469:INFO:PyCaret ClassificationExperiment
2025-04-06 16:27:46,469:INFO:Logging name: clf-default-name
2025-04-06 16:27:46,469:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 16:27:46,469:INFO:version 3.3.2
2025-04-06 16:27:46,469:INFO:Initializing setup()
2025-04-06 16:27:46,469:INFO:self.USI: e317
2025-04-06 16:27:46,469:INFO:self._variable_keys: {'y_train', 'logging_param', 'X', 'fold_groups_param', 'X_test', 'USI', 'idx', 'fix_imbalance', 'is_multiclass', 'log_plots_param', 'X_train', 'y_test', 'y', 'exp_id', 'html_param', 'target_param', 'fold_shuffle_param', 'pipeline', 'seed', 'gpu_param', 'n_jobs_param', 'data', '_available_plots', '_ml_usecase', 'memory', 'fold_generator', 'exp_name_log', 'gpu_n_jobs_param'}
2025-04-06 16:27:46,469:INFO:Checking environment
2025-04-06 16:27:46,469:INFO:python_version: 3.9.21
2025-04-06 16:27:46,469:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 16:27:46,469:INFO:machine: AMD64
2025-04-06 16:27:46,469:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 16:27:46,475:INFO:Memory: svmem(total=137112563712, available=102935560192, percent=24.9, used=34177003520, free=102935560192)
2025-04-06 16:27:46,475:INFO:Physical Core: 24
2025-04-06 16:27:46,475:INFO:Logical Core: 32
2025-04-06 16:27:46,475:INFO:Checking libraries
2025-04-06 16:27:46,475:INFO:System:
2025-04-06 16:27:46,475:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 16:27:46,475:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 16:27:46,475:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 16:27:46,475:INFO:PyCaret required dependencies:
2025-04-06 16:27:46,517:INFO:                 pip: 25.0
2025-04-06 16:27:46,517:INFO:          setuptools: 72.1.0
2025-04-06 16:27:46,517:INFO:             pycaret: 3.3.2
2025-04-06 16:27:46,517:INFO:             IPython: 8.18.1
2025-04-06 16:27:46,517:INFO:          ipywidgets: 8.1.5
2025-04-06 16:27:46,517:INFO:                tqdm: 4.67.1
2025-04-06 16:27:46,517:INFO:               numpy: 1.26.4
2025-04-06 16:27:46,517:INFO:              pandas: 2.1.4
2025-04-06 16:27:46,517:INFO:              jinja2: 3.1.6
2025-04-06 16:27:46,517:INFO:               scipy: 1.11.4
2025-04-06 16:27:46,517:INFO:              joblib: 1.3.2
2025-04-06 16:27:46,517:INFO:             sklearn: 1.4.2
2025-04-06 16:27:46,517:INFO:                pyod: 2.0.4
2025-04-06 16:27:46,517:INFO:            imblearn: 0.12.4
2025-04-06 16:27:46,517:INFO:   category_encoders: 2.6.4
2025-04-06 16:27:46,517:INFO:            lightgbm: 4.6.0
2025-04-06 16:27:46,517:INFO:               numba: 0.60.0
2025-04-06 16:27:46,517:INFO:            requests: 2.32.3
2025-04-06 16:27:46,517:INFO:          matplotlib: 3.7.5
2025-04-06 16:27:46,517:INFO:          scikitplot: 0.3.7
2025-04-06 16:27:46,517:INFO:         yellowbrick: 1.5
2025-04-06 16:27:46,517:INFO:              plotly: 5.24.1
2025-04-06 16:27:46,517:INFO:    plotly-resampler: Not installed
2025-04-06 16:27:46,517:INFO:             kaleido: 0.2.1
2025-04-06 16:27:46,517:INFO:           schemdraw: 0.15
2025-04-06 16:27:46,517:INFO:         statsmodels: 0.14.4
2025-04-06 16:27:46,517:INFO:              sktime: 0.26.0
2025-04-06 16:27:46,517:INFO:               tbats: 1.1.3
2025-04-06 16:27:46,517:INFO:            pmdarima: 2.0.4
2025-04-06 16:27:46,517:INFO:              psutil: 7.0.0
2025-04-06 16:27:46,517:INFO:          markupsafe: 3.0.2
2025-04-06 16:27:46,517:INFO:             pickle5: Not installed
2025-04-06 16:27:46,517:INFO:         cloudpickle: 3.1.1
2025-04-06 16:27:46,517:INFO:         deprecation: 2.1.0
2025-04-06 16:27:46,517:INFO:              xxhash: 3.5.0
2025-04-06 16:27:46,517:INFO:           wurlitzer: Not installed
2025-04-06 16:27:46,517:INFO:PyCaret optional dependencies:
2025-04-06 16:27:46,522:INFO:                shap: Not installed
2025-04-06 16:27:46,522:INFO:           interpret: Not installed
2025-04-06 16:27:46,522:INFO:                umap: Not installed
2025-04-06 16:27:46,522:INFO:     ydata_profiling: Not installed
2025-04-06 16:27:46,522:INFO:  explainerdashboard: Not installed
2025-04-06 16:27:46,522:INFO:             autoviz: Not installed
2025-04-06 16:27:46,522:INFO:           fairlearn: Not installed
2025-04-06 16:27:46,522:INFO:          deepchecks: Not installed
2025-04-06 16:27:46,522:INFO:             xgboost: Not installed
2025-04-06 16:27:46,522:INFO:            catboost: Not installed
2025-04-06 16:27:46,522:INFO:              kmodes: Not installed
2025-04-06 16:27:46,522:INFO:             mlxtend: Not installed
2025-04-06 16:27:46,522:INFO:       statsforecast: Not installed
2025-04-06 16:27:46,522:INFO:        tune_sklearn: Not installed
2025-04-06 16:27:46,522:INFO:                 ray: Not installed
2025-04-06 16:27:46,522:INFO:            hyperopt: 0.2.7
2025-04-06 16:27:46,522:INFO:              optuna: 4.2.1
2025-04-06 16:27:46,522:INFO:               skopt: 0.10.2
2025-04-06 16:27:46,522:INFO:              mlflow: Not installed
2025-04-06 16:27:46,522:INFO:              gradio: Not installed
2025-04-06 16:27:46,522:INFO:             fastapi: Not installed
2025-04-06 16:27:46,522:INFO:             uvicorn: Not installed
2025-04-06 16:27:46,522:INFO:              m2cgen: Not installed
2025-04-06 16:27:46,522:INFO:           evidently: Not installed
2025-04-06 16:27:46,522:INFO:               fugue: Not installed
2025-04-06 16:27:46,522:INFO:           streamlit: Not installed
2025-04-06 16:27:46,522:INFO:             prophet: Not installed
2025-04-06 16:27:46,522:INFO:None
2025-04-06 16:27:46,522:INFO:Set up data.
2025-04-06 16:27:46,526:INFO:Set up folding strategy.
2025-04-06 16:27:46,526:INFO:Set up train/test split.
2025-04-06 16:27:46,530:INFO:Set up index.
2025-04-06 16:27:46,530:INFO:Assigning column types.
2025-04-06 16:27:46,533:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-06 16:27:46,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 16:27:46,555:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 16:27:46,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,590:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 16:27:46,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 16:27:46,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,603:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-06 16:27:46,623:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 16:27:46,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,653:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 16:27:46,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,665:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-06 16:27:46,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,727:INFO:Preparing preprocessing pipeline...
2025-04-06 16:27:46,727:INFO:Set up simple imputation.
2025-04-06 16:27:46,727:INFO:Set up feature normalization.
2025-04-06 16:27:46,728:INFO:Set up column name cleaning.
2025-04-06 16:27:46,759:INFO:Finished creating preprocessing pipeline.
2025-04-06 16:27:46,762:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-04-06 16:27:46,762:INFO:Creating final display dataframe.
2025-04-06 16:27:46,828:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Direction
2                   Target type            Binary
3           Original data shape         (969, 45)
4        Transformed data shape         (969, 45)
5   Transformed train set shape         (959, 45)
6    Transformed test set shape          (10, 45)
7              Numeric features                44
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e317
2025-04-06 16:27:46,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,896:INFO:setup() successfully completed in 0.43s...............
2025-04-06 16:27:46,896:INFO:gpu_param set to False
2025-04-06 16:27:46,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,961:INFO:gpu_param set to False
2025-04-06 16:27:46,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:46,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:47,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:47,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 16:27:47,027:INFO:Initializing compare_models()
2025-04-06 16:27:47,027:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, include=['mlp', 'et', 'dt', 'ridge', 'lr', 'gbc', 'rf', 'qda', 'lda', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, 'include': ['mlp', 'et', 'dt', 'ridge', 'lr', 'gbc', 'rf', 'qda', 'lda', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-06 16:27:47,027:INFO:Checking exceptions
2025-04-06 16:27:47,030:INFO:Preparing display monitor
2025-04-06 16:27:47,042:INFO:Initializing MLP Classifier
2025-04-06 16:27:47,042:INFO:Total runtime is 0.0 minutes
2025-04-06 16:27:47,044:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:47,044:INFO:Initializing create_model()
2025-04-06 16:27:47,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:47,044:INFO:Checking exceptions
2025-04-06 16:27:47,044:INFO:Importing libraries
2025-04-06 16:27:47,044:INFO:Copying training dataset
2025-04-06 16:27:47,048:INFO:Defining folds
2025-04-06 16:27:47,048:INFO:Declaring metric variables
2025-04-06 16:27:47,049:INFO:Importing untrained model
2025-04-06 16:27:47,051:INFO:MLP Classifier Imported successfully
2025-04-06 16:27:47,056:INFO:Starting cross validation
2025-04-06 16:27:47,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:49,605:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,605:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,607:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,608:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,651:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,656:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,770:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,784:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,786:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,845:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 16:27:49,869:INFO:Calculating mean and std
2025-04-06 16:27:49,870:INFO:Creating metrics dataframe
2025-04-06 16:27:49,871:INFO:Uploading results into container
2025-04-06 16:27:49,871:INFO:Uploading model into container now
2025-04-06 16:27:49,872:INFO:_master_model_container: 1
2025-04-06 16:27:49,872:INFO:_display_container: 2
2025-04-06 16:27:49,872:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 16:27:49,872:INFO:create_model() successfully completed......................................
2025-04-06 16:27:49,950:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:49,950:INFO:Creating metrics dataframe
2025-04-06 16:27:49,953:INFO:Initializing Extra Trees Classifier
2025-04-06 16:27:49,953:INFO:Total runtime is 0.04852039019266764 minutes
2025-04-06 16:27:49,956:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:49,956:INFO:Initializing create_model()
2025-04-06 16:27:49,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:49,956:INFO:Checking exceptions
2025-04-06 16:27:49,956:INFO:Importing libraries
2025-04-06 16:27:49,956:INFO:Copying training dataset
2025-04-06 16:27:49,959:INFO:Defining folds
2025-04-06 16:27:49,959:INFO:Declaring metric variables
2025-04-06 16:27:49,961:INFO:Importing untrained model
2025-04-06 16:27:49,963:INFO:Extra Trees Classifier Imported successfully
2025-04-06 16:27:49,966:INFO:Starting cross validation
2025-04-06 16:27:49,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:51,544:INFO:Calculating mean and std
2025-04-06 16:27:51,545:INFO:Creating metrics dataframe
2025-04-06 16:27:51,548:INFO:Uploading results into container
2025-04-06 16:27:51,548:INFO:Uploading model into container now
2025-04-06 16:27:51,549:INFO:_master_model_container: 2
2025-04-06 16:27:51,549:INFO:_display_container: 2
2025-04-06 16:27:51,549:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 16:27:51,549:INFO:create_model() successfully completed......................................
2025-04-06 16:27:51,646:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:51,646:INFO:Creating metrics dataframe
2025-04-06 16:27:51,650:INFO:Initializing Decision Tree Classifier
2025-04-06 16:27:51,650:INFO:Total runtime is 0.07679963111877441 minutes
2025-04-06 16:27:51,652:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:51,652:INFO:Initializing create_model()
2025-04-06 16:27:51,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:51,652:INFO:Checking exceptions
2025-04-06 16:27:51,652:INFO:Importing libraries
2025-04-06 16:27:51,652:INFO:Copying training dataset
2025-04-06 16:27:51,656:INFO:Defining folds
2025-04-06 16:27:51,656:INFO:Declaring metric variables
2025-04-06 16:27:51,657:INFO:Importing untrained model
2025-04-06 16:27:51,659:INFO:Decision Tree Classifier Imported successfully
2025-04-06 16:27:51,662:INFO:Starting cross validation
2025-04-06 16:27:51,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:53,102:INFO:Calculating mean and std
2025-04-06 16:27:53,103:INFO:Creating metrics dataframe
2025-04-06 16:27:53,104:INFO:Uploading results into container
2025-04-06 16:27:53,105:INFO:Uploading model into container now
2025-04-06 16:27:53,105:INFO:_master_model_container: 3
2025-04-06 16:27:53,106:INFO:_display_container: 2
2025-04-06 16:27:53,106:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 16:27:53,106:INFO:create_model() successfully completed......................................
2025-04-06 16:27:53,182:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:53,182:INFO:Creating metrics dataframe
2025-04-06 16:27:53,186:INFO:Initializing Ridge Classifier
2025-04-06 16:27:53,186:INFO:Total runtime is 0.10240261952082316 minutes
2025-04-06 16:27:53,188:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:53,189:INFO:Initializing create_model()
2025-04-06 16:27:53,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:53,189:INFO:Checking exceptions
2025-04-06 16:27:53,189:INFO:Importing libraries
2025-04-06 16:27:53,189:INFO:Copying training dataset
2025-04-06 16:27:53,192:INFO:Defining folds
2025-04-06 16:27:53,192:INFO:Declaring metric variables
2025-04-06 16:27:53,194:INFO:Importing untrained model
2025-04-06 16:27:53,195:INFO:Ridge Classifier Imported successfully
2025-04-06 16:27:53,199:INFO:Starting cross validation
2025-04-06 16:27:53,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:54,310:INFO:Calculating mean and std
2025-04-06 16:27:54,311:INFO:Creating metrics dataframe
2025-04-06 16:27:54,312:INFO:Uploading results into container
2025-04-06 16:27:54,312:INFO:Uploading model into container now
2025-04-06 16:27:54,313:INFO:_master_model_container: 4
2025-04-06 16:27:54,313:INFO:_display_container: 2
2025-04-06 16:27:54,313:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 16:27:54,313:INFO:create_model() successfully completed......................................
2025-04-06 16:27:54,387:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:54,387:INFO:Creating metrics dataframe
2025-04-06 16:27:54,391:INFO:Initializing Logistic Regression
2025-04-06 16:27:54,391:INFO:Total runtime is 0.12247472206751506 minutes
2025-04-06 16:27:54,393:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:54,393:INFO:Initializing create_model()
2025-04-06 16:27:54,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:54,394:INFO:Checking exceptions
2025-04-06 16:27:54,394:INFO:Importing libraries
2025-04-06 16:27:54,394:INFO:Copying training dataset
2025-04-06 16:27:54,397:INFO:Defining folds
2025-04-06 16:27:54,397:INFO:Declaring metric variables
2025-04-06 16:27:54,399:INFO:Importing untrained model
2025-04-06 16:27:54,401:INFO:Logistic Regression Imported successfully
2025-04-06 16:27:54,404:INFO:Starting cross validation
2025-04-06 16:27:54,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:54,466:INFO:Calculating mean and std
2025-04-06 16:27:54,467:INFO:Creating metrics dataframe
2025-04-06 16:27:54,468:INFO:Uploading results into container
2025-04-06 16:27:54,468:INFO:Uploading model into container now
2025-04-06 16:27:54,469:INFO:_master_model_container: 5
2025-04-06 16:27:54,469:INFO:_display_container: 2
2025-04-06 16:27:54,469:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 16:27:54,469:INFO:create_model() successfully completed......................................
2025-04-06 16:27:54,541:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:54,541:INFO:Creating metrics dataframe
2025-04-06 16:27:54,545:INFO:Initializing Gradient Boosting Classifier
2025-04-06 16:27:54,545:INFO:Total runtime is 0.1250413775444031 minutes
2025-04-06 16:27:54,547:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:54,547:INFO:Initializing create_model()
2025-04-06 16:27:54,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:54,548:INFO:Checking exceptions
2025-04-06 16:27:54,548:INFO:Importing libraries
2025-04-06 16:27:54,548:INFO:Copying training dataset
2025-04-06 16:27:54,551:INFO:Defining folds
2025-04-06 16:27:54,551:INFO:Declaring metric variables
2025-04-06 16:27:54,553:INFO:Importing untrained model
2025-04-06 16:27:54,554:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 16:27:54,557:INFO:Starting cross validation
2025-04-06 16:27:54,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:55,503:INFO:Calculating mean and std
2025-04-06 16:27:55,503:INFO:Creating metrics dataframe
2025-04-06 16:27:55,505:INFO:Uploading results into container
2025-04-06 16:27:55,505:INFO:Uploading model into container now
2025-04-06 16:27:55,505:INFO:_master_model_container: 6
2025-04-06 16:27:55,506:INFO:_display_container: 2
2025-04-06 16:27:55,506:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 16:27:55,506:INFO:create_model() successfully completed......................................
2025-04-06 16:27:55,586:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:55,586:INFO:Creating metrics dataframe
2025-04-06 16:27:55,590:INFO:Initializing Random Forest Classifier
2025-04-06 16:27:55,590:INFO:Total runtime is 0.1424652338027954 minutes
2025-04-06 16:27:55,593:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:55,593:INFO:Initializing create_model()
2025-04-06 16:27:55,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:55,593:INFO:Checking exceptions
2025-04-06 16:27:55,593:INFO:Importing libraries
2025-04-06 16:27:55,593:INFO:Copying training dataset
2025-04-06 16:27:55,596:INFO:Defining folds
2025-04-06 16:27:55,596:INFO:Declaring metric variables
2025-04-06 16:27:55,598:INFO:Importing untrained model
2025-04-06 16:27:55,599:INFO:Random Forest Classifier Imported successfully
2025-04-06 16:27:55,602:INFO:Starting cross validation
2025-04-06 16:27:55,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:55,881:INFO:Calculating mean and std
2025-04-06 16:27:55,882:INFO:Creating metrics dataframe
2025-04-06 16:27:55,883:INFO:Uploading results into container
2025-04-06 16:27:55,883:INFO:Uploading model into container now
2025-04-06 16:27:55,883:INFO:_master_model_container: 7
2025-04-06 16:27:55,884:INFO:_display_container: 2
2025-04-06 16:27:55,884:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 16:27:55,884:INFO:create_model() successfully completed......................................
2025-04-06 16:27:55,962:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:55,962:INFO:Creating metrics dataframe
2025-04-06 16:27:55,966:INFO:Initializing Quadratic Discriminant Analysis
2025-04-06 16:27:55,966:INFO:Total runtime is 0.14873305956522623 minutes
2025-04-06 16:27:55,969:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:55,969:INFO:Initializing create_model()
2025-04-06 16:27:55,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:55,969:INFO:Checking exceptions
2025-04-06 16:27:55,969:INFO:Importing libraries
2025-04-06 16:27:55,969:INFO:Copying training dataset
2025-04-06 16:27:55,972:INFO:Defining folds
2025-04-06 16:27:55,972:INFO:Declaring metric variables
2025-04-06 16:27:55,974:INFO:Importing untrained model
2025-04-06 16:27:55,975:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-06 16:27:55,979:INFO:Starting cross validation
2025-04-06 16:27:55,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:56,039:INFO:Calculating mean and std
2025-04-06 16:27:56,040:INFO:Creating metrics dataframe
2025-04-06 16:27:56,041:INFO:Uploading results into container
2025-04-06 16:27:56,042:INFO:Uploading model into container now
2025-04-06 16:27:56,042:INFO:_master_model_container: 8
2025-04-06 16:27:56,042:INFO:_display_container: 2
2025-04-06 16:27:56,042:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-06 16:27:56,042:INFO:create_model() successfully completed......................................
2025-04-06 16:27:56,119:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:56,119:INFO:Creating metrics dataframe
2025-04-06 16:27:56,124:INFO:Initializing Linear Discriminant Analysis
2025-04-06 16:27:56,124:INFO:Total runtime is 0.1513699412345886 minutes
2025-04-06 16:27:56,126:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:56,126:INFO:Initializing create_model()
2025-04-06 16:27:56,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:56,126:INFO:Checking exceptions
2025-04-06 16:27:56,126:INFO:Importing libraries
2025-04-06 16:27:56,126:INFO:Copying training dataset
2025-04-06 16:27:56,130:INFO:Defining folds
2025-04-06 16:27:56,130:INFO:Declaring metric variables
2025-04-06 16:27:56,131:INFO:Importing untrained model
2025-04-06 16:27:56,133:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 16:27:56,137:INFO:Starting cross validation
2025-04-06 16:27:56,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:56,197:INFO:Calculating mean and std
2025-04-06 16:27:56,198:INFO:Creating metrics dataframe
2025-04-06 16:27:56,199:INFO:Uploading results into container
2025-04-06 16:27:56,199:INFO:Uploading model into container now
2025-04-06 16:27:56,200:INFO:_master_model_container: 9
2025-04-06 16:27:56,200:INFO:_display_container: 2
2025-04-06 16:27:56,200:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 16:27:56,200:INFO:create_model() successfully completed......................................
2025-04-06 16:27:56,276:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:56,276:INFO:Creating metrics dataframe
2025-04-06 16:27:56,281:INFO:Initializing custom model SVM - Radial Kernel
2025-04-06 16:27:56,281:INFO:Total runtime is 0.1539801478385925 minutes
2025-04-06 16:27:56,283:INFO:SubProcess create_model() called ==================================
2025-04-06 16:27:56,283:INFO:Initializing create_model()
2025-04-06 16:27:56,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622FEE100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:56,283:INFO:Checking exceptions
2025-04-06 16:27:56,283:INFO:Importing libraries
2025-04-06 16:27:56,283:INFO:Copying training dataset
2025-04-06 16:27:56,286:INFO:Defining folds
2025-04-06 16:27:56,287:INFO:Declaring metric variables
2025-04-06 16:27:56,288:INFO:Importing untrained model
2025-04-06 16:27:56,288:INFO:Declaring custom model
2025-04-06 16:27:56,290:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 16:27:56,293:INFO:Starting cross validation
2025-04-06 16:27:56,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:27:56,622:INFO:Calculating mean and std
2025-04-06 16:27:56,623:INFO:Creating metrics dataframe
2025-04-06 16:27:56,624:INFO:Uploading results into container
2025-04-06 16:27:56,624:INFO:Uploading model into container now
2025-04-06 16:27:56,624:INFO:_master_model_container: 10
2025-04-06 16:27:56,624:INFO:_display_container: 2
2025-04-06 16:27:56,625:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 16:27:56,625:INFO:create_model() successfully completed......................................
2025-04-06 16:27:56,700:INFO:SubProcess create_model() end ==================================
2025-04-06 16:27:56,700:INFO:Creating metrics dataframe
2025-04-06 16:27:56,706:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-04-06 16:27:56,709:INFO:Initializing create_model()
2025-04-06 16:27:56,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:56,710:INFO:Checking exceptions
2025-04-06 16:27:56,711:INFO:Importing libraries
2025-04-06 16:27:56,711:INFO:Copying training dataset
2025-04-06 16:27:56,714:INFO:Defining folds
2025-04-06 16:27:56,714:INFO:Declaring metric variables
2025-04-06 16:27:56,714:INFO:Importing untrained model
2025-04-06 16:27:56,714:INFO:Declaring custom model
2025-04-06 16:27:56,715:INFO:Random Forest Classifier Imported successfully
2025-04-06 16:27:56,715:INFO:Cross validation set to False
2025-04-06 16:27:56,715:INFO:Fitting Model
2025-04-06 16:27:56,826:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 16:27:56,826:INFO:create_model() successfully completed......................................
2025-04-06 16:27:56,908:INFO:Initializing create_model()
2025-04-06 16:27:56,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:56,909:INFO:Checking exceptions
2025-04-06 16:27:56,910:INFO:Importing libraries
2025-04-06 16:27:56,910:INFO:Copying training dataset
2025-04-06 16:27:56,914:INFO:Defining folds
2025-04-06 16:27:56,914:INFO:Declaring metric variables
2025-04-06 16:27:56,914:INFO:Importing untrained model
2025-04-06 16:27:56,914:INFO:Declaring custom model
2025-04-06 16:27:56,914:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 16:27:56,915:INFO:Cross validation set to False
2025-04-06 16:27:56,915:INFO:Fitting Model
2025-04-06 16:27:57,769:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 16:27:57,769:INFO:create_model() successfully completed......................................
2025-04-06 16:27:57,843:INFO:Initializing create_model()
2025-04-06 16:27:57,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:57,843:INFO:Checking exceptions
2025-04-06 16:27:57,844:INFO:Importing libraries
2025-04-06 16:27:57,844:INFO:Copying training dataset
2025-04-06 16:27:57,847:INFO:Defining folds
2025-04-06 16:27:57,847:INFO:Declaring metric variables
2025-04-06 16:27:57,847:INFO:Importing untrained model
2025-04-06 16:27:57,848:INFO:Declaring custom model
2025-04-06 16:27:57,848:INFO:Extra Trees Classifier Imported successfully
2025-04-06 16:27:57,848:INFO:Cross validation set to False
2025-04-06 16:27:57,848:INFO:Fitting Model
2025-04-06 16:27:57,923:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 16:27:57,924:INFO:create_model() successfully completed......................................
2025-04-06 16:27:57,999:INFO:Initializing create_model()
2025-04-06 16:27:57,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:58,000:INFO:Checking exceptions
2025-04-06 16:27:58,001:INFO:Importing libraries
2025-04-06 16:27:58,001:INFO:Copying training dataset
2025-04-06 16:27:58,005:INFO:Defining folds
2025-04-06 16:27:58,005:INFO:Declaring metric variables
2025-04-06 16:27:58,005:INFO:Importing untrained model
2025-04-06 16:27:58,005:INFO:Declaring custom model
2025-04-06 16:27:58,005:INFO:Logistic Regression Imported successfully
2025-04-06 16:27:58,006:INFO:Cross validation set to False
2025-04-06 16:27:58,006:INFO:Fitting Model
2025-04-06 16:27:58,025:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 16:27:58,025:INFO:create_model() successfully completed......................................
2025-04-06 16:27:58,099:INFO:Initializing create_model()
2025-04-06 16:27:58,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:27:58,099:INFO:Checking exceptions
2025-04-06 16:27:58,100:INFO:Importing libraries
2025-04-06 16:27:58,100:INFO:Copying training dataset
2025-04-06 16:27:58,104:INFO:Defining folds
2025-04-06 16:27:58,104:INFO:Declaring metric variables
2025-04-06 16:27:58,104:INFO:Importing untrained model
2025-04-06 16:27:58,104:INFO:Declaring custom model
2025-04-06 16:27:58,104:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 16:27:58,104:INFO:Cross validation set to False
2025-04-06 16:27:58,104:INFO:Fitting Model
2025-04-06 16:27:58,361:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 16:27:58,361:INFO:create_model() successfully completed......................................
2025-04-06 16:27:58,446:INFO:_master_model_container: 10
2025-04-06 16:27:58,446:INFO:_display_container: 2
2025-04-06 16:27:58,447:INFO:[RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)]
2025-04-06 16:27:58,447:INFO:compare_models() successfully completed......................................
2025-04-06 16:27:58,447:INFO:Initializing tune_model()
2025-04-06 16:27:58,448:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>)
2025-04-06 16:27:58,448:INFO:Checking exceptions
2025-04-06 16:27:58,448:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 16:27:58,470:INFO:Copying training dataset
2025-04-06 16:27:58,474:INFO:Checking base model
2025-04-06 16:27:58,474:INFO:Base model : Random Forest Classifier
2025-04-06 16:27:58,476:INFO:Declaring metric variables
2025-04-06 16:27:58,478:INFO:Defining Hyperparameters
2025-04-06 16:27:58,553:INFO:Tuning with n_jobs=-1
2025-04-06 16:27:58,556:INFO:Initializing skopt.BayesSearchCV
2025-04-06 16:28:18,599:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', True), ('actual_estimator__class_weight', 'balanced_subsample'), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 11), ('actual_estimator__max_features', 0.4), ('actual_estimator__min_impurity_decrease', 1e-09), ('actual_estimator__min_samples_leaf', 2), ('actual_estimator__min_samples_split', 10), ('actual_estimator__n_estimators', 300)])
2025-04-06 16:28:18,599:INFO:Hyperparameter search completed
2025-04-06 16:28:18,600:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:18,600:INFO:Initializing create_model()
2025-04-06 16:28:18,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B62280E640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': True, 'class_weight': 'balanced_subsample', 'criterion': 'entropy', 'max_depth': 11, 'max_features': 0.4, 'min_impurity_decrease': 1e-09, 'min_samples_leaf': 2, 'min_samples_split': 10, 'n_estimators': 300})
2025-04-06 16:28:18,600:INFO:Checking exceptions
2025-04-06 16:28:18,600:INFO:Importing libraries
2025-04-06 16:28:18,600:INFO:Copying training dataset
2025-04-06 16:28:18,604:INFO:Defining folds
2025-04-06 16:28:18,604:INFO:Declaring metric variables
2025-04-06 16:28:18,605:INFO:Importing untrained model
2025-04-06 16:28:18,606:INFO:Declaring custom model
2025-04-06 16:28:18,608:INFO:Random Forest Classifier Imported successfully
2025-04-06 16:28:18,613:INFO:Starting cross validation
2025-04-06 16:28:18,613:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:19,252:INFO:Calculating mean and std
2025-04-06 16:28:19,253:INFO:Creating metrics dataframe
2025-04-06 16:28:19,257:INFO:Finalizing model
2025-04-06 16:28:19,710:INFO:Uploading results into container
2025-04-06 16:28:19,710:INFO:Uploading model into container now
2025-04-06 16:28:19,710:INFO:_master_model_container: 11
2025-04-06 16:28:19,711:INFO:_display_container: 3
2025-04-06 16:28:19,711:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.4, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=1e-09,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=300, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 16:28:19,711:INFO:create_model() successfully completed......................................
2025-04-06 16:28:19,783:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:19,783:INFO:choose_better activated
2025-04-06 16:28:19,785:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:19,785:INFO:Initializing create_model()
2025-04-06 16:28:19,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:19,785:INFO:Checking exceptions
2025-04-06 16:28:19,787:INFO:Importing libraries
2025-04-06 16:28:19,787:INFO:Copying training dataset
2025-04-06 16:28:19,792:INFO:Defining folds
2025-04-06 16:28:19,792:INFO:Declaring metric variables
2025-04-06 16:28:19,792:INFO:Importing untrained model
2025-04-06 16:28:19,792:INFO:Declaring custom model
2025-04-06 16:28:19,792:INFO:Random Forest Classifier Imported successfully
2025-04-06 16:28:19,794:INFO:Starting cross validation
2025-04-06 16:28:19,794:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:20,023:INFO:Calculating mean and std
2025-04-06 16:28:20,023:INFO:Creating metrics dataframe
2025-04-06 16:28:20,024:INFO:Finalizing model
2025-04-06 16:28:20,148:INFO:Uploading results into container
2025-04-06 16:28:20,149:INFO:Uploading model into container now
2025-04-06 16:28:20,149:INFO:_master_model_container: 12
2025-04-06 16:28:20,149:INFO:_display_container: 4
2025-04-06 16:28:20,150:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 16:28:20,150:INFO:create_model() successfully completed......................................
2025-04-06 16:28:20,267:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:20,267:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for AUC is 0.6741
2025-04-06 16:28:20,267:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.4, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=1e-09,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=300, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for AUC is 0.6935
2025-04-06 16:28:20,268:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.4, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=1e-09,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=300, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2025-04-06 16:28:20,268:INFO:choose_better completed
2025-04-06 16:28:20,274:INFO:_master_model_container: 12
2025-04-06 16:28:20,274:INFO:_display_container: 3
2025-04-06 16:28:20,274:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.4, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=1e-09,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=300, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 16:28:20,274:INFO:tune_model() successfully completed......................................
2025-04-06 16:28:20,353:INFO:Initializing tune_model()
2025-04-06 16:28:20,354:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>)
2025-04-06 16:28:20,354:INFO:Checking exceptions
2025-04-06 16:28:20,354:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 16:28:20,363:INFO:Copying training dataset
2025-04-06 16:28:20,365:INFO:Checking base model
2025-04-06 16:28:20,365:INFO:Base model : Extra Trees Classifier
2025-04-06 16:28:20,367:INFO:Declaring metric variables
2025-04-06 16:28:20,369:INFO:Defining Hyperparameters
2025-04-06 16:28:20,454:INFO:Tuning with n_jobs=-1
2025-04-06 16:28:20,456:INFO:Initializing skopt.BayesSearchCV
2025-04-06 16:28:36,561:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', False), ('actual_estimator__class_weight', 'balanced_subsample'), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 9), ('actual_estimator__max_features', 1.0), ('actual_estimator__min_impurity_decrease', 5.042469443715298e-08), ('actual_estimator__min_samples_leaf', 1), ('actual_estimator__min_samples_split', 10), ('actual_estimator__n_estimators', 69)])
2025-04-06 16:28:36,562:INFO:Hyperparameter search completed
2025-04-06 16:28:36,562:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:36,563:INFO:Initializing create_model()
2025-04-06 16:28:36,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B62256B580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': False, 'class_weight': 'balanced_subsample', 'criterion': 'entropy', 'max_depth': 9, 'max_features': 1.0, 'min_impurity_decrease': 5.042469443715298e-08, 'min_samples_leaf': 1, 'min_samples_split': 10, 'n_estimators': 69})
2025-04-06 16:28:36,563:INFO:Checking exceptions
2025-04-06 16:28:36,563:INFO:Importing libraries
2025-04-06 16:28:36,563:INFO:Copying training dataset
2025-04-06 16:28:36,569:INFO:Defining folds
2025-04-06 16:28:36,570:INFO:Declaring metric variables
2025-04-06 16:28:36,571:INFO:Importing untrained model
2025-04-06 16:28:36,571:INFO:Declaring custom model
2025-04-06 16:28:36,573:INFO:Extra Trees Classifier Imported successfully
2025-04-06 16:28:36,577:INFO:Starting cross validation
2025-04-06 16:28:36,578:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:36,753:INFO:Calculating mean and std
2025-04-06 16:28:36,754:INFO:Creating metrics dataframe
2025-04-06 16:28:36,756:INFO:Finalizing model
2025-04-06 16:28:36,835:INFO:Uploading results into container
2025-04-06 16:28:36,835:INFO:Uploading model into container now
2025-04-06 16:28:36,836:INFO:_master_model_container: 13
2025-04-06 16:28:36,836:INFO:_display_container: 4
2025-04-06 16:28:36,836:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='entropy',
                     max_depth=9, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=5.042469443715298e-08,
                     min_samples_leaf=1, min_samples_split=10,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=69, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-04-06 16:28:36,837:INFO:create_model() successfully completed......................................
2025-04-06 16:28:36,971:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:36,971:INFO:choose_better activated
2025-04-06 16:28:36,975:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:36,976:INFO:Initializing create_model()
2025-04-06 16:28:36,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:36,976:INFO:Checking exceptions
2025-04-06 16:28:36,976:INFO:Importing libraries
2025-04-06 16:28:36,977:INFO:Copying training dataset
2025-04-06 16:28:36,980:INFO:Defining folds
2025-04-06 16:28:36,980:INFO:Declaring metric variables
2025-04-06 16:28:36,980:INFO:Importing untrained model
2025-04-06 16:28:36,980:INFO:Declaring custom model
2025-04-06 16:28:36,980:INFO:Extra Trees Classifier Imported successfully
2025-04-06 16:28:36,980:INFO:Starting cross validation
2025-04-06 16:28:36,980:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:37,163:INFO:Calculating mean and std
2025-04-06 16:28:37,163:INFO:Creating metrics dataframe
2025-04-06 16:28:37,164:INFO:Finalizing model
2025-04-06 16:28:37,243:INFO:Uploading results into container
2025-04-06 16:28:37,243:INFO:Uploading model into container now
2025-04-06 16:28:37,243:INFO:_master_model_container: 14
2025-04-06 16:28:37,243:INFO:_display_container: 5
2025-04-06 16:28:37,243:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 16:28:37,243:INFO:create_model() successfully completed......................................
2025-04-06 16:28:37,315:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:37,316:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for AUC is 0.6658
2025-04-06 16:28:37,316:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='entropy',
                     max_depth=9, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=5.042469443715298e-08,
                     min_samples_leaf=1, min_samples_split=10,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=69, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for AUC is 0.6972
2025-04-06 16:28:37,316:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='entropy',
                     max_depth=9, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=5.042469443715298e-08,
                     min_samples_leaf=1, min_samples_split=10,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=69, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) is best model
2025-04-06 16:28:37,316:INFO:choose_better completed
2025-04-06 16:28:37,320:INFO:_master_model_container: 14
2025-04-06 16:28:37,321:INFO:_display_container: 4
2025-04-06 16:28:37,321:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='entropy',
                     max_depth=9, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=5.042469443715298e-08,
                     min_samples_leaf=1, min_samples_split=10,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=69, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-04-06 16:28:37,321:INFO:tune_model() successfully completed......................................
2025-04-06 16:28:37,454:INFO:Initializing tune_model()
2025-04-06 16:28:37,454:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=4, round=4, n_iter=25, custom_grid={'C': [1], 'solver': ['liblinear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>)
2025-04-06 16:28:37,454:INFO:Checking exceptions
2025-04-06 16:28:37,469:INFO:Copying training dataset
2025-04-06 16:28:37,474:INFO:Checking base model
2025-04-06 16:28:37,474:INFO:Base model : Logistic Regression
2025-04-06 16:28:37,478:INFO:Declaring metric variables
2025-04-06 16:28:37,479:INFO:Defining Hyperparameters
2025-04-06 16:28:37,585:INFO:custom_grid: {'actual_estimator__C': [1], 'actual_estimator__solver': ['liblinear']}
2025-04-06 16:28:37,586:INFO:Tuning with n_jobs=-1
2025-04-06 16:28:37,586:INFO:Initializing GridSearchCV
2025-04-06 16:28:37,636:INFO:best_params: {'actual_estimator__C': 1, 'actual_estimator__solver': 'liblinear'}
2025-04-06 16:28:37,636:INFO:Hyperparameter search completed
2025-04-06 16:28:37,636:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:37,636:INFO:Initializing create_model()
2025-04-06 16:28:37,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622ED3E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1, 'solver': 'liblinear'})
2025-04-06 16:28:37,636:INFO:Checking exceptions
2025-04-06 16:28:37,636:INFO:Importing libraries
2025-04-06 16:28:37,636:INFO:Copying training dataset
2025-04-06 16:28:37,640:INFO:Defining folds
2025-04-06 16:28:37,640:INFO:Declaring metric variables
2025-04-06 16:28:37,641:INFO:Importing untrained model
2025-04-06 16:28:37,641:INFO:Declaring custom model
2025-04-06 16:28:37,643:INFO:Logistic Regression Imported successfully
2025-04-06 16:28:37,646:INFO:Starting cross validation
2025-04-06 16:28:37,648:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:37,698:INFO:Calculating mean and std
2025-04-06 16:28:37,698:INFO:Creating metrics dataframe
2025-04-06 16:28:37,702:INFO:Finalizing model
2025-04-06 16:28:37,713:INFO:Uploading results into container
2025-04-06 16:28:37,714:INFO:Uploading model into container now
2025-04-06 16:28:37,714:INFO:_master_model_container: 15
2025-04-06 16:28:37,714:INFO:_display_container: 5
2025-04-06 16:28:37,714:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 16:28:37,714:INFO:create_model() successfully completed......................................
2025-04-06 16:28:37,824:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:37,824:INFO:choose_better activated
2025-04-06 16:28:37,828:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:37,829:INFO:Initializing create_model()
2025-04-06 16:28:37,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:37,829:INFO:Checking exceptions
2025-04-06 16:28:37,830:INFO:Importing libraries
2025-04-06 16:28:37,830:INFO:Copying training dataset
2025-04-06 16:28:37,836:INFO:Defining folds
2025-04-06 16:28:37,836:INFO:Declaring metric variables
2025-04-06 16:28:37,836:INFO:Importing untrained model
2025-04-06 16:28:37,836:INFO:Declaring custom model
2025-04-06 16:28:37,836:INFO:Logistic Regression Imported successfully
2025-04-06 16:28:37,837:INFO:Starting cross validation
2025-04-06 16:28:37,837:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:37,890:INFO:Calculating mean and std
2025-04-06 16:28:37,890:INFO:Creating metrics dataframe
2025-04-06 16:28:37,891:INFO:Finalizing model
2025-04-06 16:28:37,917:INFO:Uploading results into container
2025-04-06 16:28:37,917:INFO:Uploading model into container now
2025-04-06 16:28:37,917:INFO:_master_model_container: 16
2025-04-06 16:28:37,917:INFO:_display_container: 6
2025-04-06 16:28:37,917:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 16:28:37,917:INFO:create_model() successfully completed......................................
2025-04-06 16:28:38,014:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:38,015:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.6349
2025-04-06 16:28:38,015:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.6348
2025-04-06 16:28:38,015:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-04-06 16:28:38,015:INFO:choose_better completed
2025-04-06 16:28:38,015:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 16:28:38,020:INFO:_master_model_container: 16
2025-04-06 16:28:38,020:INFO:_display_container: 5
2025-04-06 16:28:38,020:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 16:28:38,020:INFO:tune_model() successfully completed......................................
2025-04-06 16:28:38,113:INFO:Initializing tune_model()
2025-04-06 16:28:38,113:INFO:tune_model(estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=4, round=4, n_iter=25, custom_grid={'probability': [True], 'C': [1.0], 'kernel': ['linear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>)
2025-04-06 16:28:38,113:INFO:Checking exceptions
2025-04-06 16:28:38,121:INFO:Copying training dataset
2025-04-06 16:28:38,124:INFO:Checking base model
2025-04-06 16:28:38,124:INFO:Base model : SVM - Radial Kernel
2025-04-06 16:28:38,125:INFO:Declaring metric variables
2025-04-06 16:28:38,128:INFO:Defining Hyperparameters
2025-04-06 16:28:38,258:INFO:custom_grid: {'actual_estimator__probability': [True], 'actual_estimator__C': [1.0], 'actual_estimator__kernel': ['linear']}
2025-04-06 16:28:38,258:INFO:Tuning with n_jobs=-1
2025-04-06 16:28:38,258:INFO:Initializing GridSearchCV
2025-04-06 16:28:38,487:INFO:best_params: {'actual_estimator__C': 1.0, 'actual_estimator__kernel': 'linear', 'actual_estimator__probability': True}
2025-04-06 16:28:38,487:INFO:Hyperparameter search completed
2025-04-06 16:28:38,487:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:38,488:INFO:Initializing create_model()
2025-04-06 16:28:38,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B622ED12B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1.0, 'kernel': 'linear', 'probability': True})
2025-04-06 16:28:38,488:INFO:Checking exceptions
2025-04-06 16:28:38,488:INFO:Importing libraries
2025-04-06 16:28:38,488:INFO:Copying training dataset
2025-04-06 16:28:38,495:INFO:Defining folds
2025-04-06 16:28:38,495:INFO:Declaring metric variables
2025-04-06 16:28:38,496:INFO:Importing untrained model
2025-04-06 16:28:38,496:INFO:Declaring custom model
2025-04-06 16:28:38,500:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 16:28:38,504:INFO:Starting cross validation
2025-04-06 16:28:38,505:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:38,802:INFO:Calculating mean and std
2025-04-06 16:28:38,802:INFO:Creating metrics dataframe
2025-04-06 16:28:38,805:INFO:Finalizing model
2025-04-06 16:28:39,067:INFO:Uploading results into container
2025-04-06 16:28:39,068:INFO:Uploading model into container now
2025-04-06 16:28:39,068:INFO:_master_model_container: 17
2025-04-06 16:28:39,068:INFO:_display_container: 6
2025-04-06 16:28:39,068:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 16:28:39,068:INFO:create_model() successfully completed......................................
2025-04-06 16:28:39,139:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:39,139:INFO:choose_better activated
2025-04-06 16:28:39,141:INFO:SubProcess create_model() called ==================================
2025-04-06 16:28:39,141:INFO:Initializing create_model()
2025-04-06 16:28:39,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:39,141:INFO:Checking exceptions
2025-04-06 16:28:39,142:INFO:Importing libraries
2025-04-06 16:28:39,142:INFO:Copying training dataset
2025-04-06 16:28:39,145:INFO:Defining folds
2025-04-06 16:28:39,145:INFO:Declaring metric variables
2025-04-06 16:28:39,145:INFO:Importing untrained model
2025-04-06 16:28:39,145:INFO:Declaring custom model
2025-04-06 16:28:39,146:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 16:28:39,146:INFO:Starting cross validation
2025-04-06 16:28:39,146:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 16:28:39,433:INFO:Calculating mean and std
2025-04-06 16:28:39,433:INFO:Creating metrics dataframe
2025-04-06 16:28:39,436:INFO:Finalizing model
2025-04-06 16:28:39,707:INFO:Uploading results into container
2025-04-06 16:28:39,707:INFO:Uploading model into container now
2025-04-06 16:28:39,707:INFO:_master_model_container: 18
2025-04-06 16:28:39,707:INFO:_display_container: 7
2025-04-06 16:28:39,708:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 16:28:39,708:INFO:create_model() successfully completed......................................
2025-04-06 16:28:39,785:INFO:SubProcess create_model() end ==================================
2025-04-06 16:28:39,786:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.626
2025-04-06 16:28:39,786:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.626
2025-04-06 16:28:39,786:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) is best model
2025-04-06 16:28:39,786:INFO:choose_better completed
2025-04-06 16:28:39,786:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 16:28:39,791:INFO:_master_model_container: 18
2025-04-06 16:28:39,791:INFO:_display_container: 6
2025-04-06 16:28:39,791:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 16:28:39,791:INFO:tune_model() successfully completed......................................
2025-04-06 16:28:39,895:INFO:Initializing finalize_model()
2025-04-06 16:28:39,907:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.4, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=1e-09,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=300, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 16:28:39,907:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.4, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=1e-09,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=300, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 16:28:39,909:INFO:Initializing create_model()
2025-04-06 16:28:39,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=11, max_features=0.4, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=1e-09,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=300, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:39,909:INFO:Checking exceptions
2025-04-06 16:28:39,910:INFO:Importing libraries
2025-04-06 16:28:39,910:INFO:Copying training dataset
2025-04-06 16:28:39,911:INFO:Defining folds
2025-04-06 16:28:39,911:INFO:Declaring metric variables
2025-04-06 16:28:39,911:INFO:Importing untrained model
2025-04-06 16:28:39,911:INFO:Declaring custom model
2025-04-06 16:28:39,911:INFO:Random Forest Classifier Imported successfully
2025-04-06 16:28:39,911:INFO:Cross validation set to False
2025-04-06 16:28:39,911:INFO:Fitting Model
2025-04-06 16:28:40,354:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=11,
                                        max_features=0.4, max_leaf_nodes=None,
                                        max_samples=None,
                                        min_impurity_decrease=1e-09,
                                        min_samples_leaf=2,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=300,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 16:28:40,354:INFO:create_model() successfully completed......................................
2025-04-06 16:28:40,425:INFO:_master_model_container: 18
2025-04-06 16:28:40,425:INFO:_display_container: 6
2025-04-06 16:28:40,428:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='entropy', max_depth=11,
                                        max_features=0.4, max_leaf_nodes=None,
                                        max_samples=None,
                                        min_impurity_decrease=1e-09,
                                        min_samples_leaf=2,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=300,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 16:28:40,428:INFO:finalize_model() successfully completed......................................
2025-04-06 16:28:40,498:INFO:Initializing finalize_model()
2025-04-06 16:28:40,498:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 16:28:40,499:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 16:28:40,501:INFO:Initializing create_model()
2025-04-06 16:28:40,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:40,501:INFO:Checking exceptions
2025-04-06 16:28:40,502:INFO:Importing libraries
2025-04-06 16:28:40,502:INFO:Copying training dataset
2025-04-06 16:28:40,503:INFO:Defining folds
2025-04-06 16:28:40,503:INFO:Declaring metric variables
2025-04-06 16:28:40,503:INFO:Importing untrained model
2025-04-06 16:28:40,503:INFO:Declaring custom model
2025-04-06 16:28:40,503:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 16:28:40,504:INFO:Cross validation set to False
2025-04-06 16:28:40,504:INFO:Fitting Model
2025-04-06 16:28:41,541:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-04-06 16:28:41,541:INFO:create_model() successfully completed......................................
2025-04-06 16:28:41,616:INFO:_master_model_container: 18
2025-04-06 16:28:41,616:INFO:_display_container: 6
2025-04-06 16:28:41,619:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-04-06 16:28:41,619:INFO:finalize_model() successfully completed......................................
2025-04-06 16:28:41,691:INFO:Initializing finalize_model()
2025-04-06 16:28:41,692:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='entropy',
                     max_depth=9, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=5.042469443715298e-08,
                     min_samples_leaf=1, min_samples_split=10,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=69, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 16:28:41,692:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='entropy',
                     max_depth=9, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=5.042469443715298e-08,
                     min_samples_leaf=1, min_samples_split=10,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=69, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-04-06 16:28:41,695:INFO:Initializing create_model()
2025-04-06 16:28:41,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='entropy',
                     max_depth=9, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None,
                     min_impurity_decrease=5.042469443715298e-08,
                     min_samples_leaf=1, min_samples_split=10,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=69, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:41,695:INFO:Checking exceptions
2025-04-06 16:28:41,695:INFO:Importing libraries
2025-04-06 16:28:41,696:INFO:Copying training dataset
2025-04-06 16:28:41,696:INFO:Defining folds
2025-04-06 16:28:41,696:INFO:Declaring metric variables
2025-04-06 16:28:41,696:INFO:Importing untrained model
2025-04-06 16:28:41,696:INFO:Declaring custom model
2025-04-06 16:28:41,696:INFO:Extra Trees Classifier Imported successfully
2025-04-06 16:28:41,697:INFO:Cross validation set to False
2025-04-06 16:28:41,697:INFO:Fitting Model
2025-04-06 16:28:41,775:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_depth=9,
                                      max_features=1.0, max_leaf_nodes=None,
                                      max_samples=None,
                                      min_impurity_decrease=5.042469443715298e-08,
                                      min_samples_leaf=1, min_samples_split=10,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=69,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-04-06 16:28:41,775:INFO:create_model() successfully completed......................................
2025-04-06 16:28:41,860:INFO:_master_model_container: 18
2025-04-06 16:28:41,860:INFO:_display_container: 6
2025-04-06 16:28:41,863:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_depth=9,
                                      max_features=1.0, max_leaf_nodes=None,
                                      max_samples=None,
                                      min_impurity_decrease=5.042469443715298e-08,
                                      min_samples_leaf=1, min_samples_split=10,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=69,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-04-06 16:28:41,863:INFO:finalize_model() successfully completed......................................
2025-04-06 16:28:41,942:INFO:Initializing finalize_model()
2025-04-06 16:28:41,942:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 16:28:41,942:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 16:28:41,947:INFO:Initializing create_model()
2025-04-06 16:28:41,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:41,947:INFO:Checking exceptions
2025-04-06 16:28:41,948:INFO:Importing libraries
2025-04-06 16:28:41,948:INFO:Copying training dataset
2025-04-06 16:28:41,948:INFO:Defining folds
2025-04-06 16:28:41,948:INFO:Declaring metric variables
2025-04-06 16:28:41,948:INFO:Importing untrained model
2025-04-06 16:28:41,948:INFO:Declaring custom model
2025-04-06 16:28:41,948:INFO:Logistic Regression Imported successfully
2025-04-06 16:28:41,948:INFO:Cross validation set to False
2025-04-06 16:28:41,948:INFO:Fitting Model
2025-04-06 16:28:41,982:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 16:28:41,982:INFO:create_model() successfully completed......................................
2025-04-06 16:28:42,085:INFO:_master_model_container: 18
2025-04-06 16:28:42,085:INFO:_display_container: 6
2025-04-06 16:28:42,090:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 16:28:42,090:INFO:finalize_model() successfully completed......................................
2025-04-06 16:28:42,185:INFO:Initializing finalize_model()
2025-04-06 16:28:42,186:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 16:28:42,186:INFO:Finalizing SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 16:28:42,188:INFO:Initializing create_model()
2025-04-06 16:28:42,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B62280C0A0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 16:28:42,188:INFO:Checking exceptions
2025-04-06 16:28:42,190:INFO:Importing libraries
2025-04-06 16:28:42,190:INFO:Copying training dataset
2025-04-06 16:28:42,190:INFO:Defining folds
2025-04-06 16:28:42,190:INFO:Declaring metric variables
2025-04-06 16:28:42,190:INFO:Importing untrained model
2025-04-06 16:28:42,190:INFO:Declaring custom model
2025-04-06 16:28:42,190:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 16:28:42,190:INFO:Cross validation set to False
2025-04-06 16:28:42,190:INFO:Fitting Model
2025-04-06 16:28:42,579:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 16:28:42,579:INFO:create_model() successfully completed......................................
2025-04-06 16:28:42,648:INFO:_master_model_container: 18
2025-04-06 16:28:42,648:INFO:_display_container: 6
2025-04-06 16:28:42,651:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Carbon_Intensity_of_Electricity',
                                             'CO2_Intensity',
                                             'Coal_Production_Volume',
                                             'Energy_Intensity',
                                             'Share_of_Renewables_in_Electricity_Production',
                                             'Gas_Flaring_Volume',
                                             'Total_Methane_Emissions',
                                             'Natural_Gas_Production_Volume',
                                             'Oil_Production_Volume...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 16:28:42,651:INFO:finalize_model() successfully completed......................................
2025-04-06 16:28:42,758:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\arch\bootstrap\base.py:402: FutureWarning: random_state is deprecated and will be removed in a future version. The default random number generator is changing to a NumPy Generator. To continue using RandomState, please directly pass a RandomState instance using the ``generator`` keyword argument.
  warnings.warn(

2025-04-06 17:25:24,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 17:25:24,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 17:25:24,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 17:25:24,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 17:28:45,850:INFO:PyCaret ClassificationExperiment
2025-04-06 17:28:45,850:INFO:Logging name: clf-default-name
2025-04-06 17:28:45,850:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:28:45,850:INFO:version 3.3.2
2025-04-06 17:28:45,850:INFO:Initializing setup()
2025-04-06 17:28:45,850:INFO:self.USI: 84df
2025-04-06 17:28:45,850:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:28:45,850:INFO:Checking environment
2025-04-06 17:28:45,850:INFO:python_version: 3.9.21
2025-04-06 17:28:45,850:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:28:45,850:INFO:machine: AMD64
2025-04-06 17:28:45,850:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:28:45,857:INFO:Memory: svmem(total=137112563712, available=101815410688, percent=25.7, used=35297153024, free=101815410688)
2025-04-06 17:28:45,857:INFO:Physical Core: 24
2025-04-06 17:28:45,857:INFO:Logical Core: 32
2025-04-06 17:28:45,857:INFO:Checking libraries
2025-04-06 17:28:45,857:INFO:System:
2025-04-06 17:28:45,857:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:28:45,857:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:28:45,857:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:28:45,857:INFO:PyCaret required dependencies:
2025-04-06 17:28:45,894:INFO:                 pip: 25.0
2025-04-06 17:28:45,894:INFO:          setuptools: 72.1.0
2025-04-06 17:28:45,894:INFO:             pycaret: 3.3.2
2025-04-06 17:28:45,894:INFO:             IPython: 8.18.1
2025-04-06 17:28:45,894:INFO:          ipywidgets: 8.1.5
2025-04-06 17:28:45,894:INFO:                tqdm: 4.67.1
2025-04-06 17:28:45,894:INFO:               numpy: 1.26.4
2025-04-06 17:28:45,894:INFO:              pandas: 2.1.4
2025-04-06 17:28:45,894:INFO:              jinja2: 3.1.6
2025-04-06 17:28:45,894:INFO:               scipy: 1.11.4
2025-04-06 17:28:45,894:INFO:              joblib: 1.3.2
2025-04-06 17:28:45,894:INFO:             sklearn: 1.4.2
2025-04-06 17:28:45,894:INFO:                pyod: 2.0.4
2025-04-06 17:28:45,894:INFO:            imblearn: 0.12.4
2025-04-06 17:28:45,894:INFO:   category_encoders: 2.6.4
2025-04-06 17:28:45,894:INFO:            lightgbm: 4.6.0
2025-04-06 17:28:45,894:INFO:               numba: 0.60.0
2025-04-06 17:28:45,894:INFO:            requests: 2.32.3
2025-04-06 17:28:45,894:INFO:          matplotlib: 3.7.5
2025-04-06 17:28:45,894:INFO:          scikitplot: 0.3.7
2025-04-06 17:28:45,894:INFO:         yellowbrick: 1.5
2025-04-06 17:28:45,895:INFO:              plotly: 5.24.1
2025-04-06 17:28:45,895:INFO:    plotly-resampler: Not installed
2025-04-06 17:28:45,895:INFO:             kaleido: 0.2.1
2025-04-06 17:28:45,895:INFO:           schemdraw: 0.15
2025-04-06 17:28:45,895:INFO:         statsmodels: 0.14.4
2025-04-06 17:28:45,895:INFO:              sktime: 0.26.0
2025-04-06 17:28:45,895:INFO:               tbats: 1.1.3
2025-04-06 17:28:45,895:INFO:            pmdarima: 2.0.4
2025-04-06 17:28:45,895:INFO:              psutil: 7.0.0
2025-04-06 17:28:45,895:INFO:          markupsafe: 3.0.2
2025-04-06 17:28:45,895:INFO:             pickle5: Not installed
2025-04-06 17:28:45,895:INFO:         cloudpickle: 3.1.1
2025-04-06 17:28:45,895:INFO:         deprecation: 2.1.0
2025-04-06 17:28:45,895:INFO:              xxhash: 3.5.0
2025-04-06 17:28:45,895:INFO:           wurlitzer: Not installed
2025-04-06 17:28:45,895:INFO:PyCaret optional dependencies:
2025-04-06 17:28:45,899:INFO:                shap: Not installed
2025-04-06 17:28:45,899:INFO:           interpret: Not installed
2025-04-06 17:28:45,899:INFO:                umap: Not installed
2025-04-06 17:28:45,899:INFO:     ydata_profiling: Not installed
2025-04-06 17:28:45,899:INFO:  explainerdashboard: Not installed
2025-04-06 17:28:45,899:INFO:             autoviz: Not installed
2025-04-06 17:28:45,899:INFO:           fairlearn: Not installed
2025-04-06 17:28:45,899:INFO:          deepchecks: Not installed
2025-04-06 17:28:45,899:INFO:             xgboost: Not installed
2025-04-06 17:28:45,899:INFO:            catboost: Not installed
2025-04-06 17:28:45,899:INFO:              kmodes: Not installed
2025-04-06 17:28:45,899:INFO:             mlxtend: Not installed
2025-04-06 17:28:45,899:INFO:       statsforecast: Not installed
2025-04-06 17:28:45,899:INFO:        tune_sklearn: Not installed
2025-04-06 17:28:45,899:INFO:                 ray: Not installed
2025-04-06 17:28:45,899:INFO:            hyperopt: 0.2.7
2025-04-06 17:28:45,899:INFO:              optuna: 4.2.1
2025-04-06 17:28:45,900:INFO:               skopt: 0.10.2
2025-04-06 17:28:45,900:INFO:              mlflow: Not installed
2025-04-06 17:28:45,900:INFO:              gradio: Not installed
2025-04-06 17:28:45,900:INFO:             fastapi: Not installed
2025-04-06 17:28:45,900:INFO:             uvicorn: Not installed
2025-04-06 17:28:45,900:INFO:              m2cgen: Not installed
2025-04-06 17:28:45,900:INFO:           evidently: Not installed
2025-04-06 17:28:45,900:INFO:               fugue: Not installed
2025-04-06 17:28:45,900:INFO:           streamlit: Not installed
2025-04-06 17:28:45,900:INFO:             prophet: Not installed
2025-04-06 17:28:45,900:INFO:None
2025-04-06 17:28:45,900:INFO:Set up data.
2025-04-06 17:28:45,901:INFO:Set up folding strategy.
2025-04-06 17:28:45,901:INFO:Set up train/test split.
2025-04-06 17:28:45,903:INFO:Set up index.
2025-04-06 17:28:45,903:INFO:Assigning column types.
2025-04-06 17:28:45,904:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-06 17:28:45,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:28:45,925:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:28:45,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:45,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:45,960:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:28:45,960:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:28:45,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:45,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:45,972:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-06 17:28:45,992:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:28:46,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,023:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:28:46,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,035:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-06 17:28:46,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,099:INFO:Preparing preprocessing pipeline...
2025-04-06 17:28:46,099:INFO:Set up simple imputation.
2025-04-06 17:28:46,099:INFO:Set up feature normalization.
2025-04-06 17:28:46,124:INFO:Finished creating preprocessing pipeline.
2025-04-06 17:28:46,127:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-04-06 17:28:46,127:INFO:Creating final display dataframe.
2025-04-06 17:28:46,169:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Direction
2                   Target type            Binary
3           Original data shape          (358, 5)
4        Transformed data shape          (358, 5)
5   Transformed train set shape          (354, 5)
6    Transformed test set shape            (4, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              84df
2025-04-06 17:28:46,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,246:INFO:setup() successfully completed in 0.4s...............
2025-04-06 17:28:46,247:INFO:gpu_param set to False
2025-04-06 17:28:46,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,314:INFO:gpu_param set to False
2025-04-06 17:28:46,347:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:28:46,379:INFO:Initializing compare_models()
2025-04-06 17:28:46,379:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, include=['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, 'include': ['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-06 17:28:46,379:INFO:Checking exceptions
2025-04-06 17:28:46,384:INFO:Preparing display monitor
2025-04-06 17:28:46,396:INFO:Initializing Gradient Boosting Classifier
2025-04-06 17:28:46,396:INFO:Total runtime is 0.0 minutes
2025-04-06 17:28:46,398:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:46,398:INFO:Initializing create_model()
2025-04-06 17:28:46,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:46,398:INFO:Checking exceptions
2025-04-06 17:28:46,398:INFO:Importing libraries
2025-04-06 17:28:46,398:INFO:Copying training dataset
2025-04-06 17:28:46,400:INFO:Defining folds
2025-04-06 17:28:46,400:INFO:Declaring metric variables
2025-04-06 17:28:46,402:INFO:Importing untrained model
2025-04-06 17:28:46,404:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 17:28:46,407:INFO:Starting cross validation
2025-04-06 17:28:46,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:48,564:INFO:Calculating mean and std
2025-04-06 17:28:48,566:INFO:Creating metrics dataframe
2025-04-06 17:28:48,567:INFO:Uploading results into container
2025-04-06 17:28:48,568:INFO:Uploading model into container now
2025-04-06 17:28:48,568:INFO:_master_model_container: 1
2025-04-06 17:28:48,568:INFO:_display_container: 2
2025-04-06 17:28:48,568:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 17:28:48,568:INFO:create_model() successfully completed......................................
2025-04-06 17:28:48,674:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:48,674:INFO:Creating metrics dataframe
2025-04-06 17:28:48,678:INFO:Initializing Logistic Regression
2025-04-06 17:28:48,678:INFO:Total runtime is 0.03803365230560303 minutes
2025-04-06 17:28:48,679:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:48,679:INFO:Initializing create_model()
2025-04-06 17:28:48,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:48,680:INFO:Checking exceptions
2025-04-06 17:28:48,680:INFO:Importing libraries
2025-04-06 17:28:48,680:INFO:Copying training dataset
2025-04-06 17:28:48,681:INFO:Defining folds
2025-04-06 17:28:48,682:INFO:Declaring metric variables
2025-04-06 17:28:48,683:INFO:Importing untrained model
2025-04-06 17:28:48,685:INFO:Logistic Regression Imported successfully
2025-04-06 17:28:48,688:INFO:Starting cross validation
2025-04-06 17:28:48,689:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:50,268:INFO:Calculating mean and std
2025-04-06 17:28:50,269:INFO:Creating metrics dataframe
2025-04-06 17:28:50,271:INFO:Uploading results into container
2025-04-06 17:28:50,271:INFO:Uploading model into container now
2025-04-06 17:28:50,271:INFO:_master_model_container: 2
2025-04-06 17:28:50,271:INFO:_display_container: 2
2025-04-06 17:28:50,272:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:28:50,272:INFO:create_model() successfully completed......................................
2025-04-06 17:28:50,375:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:50,375:INFO:Creating metrics dataframe
2025-04-06 17:28:50,379:INFO:Initializing Extra Trees Classifier
2025-04-06 17:28:50,379:INFO:Total runtime is 0.06638498306274415 minutes
2025-04-06 17:28:50,380:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:50,381:INFO:Initializing create_model()
2025-04-06 17:28:50,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:50,381:INFO:Checking exceptions
2025-04-06 17:28:50,381:INFO:Importing libraries
2025-04-06 17:28:50,381:INFO:Copying training dataset
2025-04-06 17:28:50,383:INFO:Defining folds
2025-04-06 17:28:50,383:INFO:Declaring metric variables
2025-04-06 17:28:50,385:INFO:Importing untrained model
2025-04-06 17:28:50,387:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:28:50,390:INFO:Starting cross validation
2025-04-06 17:28:50,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:51,949:INFO:Calculating mean and std
2025-04-06 17:28:51,951:INFO:Creating metrics dataframe
2025-04-06 17:28:51,952:INFO:Uploading results into container
2025-04-06 17:28:51,953:INFO:Uploading model into container now
2025-04-06 17:28:51,953:INFO:_master_model_container: 3
2025-04-06 17:28:51,953:INFO:_display_container: 2
2025-04-06 17:28:51,953:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:28:51,954:INFO:create_model() successfully completed......................................
2025-04-06 17:28:52,057:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:52,058:INFO:Creating metrics dataframe
2025-04-06 17:28:52,061:INFO:Initializing Ridge Classifier
2025-04-06 17:28:52,061:INFO:Total runtime is 0.09441990057627361 minutes
2025-04-06 17:28:52,063:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:52,063:INFO:Initializing create_model()
2025-04-06 17:28:52,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:52,063:INFO:Checking exceptions
2025-04-06 17:28:52,063:INFO:Importing libraries
2025-04-06 17:28:52,064:INFO:Copying training dataset
2025-04-06 17:28:52,065:INFO:Defining folds
2025-04-06 17:28:52,065:INFO:Declaring metric variables
2025-04-06 17:28:52,067:INFO:Importing untrained model
2025-04-06 17:28:52,069:INFO:Ridge Classifier Imported successfully
2025-04-06 17:28:52,072:INFO:Starting cross validation
2025-04-06 17:28:52,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:53,166:INFO:Calculating mean and std
2025-04-06 17:28:53,167:INFO:Creating metrics dataframe
2025-04-06 17:28:53,168:INFO:Uploading results into container
2025-04-06 17:28:53,168:INFO:Uploading model into container now
2025-04-06 17:28:53,169:INFO:_master_model_container: 4
2025-04-06 17:28:53,169:INFO:_display_container: 2
2025-04-06 17:28:53,169:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:28:53,169:INFO:create_model() successfully completed......................................
2025-04-06 17:28:53,268:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:53,268:INFO:Creating metrics dataframe
2025-04-06 17:28:53,272:INFO:Initializing Quadratic Discriminant Analysis
2025-04-06 17:28:53,272:INFO:Total runtime is 0.11460126638412477 minutes
2025-04-06 17:28:53,274:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:53,275:INFO:Initializing create_model()
2025-04-06 17:28:53,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:53,275:INFO:Checking exceptions
2025-04-06 17:28:53,275:INFO:Importing libraries
2025-04-06 17:28:53,275:INFO:Copying training dataset
2025-04-06 17:28:53,277:INFO:Defining folds
2025-04-06 17:28:53,277:INFO:Declaring metric variables
2025-04-06 17:28:53,279:INFO:Importing untrained model
2025-04-06 17:28:53,281:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-06 17:28:53,284:INFO:Starting cross validation
2025-04-06 17:28:53,284:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:53,322:INFO:Calculating mean and std
2025-04-06 17:28:53,322:INFO:Creating metrics dataframe
2025-04-06 17:28:53,323:INFO:Uploading results into container
2025-04-06 17:28:53,324:INFO:Uploading model into container now
2025-04-06 17:28:53,324:INFO:_master_model_container: 5
2025-04-06 17:28:53,324:INFO:_display_container: 2
2025-04-06 17:28:53,324:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-06 17:28:53,324:INFO:create_model() successfully completed......................................
2025-04-06 17:28:53,413:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:53,414:INFO:Creating metrics dataframe
2025-04-06 17:28:53,418:INFO:Initializing Linear Discriminant Analysis
2025-04-06 17:28:53,418:INFO:Total runtime is 0.11703458627065023 minutes
2025-04-06 17:28:53,419:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:53,420:INFO:Initializing create_model()
2025-04-06 17:28:53,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:53,420:INFO:Checking exceptions
2025-04-06 17:28:53,420:INFO:Importing libraries
2025-04-06 17:28:53,420:INFO:Copying training dataset
2025-04-06 17:28:53,422:INFO:Defining folds
2025-04-06 17:28:53,422:INFO:Declaring metric variables
2025-04-06 17:28:53,424:INFO:Importing untrained model
2025-04-06 17:28:53,426:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:28:53,429:INFO:Starting cross validation
2025-04-06 17:28:53,429:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:53,480:INFO:Calculating mean and std
2025-04-06 17:28:53,480:INFO:Creating metrics dataframe
2025-04-06 17:28:53,481:INFO:Uploading results into container
2025-04-06 17:28:53,481:INFO:Uploading model into container now
2025-04-06 17:28:53,482:INFO:_master_model_container: 6
2025-04-06 17:28:53,482:INFO:_display_container: 2
2025-04-06 17:28:53,482:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:28:53,482:INFO:create_model() successfully completed......................................
2025-04-06 17:28:53,573:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:53,573:INFO:Creating metrics dataframe
2025-04-06 17:28:53,578:INFO:Initializing MLP Classifier
2025-04-06 17:28:53,578:INFO:Total runtime is 0.11970123449961345 minutes
2025-04-06 17:28:53,580:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:53,580:INFO:Initializing create_model()
2025-04-06 17:28:53,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:53,580:INFO:Checking exceptions
2025-04-06 17:28:53,580:INFO:Importing libraries
2025-04-06 17:28:53,580:INFO:Copying training dataset
2025-04-06 17:28:53,582:INFO:Defining folds
2025-04-06 17:28:53,582:INFO:Declaring metric variables
2025-04-06 17:28:53,584:INFO:Importing untrained model
2025-04-06 17:28:53,586:INFO:MLP Classifier Imported successfully
2025-04-06 17:28:53,589:INFO:Starting cross validation
2025-04-06 17:28:53,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:53,826:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,826:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,826:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,826:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,849:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,855:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,863:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,863:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,867:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,916:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:28:53,937:INFO:Calculating mean and std
2025-04-06 17:28:53,937:INFO:Creating metrics dataframe
2025-04-06 17:28:53,939:INFO:Uploading results into container
2025-04-06 17:28:53,939:INFO:Uploading model into container now
2025-04-06 17:28:53,939:INFO:_master_model_container: 7
2025-04-06 17:28:53,939:INFO:_display_container: 2
2025-04-06 17:28:53,940:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 17:28:53,940:INFO:create_model() successfully completed......................................
2025-04-06 17:28:54,044:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:54,044:INFO:Creating metrics dataframe
2025-04-06 17:28:54,051:INFO:Initializing Decision Tree Classifier
2025-04-06 17:28:54,052:INFO:Total runtime is 0.12761292457580567 minutes
2025-04-06 17:28:54,054:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:54,054:INFO:Initializing create_model()
2025-04-06 17:28:54,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:54,054:INFO:Checking exceptions
2025-04-06 17:28:54,054:INFO:Importing libraries
2025-04-06 17:28:54,054:INFO:Copying training dataset
2025-04-06 17:28:54,056:INFO:Defining folds
2025-04-06 17:28:54,056:INFO:Declaring metric variables
2025-04-06 17:28:54,058:INFO:Importing untrained model
2025-04-06 17:28:54,060:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:28:54,063:INFO:Starting cross validation
2025-04-06 17:28:54,064:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:54,113:INFO:Calculating mean and std
2025-04-06 17:28:54,113:INFO:Creating metrics dataframe
2025-04-06 17:28:54,114:INFO:Uploading results into container
2025-04-06 17:28:54,114:INFO:Uploading model into container now
2025-04-06 17:28:54,114:INFO:_master_model_container: 8
2025-04-06 17:28:54,114:INFO:_display_container: 2
2025-04-06 17:28:54,115:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:28:54,116:INFO:create_model() successfully completed......................................
2025-04-06 17:28:54,218:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:54,219:INFO:Creating metrics dataframe
2025-04-06 17:28:54,223:INFO:Initializing Random Forest Classifier
2025-04-06 17:28:54,223:INFO:Total runtime is 0.13046475251515707 minutes
2025-04-06 17:28:54,224:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:54,225:INFO:Initializing create_model()
2025-04-06 17:28:54,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:54,225:INFO:Checking exceptions
2025-04-06 17:28:54,225:INFO:Importing libraries
2025-04-06 17:28:54,225:INFO:Copying training dataset
2025-04-06 17:28:54,227:INFO:Defining folds
2025-04-06 17:28:54,227:INFO:Declaring metric variables
2025-04-06 17:28:54,228:INFO:Importing untrained model
2025-04-06 17:28:54,230:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:28:54,233:INFO:Starting cross validation
2025-04-06 17:28:54,234:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:54,441:INFO:Calculating mean and std
2025-04-06 17:28:54,442:INFO:Creating metrics dataframe
2025-04-06 17:28:54,443:INFO:Uploading results into container
2025-04-06 17:28:54,443:INFO:Uploading model into container now
2025-04-06 17:28:54,444:INFO:_master_model_container: 9
2025-04-06 17:28:54,444:INFO:_display_container: 2
2025-04-06 17:28:54,444:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:28:54,444:INFO:create_model() successfully completed......................................
2025-04-06 17:28:54,539:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:54,539:INFO:Creating metrics dataframe
2025-04-06 17:28:54,544:INFO:Initializing custom model SVM - Radial Kernel
2025-04-06 17:28:54,544:INFO:Total runtime is 0.13580724795659385 minutes
2025-04-06 17:28:54,546:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:54,546:INFO:Initializing create_model()
2025-04-06 17:28:54,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5E936D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:54,546:INFO:Checking exceptions
2025-04-06 17:28:54,546:INFO:Importing libraries
2025-04-06 17:28:54,547:INFO:Copying training dataset
2025-04-06 17:28:54,548:INFO:Defining folds
2025-04-06 17:28:54,548:INFO:Declaring metric variables
2025-04-06 17:28:54,550:INFO:Importing untrained model
2025-04-06 17:28:54,550:INFO:Declaring custom model
2025-04-06 17:28:54,552:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:28:54,555:INFO:Starting cross validation
2025-04-06 17:28:54,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:54,600:INFO:Calculating mean and std
2025-04-06 17:28:54,600:INFO:Creating metrics dataframe
2025-04-06 17:28:54,601:INFO:Uploading results into container
2025-04-06 17:28:54,602:INFO:Uploading model into container now
2025-04-06 17:28:54,602:INFO:_master_model_container: 10
2025-04-06 17:28:54,602:INFO:_display_container: 2
2025-04-06 17:28:54,602:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:28:54,602:INFO:create_model() successfully completed......................................
2025-04-06 17:28:54,695:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:54,695:INFO:Creating metrics dataframe
2025-04-06 17:28:54,701:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-04-06 17:28:54,705:INFO:Initializing create_model()
2025-04-06 17:28:54,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:54,705:INFO:Checking exceptions
2025-04-06 17:28:54,706:INFO:Importing libraries
2025-04-06 17:28:54,706:INFO:Copying training dataset
2025-04-06 17:28:54,707:INFO:Defining folds
2025-04-06 17:28:54,707:INFO:Declaring metric variables
2025-04-06 17:28:54,707:INFO:Importing untrained model
2025-04-06 17:28:54,707:INFO:Declaring custom model
2025-04-06 17:28:54,708:INFO:Logistic Regression Imported successfully
2025-04-06 17:28:54,708:INFO:Cross validation set to False
2025-04-06 17:28:54,708:INFO:Fitting Model
2025-04-06 17:28:54,713:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:28:54,713:INFO:create_model() successfully completed......................................
2025-04-06 17:28:54,809:INFO:Initializing create_model()
2025-04-06 17:28:54,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:54,809:INFO:Checking exceptions
2025-04-06 17:28:54,810:INFO:Importing libraries
2025-04-06 17:28:54,810:INFO:Copying training dataset
2025-04-06 17:28:54,812:INFO:Defining folds
2025-04-06 17:28:54,812:INFO:Declaring metric variables
2025-04-06 17:28:54,812:INFO:Importing untrained model
2025-04-06 17:28:54,812:INFO:Declaring custom model
2025-04-06 17:28:54,812:INFO:Ridge Classifier Imported successfully
2025-04-06 17:28:54,813:INFO:Cross validation set to False
2025-04-06 17:28:54,813:INFO:Fitting Model
2025-04-06 17:28:54,818:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:28:54,818:INFO:create_model() successfully completed......................................
2025-04-06 17:28:54,911:INFO:Initializing create_model()
2025-04-06 17:28:54,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:54,911:INFO:Checking exceptions
2025-04-06 17:28:54,912:INFO:Importing libraries
2025-04-06 17:28:54,913:INFO:Copying training dataset
2025-04-06 17:28:54,914:INFO:Defining folds
2025-04-06 17:28:54,914:INFO:Declaring metric variables
2025-04-06 17:28:54,914:INFO:Importing untrained model
2025-04-06 17:28:54,914:INFO:Declaring custom model
2025-04-06 17:28:54,915:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:28:54,915:INFO:Cross validation set to False
2025-04-06 17:28:54,915:INFO:Fitting Model
2025-04-06 17:28:54,919:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:28:54,919:INFO:create_model() successfully completed......................................
2025-04-06 17:28:55,018:INFO:Initializing create_model()
2025-04-06 17:28:55,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:55,019:INFO:Checking exceptions
2025-04-06 17:28:55,020:INFO:Importing libraries
2025-04-06 17:28:55,020:INFO:Copying training dataset
2025-04-06 17:28:55,021:INFO:Defining folds
2025-04-06 17:28:55,021:INFO:Declaring metric variables
2025-04-06 17:28:55,021:INFO:Importing untrained model
2025-04-06 17:28:55,021:INFO:Declaring custom model
2025-04-06 17:28:55,022:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:28:55,022:INFO:Cross validation set to False
2025-04-06 17:28:55,022:INFO:Fitting Model
2025-04-06 17:28:55,031:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:28:55,031:INFO:create_model() successfully completed......................................
2025-04-06 17:28:55,137:INFO:Initializing create_model()
2025-04-06 17:28:55,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:55,138:INFO:Checking exceptions
2025-04-06 17:28:55,138:INFO:Importing libraries
2025-04-06 17:28:55,139:INFO:Copying training dataset
2025-04-06 17:28:55,140:INFO:Defining folds
2025-04-06 17:28:55,140:INFO:Declaring metric variables
2025-04-06 17:28:55,140:INFO:Importing untrained model
2025-04-06 17:28:55,140:INFO:Declaring custom model
2025-04-06 17:28:55,140:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:28:55,141:INFO:Cross validation set to False
2025-04-06 17:28:55,141:INFO:Fitting Model
2025-04-06 17:28:55,229:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:28:55,229:INFO:create_model() successfully completed......................................
2025-04-06 17:28:55,330:INFO:_master_model_container: 10
2025-04-06 17:28:55,331:INFO:_display_container: 2
2025-04-06 17:28:55,331:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)]
2025-04-06 17:28:55,331:INFO:compare_models() successfully completed......................................
2025-04-06 17:28:55,332:INFO:Initializing tune_model()
2025-04-06 17:28:55,332:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=4, round=4, n_iter=25, custom_grid={'C': [1], 'solver': ['liblinear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>)
2025-04-06 17:28:55,332:INFO:Checking exceptions
2025-04-06 17:28:55,341:INFO:Copying training dataset
2025-04-06 17:28:55,342:INFO:Checking base model
2025-04-06 17:28:55,343:INFO:Base model : Logistic Regression
2025-04-06 17:28:55,344:INFO:Declaring metric variables
2025-04-06 17:28:55,347:INFO:Defining Hyperparameters
2025-04-06 17:28:55,455:INFO:custom_grid: {'actual_estimator__C': [1], 'actual_estimator__solver': ['liblinear']}
2025-04-06 17:28:55,455:INFO:Tuning with n_jobs=-1
2025-04-06 17:28:55,455:INFO:Initializing GridSearchCV
2025-04-06 17:28:55,480:INFO:best_params: {'actual_estimator__C': 1, 'actual_estimator__solver': 'liblinear'}
2025-04-06 17:28:55,480:INFO:Hyperparameter search completed
2025-04-06 17:28:55,480:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:55,481:INFO:Initializing create_model()
2025-04-06 17:28:55,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFE9242F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1, 'solver': 'liblinear'})
2025-04-06 17:28:55,481:INFO:Checking exceptions
2025-04-06 17:28:55,481:INFO:Importing libraries
2025-04-06 17:28:55,481:INFO:Copying training dataset
2025-04-06 17:28:55,482:INFO:Defining folds
2025-04-06 17:28:55,482:INFO:Declaring metric variables
2025-04-06 17:28:55,484:INFO:Importing untrained model
2025-04-06 17:28:55,484:INFO:Declaring custom model
2025-04-06 17:28:55,486:INFO:Logistic Regression Imported successfully
2025-04-06 17:28:55,490:INFO:Starting cross validation
2025-04-06 17:28:55,490:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:55,511:INFO:Calculating mean and std
2025-04-06 17:28:55,511:INFO:Creating metrics dataframe
2025-04-06 17:28:55,514:INFO:Finalizing model
2025-04-06 17:28:55,522:INFO:Uploading results into container
2025-04-06 17:28:55,522:INFO:Uploading model into container now
2025-04-06 17:28:55,522:INFO:_master_model_container: 11
2025-04-06 17:28:55,523:INFO:_display_container: 3
2025-04-06 17:28:55,523:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:28:55,523:INFO:create_model() successfully completed......................................
2025-04-06 17:28:55,616:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:55,616:INFO:choose_better activated
2025-04-06 17:28:55,618:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:55,618:INFO:Initializing create_model()
2025-04-06 17:28:55,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:55,619:INFO:Checking exceptions
2025-04-06 17:28:55,619:INFO:Importing libraries
2025-04-06 17:28:55,619:INFO:Copying training dataset
2025-04-06 17:28:55,621:INFO:Defining folds
2025-04-06 17:28:55,621:INFO:Declaring metric variables
2025-04-06 17:28:55,621:INFO:Importing untrained model
2025-04-06 17:28:55,621:INFO:Declaring custom model
2025-04-06 17:28:55,622:INFO:Logistic Regression Imported successfully
2025-04-06 17:28:55,622:INFO:Starting cross validation
2025-04-06 17:28:55,622:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:55,653:INFO:Calculating mean and std
2025-04-06 17:28:55,653:INFO:Creating metrics dataframe
2025-04-06 17:28:55,654:INFO:Finalizing model
2025-04-06 17:28:55,659:INFO:Uploading results into container
2025-04-06 17:28:55,659:INFO:Uploading model into container now
2025-04-06 17:28:55,660:INFO:_master_model_container: 12
2025-04-06 17:28:55,660:INFO:_display_container: 4
2025-04-06 17:28:55,660:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:28:55,660:INFO:create_model() successfully completed......................................
2025-04-06 17:28:55,751:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:55,751:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4633
2025-04-06 17:28:55,752:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4636
2025-04-06 17:28:55,752:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-04-06 17:28:55,752:INFO:choose_better completed
2025-04-06 17:28:55,756:INFO:_master_model_container: 12
2025-04-06 17:28:55,756:INFO:_display_container: 3
2025-04-06 17:28:55,756:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:28:55,756:INFO:tune_model() successfully completed......................................
2025-04-06 17:28:55,852:INFO:Initializing tune_model()
2025-04-06 17:28:55,852:INFO:tune_model(estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'alpha': [1], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>)
2025-04-06 17:28:55,852:INFO:Checking exceptions
2025-04-06 17:28:55,860:INFO:Copying training dataset
2025-04-06 17:28:55,861:INFO:Checking base model
2025-04-06 17:28:55,861:INFO:Base model : Ridge Classifier
2025-04-06 17:28:55,863:INFO:Declaring metric variables
2025-04-06 17:28:55,865:INFO:Defining Hyperparameters
2025-04-06 17:28:55,963:INFO:custom_grid: {'actual_estimator__alpha': [1], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:28:55,963:INFO:Tuning with n_jobs=-1
2025-04-06 17:28:55,963:INFO:Initializing GridSearchCV
2025-04-06 17:28:55,986:INFO:best_params: {'actual_estimator__alpha': 1, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:28:55,986:INFO:Hyperparameter search completed
2025-04-06 17:28:55,986:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:55,986:INFO:Initializing create_model()
2025-04-06 17:28:55,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFE89E3070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'alpha': 1, 'solver': 'lsqr'})
2025-04-06 17:28:55,987:INFO:Checking exceptions
2025-04-06 17:28:55,987:INFO:Importing libraries
2025-04-06 17:28:55,987:INFO:Copying training dataset
2025-04-06 17:28:55,988:INFO:Defining folds
2025-04-06 17:28:55,988:INFO:Declaring metric variables
2025-04-06 17:28:55,990:INFO:Importing untrained model
2025-04-06 17:28:55,990:INFO:Declaring custom model
2025-04-06 17:28:55,992:INFO:Ridge Classifier Imported successfully
2025-04-06 17:28:55,995:INFO:Starting cross validation
2025-04-06 17:28:55,995:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:56,018:INFO:Calculating mean and std
2025-04-06 17:28:56,018:INFO:Creating metrics dataframe
2025-04-06 17:28:56,021:INFO:Finalizing model
2025-04-06 17:28:56,028:INFO:Uploading results into container
2025-04-06 17:28:56,029:INFO:Uploading model into container now
2025-04-06 17:28:56,029:INFO:_master_model_container: 13
2025-04-06 17:28:56,029:INFO:_display_container: 4
2025-04-06 17:28:56,029:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001)
2025-04-06 17:28:56,029:INFO:create_model() successfully completed......................................
2025-04-06 17:28:56,119:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:56,119:INFO:choose_better activated
2025-04-06 17:28:56,121:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:56,122:INFO:Initializing create_model()
2025-04-06 17:28:56,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:56,122:INFO:Checking exceptions
2025-04-06 17:28:56,123:INFO:Importing libraries
2025-04-06 17:28:56,123:INFO:Copying training dataset
2025-04-06 17:28:56,124:INFO:Defining folds
2025-04-06 17:28:56,124:INFO:Declaring metric variables
2025-04-06 17:28:56,125:INFO:Importing untrained model
2025-04-06 17:28:56,125:INFO:Declaring custom model
2025-04-06 17:28:56,125:INFO:Ridge Classifier Imported successfully
2025-04-06 17:28:56,125:INFO:Starting cross validation
2025-04-06 17:28:56,125:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:56,145:INFO:Calculating mean and std
2025-04-06 17:28:56,145:INFO:Creating metrics dataframe
2025-04-06 17:28:56,146:INFO:Finalizing model
2025-04-06 17:28:56,151:INFO:Uploading results into container
2025-04-06 17:28:56,151:INFO:Uploading model into container now
2025-04-06 17:28:56,151:INFO:_master_model_container: 14
2025-04-06 17:28:56,151:INFO:_display_container: 5
2025-04-06 17:28:56,151:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:28:56,151:INFO:create_model() successfully completed......................................
2025-04-06 17:28:56,247:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:56,247:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:28:56,248:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:28:56,248:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) is best model
2025-04-06 17:28:56,248:INFO:choose_better completed
2025-04-06 17:28:56,248:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:28:56,252:INFO:_master_model_container: 14
2025-04-06 17:28:56,252:INFO:_display_container: 4
2025-04-06 17:28:56,252:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:28:56,253:INFO:tune_model() successfully completed......................................
2025-04-06 17:28:56,348:INFO:Initializing tune_model()
2025-04-06 17:28:56,348:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'shrinkage': [0.0], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>)
2025-04-06 17:28:56,348:INFO:Checking exceptions
2025-04-06 17:28:56,357:INFO:Copying training dataset
2025-04-06 17:28:56,358:INFO:Checking base model
2025-04-06 17:28:56,359:INFO:Base model : Linear Discriminant Analysis
2025-04-06 17:28:56,360:INFO:Declaring metric variables
2025-04-06 17:28:56,363:INFO:Defining Hyperparameters
2025-04-06 17:28:56,467:INFO:custom_grid: {'actual_estimator__shrinkage': [0.0], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:28:56,467:INFO:Tuning with n_jobs=-1
2025-04-06 17:28:56,467:INFO:Initializing GridSearchCV
2025-04-06 17:28:56,493:INFO:best_params: {'actual_estimator__shrinkage': 0.0, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:28:56,493:INFO:Hyperparameter search completed
2025-04-06 17:28:56,493:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:56,494:INFO:Initializing create_model()
2025-04-06 17:28:56,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFE89CEDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'shrinkage': 0.0, 'solver': 'lsqr'})
2025-04-06 17:28:56,494:INFO:Checking exceptions
2025-04-06 17:28:56,494:INFO:Importing libraries
2025-04-06 17:28:56,494:INFO:Copying training dataset
2025-04-06 17:28:56,496:INFO:Defining folds
2025-04-06 17:28:56,496:INFO:Declaring metric variables
2025-04-06 17:28:56,497:INFO:Importing untrained model
2025-04-06 17:28:56,498:INFO:Declaring custom model
2025-04-06 17:28:56,499:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:28:56,502:INFO:Starting cross validation
2025-04-06 17:28:56,503:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:56,525:INFO:Calculating mean and std
2025-04-06 17:28:56,525:INFO:Creating metrics dataframe
2025-04-06 17:28:56,528:INFO:Finalizing model
2025-04-06 17:28:56,534:INFO:Uploading results into container
2025-04-06 17:28:56,535:INFO:Uploading model into container now
2025-04-06 17:28:56,535:INFO:_master_model_container: 15
2025-04-06 17:28:56,535:INFO:_display_container: 5
2025-04-06 17:28:56,535:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:28:56,535:INFO:create_model() successfully completed......................................
2025-04-06 17:28:56,630:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:56,630:INFO:choose_better activated
2025-04-06 17:28:56,632:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:56,632:INFO:Initializing create_model()
2025-04-06 17:28:56,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:56,632:INFO:Checking exceptions
2025-04-06 17:28:56,633:INFO:Importing libraries
2025-04-06 17:28:56,633:INFO:Copying training dataset
2025-04-06 17:28:56,635:INFO:Defining folds
2025-04-06 17:28:56,635:INFO:Declaring metric variables
2025-04-06 17:28:56,635:INFO:Importing untrained model
2025-04-06 17:28:56,635:INFO:Declaring custom model
2025-04-06 17:28:56,635:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:28:56,635:INFO:Starting cross validation
2025-04-06 17:28:56,636:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:56,666:INFO:Calculating mean and std
2025-04-06 17:28:56,666:INFO:Creating metrics dataframe
2025-04-06 17:28:56,667:INFO:Finalizing model
2025-04-06 17:28:56,671:INFO:Uploading results into container
2025-04-06 17:28:56,672:INFO:Uploading model into container now
2025-04-06 17:28:56,672:INFO:_master_model_container: 16
2025-04-06 17:28:56,672:INFO:_display_container: 6
2025-04-06 17:28:56,672:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:28:56,672:INFO:create_model() successfully completed......................................
2025-04-06 17:28:56,764:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:56,765:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:28:56,765:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:28:56,765:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2025-04-06 17:28:56,765:INFO:choose_better completed
2025-04-06 17:28:56,765:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:28:56,769:INFO:_master_model_container: 16
2025-04-06 17:28:56,769:INFO:_display_container: 5
2025-04-06 17:28:56,770:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:28:56,770:INFO:tune_model() successfully completed......................................
2025-04-06 17:28:56,869:INFO:Initializing tune_model()
2025-04-06 17:28:56,869:INFO:tune_model(estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=4, round=4, n_iter=25, custom_grid={'probability': [True], 'C': [1.0], 'kernel': ['linear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>)
2025-04-06 17:28:56,869:INFO:Checking exceptions
2025-04-06 17:28:56,878:INFO:Copying training dataset
2025-04-06 17:28:56,879:INFO:Checking base model
2025-04-06 17:28:56,879:INFO:Base model : SVM - Radial Kernel
2025-04-06 17:28:56,881:INFO:Declaring metric variables
2025-04-06 17:28:56,882:INFO:Defining Hyperparameters
2025-04-06 17:28:56,981:INFO:custom_grid: {'actual_estimator__probability': [True], 'actual_estimator__C': [1.0], 'actual_estimator__kernel': ['linear']}
2025-04-06 17:28:56,981:INFO:Tuning with n_jobs=-1
2025-04-06 17:28:56,981:INFO:Initializing GridSearchCV
2025-04-06 17:28:57,014:INFO:best_params: {'actual_estimator__C': 1.0, 'actual_estimator__kernel': 'linear', 'actual_estimator__probability': True}
2025-04-06 17:28:57,014:INFO:Hyperparameter search completed
2025-04-06 17:28:57,014:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:57,015:INFO:Initializing create_model()
2025-04-06 17:28:57,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFE89E3070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1.0, 'kernel': 'linear', 'probability': True})
2025-04-06 17:28:57,015:INFO:Checking exceptions
2025-04-06 17:28:57,015:INFO:Importing libraries
2025-04-06 17:28:57,015:INFO:Copying training dataset
2025-04-06 17:28:57,016:INFO:Defining folds
2025-04-06 17:28:57,016:INFO:Declaring metric variables
2025-04-06 17:28:57,018:INFO:Importing untrained model
2025-04-06 17:28:57,018:INFO:Declaring custom model
2025-04-06 17:28:57,020:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:28:57,023:INFO:Starting cross validation
2025-04-06 17:28:57,024:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:57,062:INFO:Calculating mean and std
2025-04-06 17:28:57,062:INFO:Creating metrics dataframe
2025-04-06 17:28:57,065:INFO:Finalizing model
2025-04-06 17:28:57,077:INFO:Uploading results into container
2025-04-06 17:28:57,078:INFO:Uploading model into container now
2025-04-06 17:28:57,079:INFO:_master_model_container: 17
2025-04-06 17:28:57,079:INFO:_display_container: 6
2025-04-06 17:28:57,079:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:28:57,079:INFO:create_model() successfully completed......................................
2025-04-06 17:28:57,176:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:57,176:INFO:choose_better activated
2025-04-06 17:28:57,178:INFO:SubProcess create_model() called ==================================
2025-04-06 17:28:57,179:INFO:Initializing create_model()
2025-04-06 17:28:57,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:28:57,179:INFO:Checking exceptions
2025-04-06 17:28:57,180:INFO:Importing libraries
2025-04-06 17:28:57,180:INFO:Copying training dataset
2025-04-06 17:28:57,181:INFO:Defining folds
2025-04-06 17:28:57,181:INFO:Declaring metric variables
2025-04-06 17:28:57,181:INFO:Importing untrained model
2025-04-06 17:28:57,181:INFO:Declaring custom model
2025-04-06 17:28:57,181:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:28:57,182:INFO:Starting cross validation
2025-04-06 17:28:57,182:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:28:57,220:INFO:Calculating mean and std
2025-04-06 17:28:57,220:INFO:Creating metrics dataframe
2025-04-06 17:28:57,221:INFO:Finalizing model
2025-04-06 17:28:57,230:INFO:Uploading results into container
2025-04-06 17:28:57,230:INFO:Uploading model into container now
2025-04-06 17:28:57,230:INFO:_master_model_container: 18
2025-04-06 17:28:57,230:INFO:_display_container: 7
2025-04-06 17:28:57,230:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:28:57,230:INFO:create_model() successfully completed......................................
2025-04-06 17:28:57,326:INFO:SubProcess create_model() end ==================================
2025-04-06 17:28:57,326:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:28:57,326:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:28:57,326:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) is best model
2025-04-06 17:28:57,326:INFO:choose_better completed
2025-04-06 17:28:57,327:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:28:57,331:INFO:_master_model_container: 18
2025-04-06 17:28:57,331:INFO:_display_container: 6
2025-04-06 17:28:57,332:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:28:57,332:INFO:tune_model() successfully completed......................................
2025-04-06 17:28:57,423:INFO:Initializing tune_model()
2025-04-06 17:28:57,423:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>)
2025-04-06 17:28:57,423:INFO:Checking exceptions
2025-04-06 17:28:57,423:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:28:57,445:INFO:Copying training dataset
2025-04-06 17:28:57,446:INFO:Checking base model
2025-04-06 17:28:57,447:INFO:Base model : Random Forest Classifier
2025-04-06 17:28:57,448:INFO:Declaring metric variables
2025-04-06 17:28:57,450:INFO:Defining Hyperparameters
2025-04-06 17:28:57,548:INFO:Tuning with n_jobs=-1
2025-04-06 17:28:57,551:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:29:11,755:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', True), ('actual_estimator__class_weight', None), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 11), ('actual_estimator__max_features', 0.8300057969327517), ('actual_estimator__min_impurity_decrease', 3.341748754047965e-07), ('actual_estimator__min_samples_leaf', 4), ('actual_estimator__min_samples_split', 3), ('actual_estimator__n_estimators', 257)])
2025-04-06 17:29:11,755:INFO:Hyperparameter search completed
2025-04-06 17:29:11,755:INFO:SubProcess create_model() called ==================================
2025-04-06 17:29:11,756:INFO:Initializing create_model()
2025-04-06 17:29:11,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEEEAEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': True, 'class_weight': None, 'criterion': 'entropy', 'max_depth': 11, 'max_features': 0.8300057969327517, 'min_impurity_decrease': 3.341748754047965e-07, 'min_samples_leaf': 4, 'min_samples_split': 3, 'n_estimators': 257})
2025-04-06 17:29:11,756:INFO:Checking exceptions
2025-04-06 17:29:11,756:INFO:Importing libraries
2025-04-06 17:29:11,756:INFO:Copying training dataset
2025-04-06 17:29:11,758:INFO:Defining folds
2025-04-06 17:29:11,758:INFO:Declaring metric variables
2025-04-06 17:29:11,760:INFO:Importing untrained model
2025-04-06 17:29:11,760:INFO:Declaring custom model
2025-04-06 17:29:11,762:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:29:11,766:INFO:Starting cross validation
2025-04-06 17:29:11,766:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:29:12,044:INFO:Calculating mean and std
2025-04-06 17:29:12,044:INFO:Creating metrics dataframe
2025-04-06 17:29:12,047:INFO:Finalizing model
2025-04-06 17:29:12,238:INFO:Uploading results into container
2025-04-06 17:29:12,238:INFO:Uploading model into container now
2025-04-06 17:29:12,239:INFO:_master_model_container: 19
2025-04-06 17:29:12,239:INFO:_display_container: 7
2025-04-06 17:29:12,239:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:29:12,239:INFO:create_model() successfully completed......................................
2025-04-06 17:29:12,332:INFO:SubProcess create_model() end ==================================
2025-04-06 17:29:12,332:INFO:choose_better activated
2025-04-06 17:29:12,334:INFO:SubProcess create_model() called ==================================
2025-04-06 17:29:12,335:INFO:Initializing create_model()
2025-04-06 17:29:12,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:29:12,335:INFO:Checking exceptions
2025-04-06 17:29:12,336:INFO:Importing libraries
2025-04-06 17:29:12,336:INFO:Copying training dataset
2025-04-06 17:29:12,338:INFO:Defining folds
2025-04-06 17:29:12,338:INFO:Declaring metric variables
2025-04-06 17:29:12,338:INFO:Importing untrained model
2025-04-06 17:29:12,338:INFO:Declaring custom model
2025-04-06 17:29:12,338:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:29:12,338:INFO:Starting cross validation
2025-04-06 17:29:12,338:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:29:12,518:INFO:Calculating mean and std
2025-04-06 17:29:12,518:INFO:Creating metrics dataframe
2025-04-06 17:29:12,519:INFO:Finalizing model
2025-04-06 17:29:12,599:INFO:Uploading results into container
2025-04-06 17:29:12,599:INFO:Uploading model into container now
2025-04-06 17:29:12,599:INFO:_master_model_container: 20
2025-04-06 17:29:12,599:INFO:_display_container: 8
2025-04-06 17:29:12,600:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:29:12,600:INFO:create_model() successfully completed......................................
2025-04-06 17:29:12,692:INFO:SubProcess create_model() end ==================================
2025-04-06 17:29:12,693:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for AUC is 0.5485
2025-04-06 17:29:12,693:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for AUC is 0.5656
2025-04-06 17:29:12,694:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2025-04-06 17:29:12,694:INFO:choose_better completed
2025-04-06 17:29:12,698:INFO:_master_model_container: 20
2025-04-06 17:29:12,698:INFO:_display_container: 7
2025-04-06 17:29:12,698:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:29:12,698:INFO:tune_model() successfully completed......................................
2025-04-06 17:29:12,788:INFO:Initializing finalize_model()
2025-04-06 17:29:12,788:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:29:12,788:INFO:Finalizing LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:29:12,789:INFO:Initializing create_model()
2025-04-06 17:29:12,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:29:12,789:INFO:Checking exceptions
2025-04-06 17:29:12,790:INFO:Importing libraries
2025-04-06 17:29:12,790:INFO:Copying training dataset
2025-04-06 17:29:12,791:INFO:Defining folds
2025-04-06 17:29:12,791:INFO:Declaring metric variables
2025-04-06 17:29:12,791:INFO:Importing untrained model
2025-04-06 17:29:12,791:INFO:Declaring custom model
2025-04-06 17:29:12,791:INFO:Logistic Regression Imported successfully
2025-04-06 17:29:12,791:INFO:Cross validation set to False
2025-04-06 17:29:12,791:INFO:Fitting Model
2025-04-06 17:29:12,798:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:29:12,798:INFO:create_model() successfully completed......................................
2025-04-06 17:29:12,888:INFO:_master_model_container: 20
2025-04-06 17:29:12,888:INFO:_display_container: 7
2025-04-06 17:29:12,891:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:29:12,891:INFO:finalize_model() successfully completed......................................
2025-04-06 17:29:12,983:INFO:Initializing finalize_model()
2025-04-06 17:29:12,983:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:29:12,983:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:29:12,984:INFO:Initializing create_model()
2025-04-06 17:29:12,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:29:12,984:INFO:Checking exceptions
2025-04-06 17:29:12,985:INFO:Importing libraries
2025-04-06 17:29:12,985:INFO:Copying training dataset
2025-04-06 17:29:12,985:INFO:Defining folds
2025-04-06 17:29:12,985:INFO:Declaring metric variables
2025-04-06 17:29:12,986:INFO:Importing untrained model
2025-04-06 17:29:12,986:INFO:Declaring custom model
2025-04-06 17:29:12,986:INFO:Ridge Classifier Imported successfully
2025-04-06 17:29:12,986:INFO:Cross validation set to False
2025-04-06 17:29:12,986:INFO:Fitting Model
2025-04-06 17:29:12,993:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:29:12,993:INFO:create_model() successfully completed......................................
2025-04-06 17:29:13,085:INFO:_master_model_container: 20
2025-04-06 17:29:13,085:INFO:_display_container: 7
2025-04-06 17:29:13,087:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:29:13,087:INFO:finalize_model() successfully completed......................................
2025-04-06 17:29:13,178:INFO:Initializing finalize_model()
2025-04-06 17:29:13,178:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:29:13,178:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:29:13,180:INFO:Initializing create_model()
2025-04-06 17:29:13,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:29:13,180:INFO:Checking exceptions
2025-04-06 17:29:13,181:INFO:Importing libraries
2025-04-06 17:29:13,181:INFO:Copying training dataset
2025-04-06 17:29:13,181:INFO:Defining folds
2025-04-06 17:29:13,181:INFO:Declaring metric variables
2025-04-06 17:29:13,181:INFO:Importing untrained model
2025-04-06 17:29:13,181:INFO:Declaring custom model
2025-04-06 17:29:13,181:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:29:13,182:INFO:Cross validation set to False
2025-04-06 17:29:13,182:INFO:Fitting Model
2025-04-06 17:29:13,188:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:29:13,188:INFO:create_model() successfully completed......................................
2025-04-06 17:29:13,279:INFO:_master_model_container: 20
2025-04-06 17:29:13,279:INFO:_display_container: 7
2025-04-06 17:29:13,281:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:29:13,281:INFO:finalize_model() successfully completed......................................
2025-04-06 17:29:13,372:INFO:Initializing finalize_model()
2025-04-06 17:29:13,372:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:29:13,372:INFO:Finalizing SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:29:13,373:INFO:Initializing create_model()
2025-04-06 17:29:13,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:29:13,374:INFO:Checking exceptions
2025-04-06 17:29:13,375:INFO:Importing libraries
2025-04-06 17:29:13,375:INFO:Copying training dataset
2025-04-06 17:29:13,375:INFO:Defining folds
2025-04-06 17:29:13,375:INFO:Declaring metric variables
2025-04-06 17:29:13,375:INFO:Importing untrained model
2025-04-06 17:29:13,375:INFO:Declaring custom model
2025-04-06 17:29:13,375:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:29:13,375:INFO:Cross validation set to False
2025-04-06 17:29:13,376:INFO:Fitting Model
2025-04-06 17:29:13,387:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:29:13,387:INFO:create_model() successfully completed......................................
2025-04-06 17:29:13,476:INFO:_master_model_container: 20
2025-04-06 17:29:13,476:INFO:_display_container: 7
2025-04-06 17:29:13,479:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:29:13,479:INFO:finalize_model() successfully completed......................................
2025-04-06 17:29:13,567:INFO:Initializing finalize_model()
2025-04-06 17:29:13,567:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:29:13,567:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:29:13,569:INFO:Initializing create_model()
2025-04-06 17:29:13,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFB5E93460>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:29:13,569:INFO:Checking exceptions
2025-04-06 17:29:13,570:INFO:Importing libraries
2025-04-06 17:29:13,570:INFO:Copying training dataset
2025-04-06 17:29:13,570:INFO:Defining folds
2025-04-06 17:29:13,570:INFO:Declaring metric variables
2025-04-06 17:29:13,570:INFO:Importing untrained model
2025-04-06 17:29:13,570:INFO:Declaring custom model
2025-04-06 17:29:13,570:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:29:13,571:INFO:Cross validation set to False
2025-04-06 17:29:13,571:INFO:Fitting Model
2025-04-06 17:29:13,759:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:29:13,759:INFO:create_model() successfully completed......................................
2025-04-06 17:29:13,850:INFO:_master_model_container: 20
2025-04-06 17:29:13,850:INFO:_display_container: 7
2025-04-06 17:29:13,853:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:29:13,853:INFO:finalize_model() successfully completed......................................
2025-04-06 17:29:13,956:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\arch\bootstrap\base.py:402: FutureWarning: random_state is deprecated and will be removed in a future version. The default random number generator is changing to a NumPy Generator. To continue using RandomState, please directly pass a RandomState instance using the ``generator`` keyword argument.
  warnings.warn(

2025-04-06 17:29:14,064:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:14,176:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:14,284:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:15,699:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:15,811:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:15,914:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:18,751:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:20,048:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:20,160:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:20,259:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning: invalid value encountered in divide
  result = (result - result.min()) / (result.max() - result.min())

2025-04-06 17:29:21,365:INFO:PyCaret ClassificationExperiment
2025-04-06 17:29:21,365:INFO:Logging name: clf-default-name
2025-04-06 17:29:21,365:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:29:21,365:INFO:version 3.3.2
2025-04-06 17:29:21,365:INFO:Initializing setup()
2025-04-06 17:29:21,365:INFO:self.USI: 4e59
2025-04-06 17:29:21,365:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:29:21,365:INFO:Checking environment
2025-04-06 17:29:21,365:INFO:python_version: 3.9.21
2025-04-06 17:29:21,365:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:29:21,365:INFO:machine: AMD64
2025-04-06 17:29:21,365:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:29:21,380:INFO:Memory: svmem(total=137112563712, available=97940328448, percent=28.6, used=39172235264, free=97940328448)
2025-04-06 17:29:21,381:INFO:Physical Core: 24
2025-04-06 17:29:21,381:INFO:Logical Core: 32
2025-04-06 17:29:21,381:INFO:Checking libraries
2025-04-06 17:29:21,381:INFO:System:
2025-04-06 17:29:21,381:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:29:21,381:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:29:21,381:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:29:21,381:INFO:PyCaret required dependencies:
2025-04-06 17:29:21,381:INFO:                 pip: 25.0
2025-04-06 17:29:21,381:INFO:          setuptools: 72.1.0
2025-04-06 17:29:21,381:INFO:             pycaret: 3.3.2
2025-04-06 17:29:21,381:INFO:             IPython: 8.18.1
2025-04-06 17:29:21,381:INFO:          ipywidgets: 8.1.5
2025-04-06 17:29:21,381:INFO:                tqdm: 4.67.1
2025-04-06 17:29:21,381:INFO:               numpy: 1.26.4
2025-04-06 17:29:21,381:INFO:              pandas: 2.1.4
2025-04-06 17:29:21,381:INFO:              jinja2: 3.1.6
2025-04-06 17:29:21,381:INFO:               scipy: 1.11.4
2025-04-06 17:29:21,381:INFO:              joblib: 1.3.2
2025-04-06 17:29:21,381:INFO:             sklearn: 1.4.2
2025-04-06 17:29:21,381:INFO:                pyod: 2.0.4
2025-04-06 17:29:21,381:INFO:            imblearn: 0.12.4
2025-04-06 17:29:21,381:INFO:   category_encoders: 2.6.4
2025-04-06 17:29:21,381:INFO:            lightgbm: 4.6.0
2025-04-06 17:29:21,381:INFO:               numba: 0.60.0
2025-04-06 17:29:21,381:INFO:            requests: 2.32.3
2025-04-06 17:29:21,381:INFO:          matplotlib: 3.7.5
2025-04-06 17:29:21,381:INFO:          scikitplot: 0.3.7
2025-04-06 17:29:21,381:INFO:         yellowbrick: 1.5
2025-04-06 17:29:21,381:INFO:              plotly: 5.24.1
2025-04-06 17:29:21,381:INFO:    plotly-resampler: Not installed
2025-04-06 17:29:21,381:INFO:             kaleido: 0.2.1
2025-04-06 17:29:21,381:INFO:           schemdraw: 0.15
2025-04-06 17:29:21,381:INFO:         statsmodels: 0.14.4
2025-04-06 17:29:21,381:INFO:              sktime: 0.26.0
2025-04-06 17:29:21,381:INFO:               tbats: 1.1.3
2025-04-06 17:29:21,381:INFO:            pmdarima: 2.0.4
2025-04-06 17:29:21,381:INFO:              psutil: 7.0.0
2025-04-06 17:29:21,381:INFO:          markupsafe: 3.0.2
2025-04-06 17:29:21,381:INFO:             pickle5: Not installed
2025-04-06 17:29:21,381:INFO:         cloudpickle: 3.1.1
2025-04-06 17:29:21,381:INFO:         deprecation: 2.1.0
2025-04-06 17:29:21,381:INFO:              xxhash: 3.5.0
2025-04-06 17:29:21,381:INFO:           wurlitzer: Not installed
2025-04-06 17:29:21,381:INFO:PyCaret optional dependencies:
2025-04-06 17:29:21,381:INFO:                shap: Not installed
2025-04-06 17:29:21,381:INFO:           interpret: Not installed
2025-04-06 17:29:21,381:INFO:                umap: Not installed
2025-04-06 17:29:21,381:INFO:     ydata_profiling: Not installed
2025-04-06 17:29:21,381:INFO:  explainerdashboard: Not installed
2025-04-06 17:29:21,381:INFO:             autoviz: Not installed
2025-04-06 17:29:21,381:INFO:           fairlearn: Not installed
2025-04-06 17:29:21,381:INFO:          deepchecks: Not installed
2025-04-06 17:29:21,381:INFO:             xgboost: Not installed
2025-04-06 17:29:21,381:INFO:            catboost: Not installed
2025-04-06 17:29:21,381:INFO:              kmodes: Not installed
2025-04-06 17:29:21,381:INFO:             mlxtend: Not installed
2025-04-06 17:29:21,381:INFO:       statsforecast: Not installed
2025-04-06 17:29:21,381:INFO:        tune_sklearn: Not installed
2025-04-06 17:29:21,381:INFO:                 ray: Not installed
2025-04-06 17:29:21,381:INFO:            hyperopt: 0.2.7
2025-04-06 17:29:21,381:INFO:              optuna: 4.2.1
2025-04-06 17:29:21,381:INFO:               skopt: 0.10.2
2025-04-06 17:29:21,381:INFO:              mlflow: Not installed
2025-04-06 17:29:21,381:INFO:              gradio: Not installed
2025-04-06 17:29:21,381:INFO:             fastapi: Not installed
2025-04-06 17:29:21,381:INFO:             uvicorn: Not installed
2025-04-06 17:29:21,381:INFO:              m2cgen: Not installed
2025-04-06 17:29:21,382:INFO:           evidently: Not installed
2025-04-06 17:29:21,382:INFO:               fugue: Not installed
2025-04-06 17:29:21,382:INFO:           streamlit: Not installed
2025-04-06 17:29:21,382:INFO:             prophet: Not installed
2025-04-06 17:29:21,382:INFO:None
2025-04-06 17:29:21,382:INFO:Set up data.
2025-04-06 17:29:21,383:INFO:Set up folding strategy.
2025-04-06 17:29:21,383:INFO:Set up train/test split.
2025-04-06 17:31:19,414:INFO:PyCaret ClassificationExperiment
2025-04-06 17:31:19,415:INFO:Logging name: clf-default-name
2025-04-06 17:31:19,415:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:31:19,415:INFO:version 3.3.2
2025-04-06 17:31:19,415:INFO:Initializing setup()
2025-04-06 17:31:19,415:INFO:self.USI: 5dfb
2025-04-06 17:31:19,415:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:31:19,415:INFO:Checking environment
2025-04-06 17:31:19,415:INFO:python_version: 3.9.21
2025-04-06 17:31:19,415:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:31:19,415:INFO:machine: AMD64
2025-04-06 17:31:19,415:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:31:19,421:INFO:Memory: svmem(total=137112563712, available=97858248704, percent=28.6, used=39254315008, free=97858248704)
2025-04-06 17:31:19,421:INFO:Physical Core: 24
2025-04-06 17:31:19,421:INFO:Logical Core: 32
2025-04-06 17:31:19,421:INFO:Checking libraries
2025-04-06 17:31:19,421:INFO:System:
2025-04-06 17:31:19,421:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:31:19,421:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:31:19,421:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:31:19,421:INFO:PyCaret required dependencies:
2025-04-06 17:31:19,422:INFO:                 pip: 25.0
2025-04-06 17:31:19,422:INFO:          setuptools: 72.1.0
2025-04-06 17:31:19,422:INFO:             pycaret: 3.3.2
2025-04-06 17:31:19,422:INFO:             IPython: 8.18.1
2025-04-06 17:31:19,422:INFO:          ipywidgets: 8.1.5
2025-04-06 17:31:19,422:INFO:                tqdm: 4.67.1
2025-04-06 17:31:19,422:INFO:               numpy: 1.26.4
2025-04-06 17:31:19,422:INFO:              pandas: 2.1.4
2025-04-06 17:31:19,422:INFO:              jinja2: 3.1.6
2025-04-06 17:31:19,422:INFO:               scipy: 1.11.4
2025-04-06 17:31:19,422:INFO:              joblib: 1.3.2
2025-04-06 17:31:19,422:INFO:             sklearn: 1.4.2
2025-04-06 17:31:19,422:INFO:                pyod: 2.0.4
2025-04-06 17:31:19,422:INFO:            imblearn: 0.12.4
2025-04-06 17:31:19,422:INFO:   category_encoders: 2.6.4
2025-04-06 17:31:19,422:INFO:            lightgbm: 4.6.0
2025-04-06 17:31:19,422:INFO:               numba: 0.60.0
2025-04-06 17:31:19,422:INFO:            requests: 2.32.3
2025-04-06 17:31:19,422:INFO:          matplotlib: 3.7.5
2025-04-06 17:31:19,422:INFO:          scikitplot: 0.3.7
2025-04-06 17:31:19,422:INFO:         yellowbrick: 1.5
2025-04-06 17:31:19,422:INFO:              plotly: 5.24.1
2025-04-06 17:31:19,422:INFO:    plotly-resampler: Not installed
2025-04-06 17:31:19,422:INFO:             kaleido: 0.2.1
2025-04-06 17:31:19,422:INFO:           schemdraw: 0.15
2025-04-06 17:31:19,422:INFO:         statsmodels: 0.14.4
2025-04-06 17:31:19,422:INFO:              sktime: 0.26.0
2025-04-06 17:31:19,422:INFO:               tbats: 1.1.3
2025-04-06 17:31:19,422:INFO:            pmdarima: 2.0.4
2025-04-06 17:31:19,422:INFO:              psutil: 7.0.0
2025-04-06 17:31:19,422:INFO:          markupsafe: 3.0.2
2025-04-06 17:31:19,422:INFO:             pickle5: Not installed
2025-04-06 17:31:19,422:INFO:         cloudpickle: 3.1.1
2025-04-06 17:31:19,422:INFO:         deprecation: 2.1.0
2025-04-06 17:31:19,422:INFO:              xxhash: 3.5.0
2025-04-06 17:31:19,422:INFO:           wurlitzer: Not installed
2025-04-06 17:31:19,422:INFO:PyCaret optional dependencies:
2025-04-06 17:31:19,422:INFO:                shap: Not installed
2025-04-06 17:31:19,422:INFO:           interpret: Not installed
2025-04-06 17:31:19,422:INFO:                umap: Not installed
2025-04-06 17:31:19,422:INFO:     ydata_profiling: Not installed
2025-04-06 17:31:19,422:INFO:  explainerdashboard: Not installed
2025-04-06 17:31:19,422:INFO:             autoviz: Not installed
2025-04-06 17:31:19,422:INFO:           fairlearn: Not installed
2025-04-06 17:31:19,422:INFO:          deepchecks: Not installed
2025-04-06 17:31:19,422:INFO:             xgboost: Not installed
2025-04-06 17:31:19,422:INFO:            catboost: Not installed
2025-04-06 17:31:19,422:INFO:              kmodes: Not installed
2025-04-06 17:31:19,422:INFO:             mlxtend: Not installed
2025-04-06 17:31:19,422:INFO:       statsforecast: Not installed
2025-04-06 17:31:19,422:INFO:        tune_sklearn: Not installed
2025-04-06 17:31:19,422:INFO:                 ray: Not installed
2025-04-06 17:31:19,422:INFO:            hyperopt: 0.2.7
2025-04-06 17:31:19,422:INFO:              optuna: 4.2.1
2025-04-06 17:31:19,422:INFO:               skopt: 0.10.2
2025-04-06 17:31:19,422:INFO:              mlflow: Not installed
2025-04-06 17:31:19,422:INFO:              gradio: Not installed
2025-04-06 17:31:19,423:INFO:             fastapi: Not installed
2025-04-06 17:31:19,423:INFO:             uvicorn: Not installed
2025-04-06 17:31:19,423:INFO:              m2cgen: Not installed
2025-04-06 17:31:19,423:INFO:           evidently: Not installed
2025-04-06 17:31:19,423:INFO:               fugue: Not installed
2025-04-06 17:31:19,423:INFO:           streamlit: Not installed
2025-04-06 17:31:19,423:INFO:             prophet: Not installed
2025-04-06 17:31:19,423:INFO:None
2025-04-06 17:31:19,423:INFO:Set up data.
2025-04-06 17:31:19,424:INFO:Set up folding strategy.
2025-04-06 17:31:19,424:INFO:Set up train/test split.
2025-04-06 17:31:19,426:INFO:Set up index.
2025-04-06 17:31:19,426:INFO:Assigning column types.
2025-04-06 17:31:19,428:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-06 17:31:19,449:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:31:19,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:31:19,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:31:19,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:31:19,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,496:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-06 17:31:19,515:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:31:19,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:31:19,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,563:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-06 17:31:19,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,631:INFO:Preparing preprocessing pipeline...
2025-04-06 17:31:19,632:INFO:Set up simple imputation.
2025-04-06 17:31:19,632:INFO:Set up feature normalization.
2025-04-06 17:31:19,643:INFO:Finished creating preprocessing pipeline.
2025-04-06 17:31:19,645:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-04-06 17:31:19,645:INFO:Creating final display dataframe.
2025-04-06 17:31:19,679:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Direction
2                   Target type            Binary
3           Original data shape          (358, 5)
4        Transformed data shape          (358, 5)
5   Transformed train set shape          (354, 5)
6    Transformed test set shape            (4, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5dfb
2025-04-06 17:31:19,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,747:INFO:setup() successfully completed in 0.33s...............
2025-04-06 17:31:19,748:INFO:gpu_param set to False
2025-04-06 17:31:19,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,813:INFO:gpu_param set to False
2025-04-06 17:31:19,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:31:19,878:INFO:Initializing compare_models()
2025-04-06 17:31:19,878:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, include=['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, 'include': ['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-06 17:31:19,878:INFO:Checking exceptions
2025-04-06 17:31:19,879:INFO:Preparing display monitor
2025-04-06 17:31:19,890:INFO:Initializing Gradient Boosting Classifier
2025-04-06 17:31:19,890:INFO:Total runtime is 0.0 minutes
2025-04-06 17:31:19,892:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:19,892:INFO:Initializing create_model()
2025-04-06 17:31:19,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:19,892:INFO:Checking exceptions
2025-04-06 17:31:19,892:INFO:Importing libraries
2025-04-06 17:31:19,892:INFO:Copying training dataset
2025-04-06 17:31:19,894:INFO:Defining folds
2025-04-06 17:31:19,894:INFO:Declaring metric variables
2025-04-06 17:31:19,895:INFO:Importing untrained model
2025-04-06 17:31:19,897:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 17:31:19,900:INFO:Starting cross validation
2025-04-06 17:31:19,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:20,018:INFO:Calculating mean and std
2025-04-06 17:31:20,018:INFO:Creating metrics dataframe
2025-04-06 17:31:20,019:INFO:Uploading results into container
2025-04-06 17:31:20,019:INFO:Uploading model into container now
2025-04-06 17:31:20,020:INFO:_master_model_container: 1
2025-04-06 17:31:20,020:INFO:_display_container: 2
2025-04-06 17:31:20,020:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 17:31:20,020:INFO:create_model() successfully completed......................................
2025-04-06 17:31:20,131:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:20,131:INFO:Creating metrics dataframe
2025-04-06 17:31:20,134:INFO:Initializing Logistic Regression
2025-04-06 17:31:20,134:INFO:Total runtime is 0.004066658020019531 minutes
2025-04-06 17:31:20,136:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:20,136:INFO:Initializing create_model()
2025-04-06 17:31:20,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:20,136:INFO:Checking exceptions
2025-04-06 17:31:20,136:INFO:Importing libraries
2025-04-06 17:31:20,136:INFO:Copying training dataset
2025-04-06 17:31:20,138:INFO:Defining folds
2025-04-06 17:31:20,138:INFO:Declaring metric variables
2025-04-06 17:31:20,140:INFO:Importing untrained model
2025-04-06 17:31:20,141:INFO:Logistic Regression Imported successfully
2025-04-06 17:31:20,144:INFO:Starting cross validation
2025-04-06 17:31:20,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:20,191:INFO:Calculating mean and std
2025-04-06 17:31:20,191:INFO:Creating metrics dataframe
2025-04-06 17:31:20,192:INFO:Uploading results into container
2025-04-06 17:31:20,192:INFO:Uploading model into container now
2025-04-06 17:31:20,193:INFO:_master_model_container: 2
2025-04-06 17:31:20,193:INFO:_display_container: 2
2025-04-06 17:31:20,193:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:31:20,193:INFO:create_model() successfully completed......................................
2025-04-06 17:31:20,294:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:20,294:INFO:Creating metrics dataframe
2025-04-06 17:31:20,298:INFO:Initializing Extra Trees Classifier
2025-04-06 17:31:20,298:INFO:Total runtime is 0.006800003846486409 minutes
2025-04-06 17:31:20,300:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:20,300:INFO:Initializing create_model()
2025-04-06 17:31:20,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:20,300:INFO:Checking exceptions
2025-04-06 17:31:20,300:INFO:Importing libraries
2025-04-06 17:31:20,300:INFO:Copying training dataset
2025-04-06 17:31:20,303:INFO:Defining folds
2025-04-06 17:31:20,303:INFO:Declaring metric variables
2025-04-06 17:31:20,304:INFO:Importing untrained model
2025-04-06 17:31:20,306:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:31:20,309:INFO:Starting cross validation
2025-04-06 17:31:20,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:20,504:INFO:Calculating mean and std
2025-04-06 17:31:20,504:INFO:Creating metrics dataframe
2025-04-06 17:31:20,505:INFO:Uploading results into container
2025-04-06 17:31:20,506:INFO:Uploading model into container now
2025-04-06 17:31:20,506:INFO:_master_model_container: 3
2025-04-06 17:31:20,506:INFO:_display_container: 2
2025-04-06 17:31:20,506:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:31:20,506:INFO:create_model() successfully completed......................................
2025-04-06 17:31:20,606:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:20,606:INFO:Creating metrics dataframe
2025-04-06 17:31:20,609:INFO:Initializing Ridge Classifier
2025-04-06 17:31:20,609:INFO:Total runtime is 0.01198344628016154 minutes
2025-04-06 17:31:20,611:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:20,611:INFO:Initializing create_model()
2025-04-06 17:31:20,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:20,611:INFO:Checking exceptions
2025-04-06 17:31:20,611:INFO:Importing libraries
2025-04-06 17:31:20,611:INFO:Copying training dataset
2025-04-06 17:31:20,613:INFO:Defining folds
2025-04-06 17:31:20,613:INFO:Declaring metric variables
2025-04-06 17:31:20,614:INFO:Importing untrained model
2025-04-06 17:31:20,616:INFO:Ridge Classifier Imported successfully
2025-04-06 17:31:20,619:INFO:Starting cross validation
2025-04-06 17:31:20,620:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:20,663:INFO:Calculating mean and std
2025-04-06 17:31:20,664:INFO:Creating metrics dataframe
2025-04-06 17:31:20,665:INFO:Uploading results into container
2025-04-06 17:31:20,665:INFO:Uploading model into container now
2025-04-06 17:31:20,665:INFO:_master_model_container: 4
2025-04-06 17:31:20,665:INFO:_display_container: 2
2025-04-06 17:31:20,665:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:31:20,665:INFO:create_model() successfully completed......................................
2025-04-06 17:31:20,772:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:20,772:INFO:Creating metrics dataframe
2025-04-06 17:31:20,776:INFO:Initializing Quadratic Discriminant Analysis
2025-04-06 17:31:20,776:INFO:Total runtime is 0.014766685167948405 minutes
2025-04-06 17:31:20,778:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:20,778:INFO:Initializing create_model()
2025-04-06 17:31:20,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:20,778:INFO:Checking exceptions
2025-04-06 17:31:20,778:INFO:Importing libraries
2025-04-06 17:31:20,778:INFO:Copying training dataset
2025-04-06 17:31:20,780:INFO:Defining folds
2025-04-06 17:31:20,780:INFO:Declaring metric variables
2025-04-06 17:31:20,781:INFO:Importing untrained model
2025-04-06 17:31:20,782:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-06 17:31:20,786:INFO:Starting cross validation
2025-04-06 17:31:20,786:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:20,822:INFO:Calculating mean and std
2025-04-06 17:31:20,822:INFO:Creating metrics dataframe
2025-04-06 17:31:20,823:INFO:Uploading results into container
2025-04-06 17:31:20,823:INFO:Uploading model into container now
2025-04-06 17:31:20,824:INFO:_master_model_container: 5
2025-04-06 17:31:20,824:INFO:_display_container: 2
2025-04-06 17:31:20,824:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-06 17:31:20,824:INFO:create_model() successfully completed......................................
2025-04-06 17:31:20,926:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:20,926:INFO:Creating metrics dataframe
2025-04-06 17:31:20,930:INFO:Initializing Linear Discriminant Analysis
2025-04-06 17:31:20,930:INFO:Total runtime is 0.017329148451487225 minutes
2025-04-06 17:31:20,932:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:20,932:INFO:Initializing create_model()
2025-04-06 17:31:20,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:20,932:INFO:Checking exceptions
2025-04-06 17:31:20,932:INFO:Importing libraries
2025-04-06 17:31:20,932:INFO:Copying training dataset
2025-04-06 17:31:20,933:INFO:Defining folds
2025-04-06 17:31:20,933:INFO:Declaring metric variables
2025-04-06 17:31:20,936:INFO:Importing untrained model
2025-04-06 17:31:20,938:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:31:20,941:INFO:Starting cross validation
2025-04-06 17:31:20,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:20,995:INFO:Calculating mean and std
2025-04-06 17:31:20,996:INFO:Creating metrics dataframe
2025-04-06 17:31:20,997:INFO:Uploading results into container
2025-04-06 17:31:20,997:INFO:Uploading model into container now
2025-04-06 17:31:20,997:INFO:_master_model_container: 6
2025-04-06 17:31:20,997:INFO:_display_container: 2
2025-04-06 17:31:20,997:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:31:20,997:INFO:create_model() successfully completed......................................
2025-04-06 17:31:21,105:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:21,105:INFO:Creating metrics dataframe
2025-04-06 17:31:21,109:INFO:Initializing MLP Classifier
2025-04-06 17:31:21,109:INFO:Total runtime is 0.02031600077946981 minutes
2025-04-06 17:31:21,111:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:21,111:INFO:Initializing create_model()
2025-04-06 17:31:21,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:21,111:INFO:Checking exceptions
2025-04-06 17:31:21,111:INFO:Importing libraries
2025-04-06 17:31:21,111:INFO:Copying training dataset
2025-04-06 17:31:21,113:INFO:Defining folds
2025-04-06 17:31:21,113:INFO:Declaring metric variables
2025-04-06 17:31:21,115:INFO:Importing untrained model
2025-04-06 17:31:21,117:INFO:MLP Classifier Imported successfully
2025-04-06 17:31:21,119:INFO:Starting cross validation
2025-04-06 17:31:21,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:21,342:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,345:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,347:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,363:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,373:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,378:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,395:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,400:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,411:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,455:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:31:21,469:INFO:Calculating mean and std
2025-04-06 17:31:21,469:INFO:Creating metrics dataframe
2025-04-06 17:31:21,471:INFO:Uploading results into container
2025-04-06 17:31:21,472:INFO:Uploading model into container now
2025-04-06 17:31:21,472:INFO:_master_model_container: 7
2025-04-06 17:31:21,472:INFO:_display_container: 2
2025-04-06 17:31:21,472:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 17:31:21,472:INFO:create_model() successfully completed......................................
2025-04-06 17:31:21,579:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:21,580:INFO:Creating metrics dataframe
2025-04-06 17:31:21,583:INFO:Initializing Decision Tree Classifier
2025-04-06 17:31:21,584:INFO:Total runtime is 0.02821716864903768 minutes
2025-04-06 17:31:21,585:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:21,585:INFO:Initializing create_model()
2025-04-06 17:31:21,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:21,585:INFO:Checking exceptions
2025-04-06 17:31:21,586:INFO:Importing libraries
2025-04-06 17:31:21,586:INFO:Copying training dataset
2025-04-06 17:31:21,587:INFO:Defining folds
2025-04-06 17:31:21,587:INFO:Declaring metric variables
2025-04-06 17:31:21,588:INFO:Importing untrained model
2025-04-06 17:31:21,590:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:31:21,594:INFO:Starting cross validation
2025-04-06 17:31:21,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:21,642:INFO:Calculating mean and std
2025-04-06 17:31:21,642:INFO:Creating metrics dataframe
2025-04-06 17:31:21,643:INFO:Uploading results into container
2025-04-06 17:31:21,643:INFO:Uploading model into container now
2025-04-06 17:31:21,644:INFO:_master_model_container: 8
2025-04-06 17:31:21,644:INFO:_display_container: 2
2025-04-06 17:31:21,644:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:31:21,644:INFO:create_model() successfully completed......................................
2025-04-06 17:31:21,747:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:21,747:INFO:Creating metrics dataframe
2025-04-06 17:31:21,751:INFO:Initializing Random Forest Classifier
2025-04-06 17:31:21,751:INFO:Total runtime is 0.031017053127288818 minutes
2025-04-06 17:31:21,753:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:21,753:INFO:Initializing create_model()
2025-04-06 17:31:21,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:21,753:INFO:Checking exceptions
2025-04-06 17:31:21,753:INFO:Importing libraries
2025-04-06 17:31:21,753:INFO:Copying training dataset
2025-04-06 17:31:21,755:INFO:Defining folds
2025-04-06 17:31:21,755:INFO:Declaring metric variables
2025-04-06 17:31:21,757:INFO:Importing untrained model
2025-04-06 17:31:21,759:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:31:21,762:INFO:Starting cross validation
2025-04-06 17:31:21,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:21,966:INFO:Calculating mean and std
2025-04-06 17:31:21,967:INFO:Creating metrics dataframe
2025-04-06 17:31:21,968:INFO:Uploading results into container
2025-04-06 17:31:21,968:INFO:Uploading model into container now
2025-04-06 17:31:21,969:INFO:_master_model_container: 9
2025-04-06 17:31:21,969:INFO:_display_container: 2
2025-04-06 17:31:21,969:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:31:21,969:INFO:create_model() successfully completed......................................
2025-04-06 17:31:22,068:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:22,068:INFO:Creating metrics dataframe
2025-04-06 17:31:22,072:INFO:Initializing custom model SVM - Radial Kernel
2025-04-06 17:31:22,072:INFO:Total runtime is 0.036368362108866376 minutes
2025-04-06 17:31:22,074:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:22,074:INFO:Initializing create_model()
2025-04-06 17:31:22,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE892E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:22,074:INFO:Checking exceptions
2025-04-06 17:31:22,074:INFO:Importing libraries
2025-04-06 17:31:22,074:INFO:Copying training dataset
2025-04-06 17:31:22,076:INFO:Defining folds
2025-04-06 17:31:22,076:INFO:Declaring metric variables
2025-04-06 17:31:22,078:INFO:Importing untrained model
2025-04-06 17:31:22,078:INFO:Declaring custom model
2025-04-06 17:31:22,080:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:31:22,083:INFO:Starting cross validation
2025-04-06 17:31:22,084:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:22,138:INFO:Calculating mean and std
2025-04-06 17:31:22,138:INFO:Creating metrics dataframe
2025-04-06 17:31:22,139:INFO:Uploading results into container
2025-04-06 17:31:22,139:INFO:Uploading model into container now
2025-04-06 17:31:22,140:INFO:_master_model_container: 10
2025-04-06 17:31:22,140:INFO:_display_container: 2
2025-04-06 17:31:22,140:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:31:22,140:INFO:create_model() successfully completed......................................
2025-04-06 17:31:22,239:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:22,239:INFO:Creating metrics dataframe
2025-04-06 17:31:22,244:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-04-06 17:31:22,248:INFO:Initializing create_model()
2025-04-06 17:31:22,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:22,249:INFO:Checking exceptions
2025-04-06 17:31:22,249:INFO:Importing libraries
2025-04-06 17:31:22,250:INFO:Copying training dataset
2025-04-06 17:31:22,251:INFO:Defining folds
2025-04-06 17:31:22,251:INFO:Declaring metric variables
2025-04-06 17:31:22,251:INFO:Importing untrained model
2025-04-06 17:31:22,251:INFO:Declaring custom model
2025-04-06 17:31:22,251:INFO:Logistic Regression Imported successfully
2025-04-06 17:31:22,252:INFO:Cross validation set to False
2025-04-06 17:31:22,252:INFO:Fitting Model
2025-04-06 17:31:22,256:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:31:22,256:INFO:create_model() successfully completed......................................
2025-04-06 17:31:22,359:INFO:Initializing create_model()
2025-04-06 17:31:22,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:22,360:INFO:Checking exceptions
2025-04-06 17:31:22,361:INFO:Importing libraries
2025-04-06 17:31:22,361:INFO:Copying training dataset
2025-04-06 17:31:22,362:INFO:Defining folds
2025-04-06 17:31:22,362:INFO:Declaring metric variables
2025-04-06 17:31:22,362:INFO:Importing untrained model
2025-04-06 17:31:22,362:INFO:Declaring custom model
2025-04-06 17:31:22,363:INFO:Ridge Classifier Imported successfully
2025-04-06 17:31:22,363:INFO:Cross validation set to False
2025-04-06 17:31:22,363:INFO:Fitting Model
2025-04-06 17:31:22,367:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:31:22,367:INFO:create_model() successfully completed......................................
2025-04-06 17:31:22,474:INFO:Initializing create_model()
2025-04-06 17:31:22,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:22,474:INFO:Checking exceptions
2025-04-06 17:31:22,475:INFO:Importing libraries
2025-04-06 17:31:22,475:INFO:Copying training dataset
2025-04-06 17:31:22,477:INFO:Defining folds
2025-04-06 17:31:22,477:INFO:Declaring metric variables
2025-04-06 17:31:22,477:INFO:Importing untrained model
2025-04-06 17:31:22,477:INFO:Declaring custom model
2025-04-06 17:31:22,477:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:31:22,477:INFO:Cross validation set to False
2025-04-06 17:31:22,477:INFO:Fitting Model
2025-04-06 17:31:22,482:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:31:22,482:INFO:create_model() successfully completed......................................
2025-04-06 17:31:22,587:INFO:Initializing create_model()
2025-04-06 17:31:22,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:22,588:INFO:Checking exceptions
2025-04-06 17:31:22,589:INFO:Importing libraries
2025-04-06 17:31:22,589:INFO:Copying training dataset
2025-04-06 17:31:22,591:INFO:Defining folds
2025-04-06 17:31:22,591:INFO:Declaring metric variables
2025-04-06 17:31:22,591:INFO:Importing untrained model
2025-04-06 17:31:22,591:INFO:Declaring custom model
2025-04-06 17:31:22,591:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:31:22,592:INFO:Cross validation set to False
2025-04-06 17:31:22,592:INFO:Fitting Model
2025-04-06 17:31:22,600:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:31:22,600:INFO:create_model() successfully completed......................................
2025-04-06 17:31:22,703:INFO:Initializing create_model()
2025-04-06 17:31:22,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:22,703:INFO:Checking exceptions
2025-04-06 17:31:22,704:INFO:Importing libraries
2025-04-06 17:31:22,704:INFO:Copying training dataset
2025-04-06 17:31:22,706:INFO:Defining folds
2025-04-06 17:31:22,706:INFO:Declaring metric variables
2025-04-06 17:31:22,706:INFO:Importing untrained model
2025-04-06 17:31:22,706:INFO:Declaring custom model
2025-04-06 17:31:22,706:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:31:22,707:INFO:Cross validation set to False
2025-04-06 17:31:22,707:INFO:Fitting Model
2025-04-06 17:31:22,796:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:31:22,796:INFO:create_model() successfully completed......................................
2025-04-06 17:31:22,912:INFO:_master_model_container: 10
2025-04-06 17:31:22,912:INFO:_display_container: 2
2025-04-06 17:31:22,912:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)]
2025-04-06 17:31:22,913:INFO:compare_models() successfully completed......................................
2025-04-06 17:31:22,913:INFO:Initializing tune_model()
2025-04-06 17:31:22,913:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=4, round=4, n_iter=25, custom_grid={'C': [1], 'solver': ['liblinear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>)
2025-04-06 17:31:22,913:INFO:Checking exceptions
2025-04-06 17:31:22,923:INFO:Copying training dataset
2025-04-06 17:31:22,926:INFO:Checking base model
2025-04-06 17:31:22,926:INFO:Base model : Logistic Regression
2025-04-06 17:31:22,928:INFO:Declaring metric variables
2025-04-06 17:31:22,931:INFO:Defining Hyperparameters
2025-04-06 17:31:23,053:INFO:custom_grid: {'actual_estimator__C': [1], 'actual_estimator__solver': ['liblinear']}
2025-04-06 17:31:23,053:INFO:Tuning with n_jobs=-1
2025-04-06 17:31:23,053:INFO:Initializing GridSearchCV
2025-04-06 17:31:23,080:INFO:best_params: {'actual_estimator__C': 1, 'actual_estimator__solver': 'liblinear'}
2025-04-06 17:31:23,080:INFO:Hyperparameter search completed
2025-04-06 17:31:23,080:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:23,080:INFO:Initializing create_model()
2025-04-06 17:31:23,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEF41730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1, 'solver': 'liblinear'})
2025-04-06 17:31:23,080:INFO:Checking exceptions
2025-04-06 17:31:23,080:INFO:Importing libraries
2025-04-06 17:31:23,080:INFO:Copying training dataset
2025-04-06 17:31:23,082:INFO:Defining folds
2025-04-06 17:31:23,082:INFO:Declaring metric variables
2025-04-06 17:31:23,084:INFO:Importing untrained model
2025-04-06 17:31:23,084:INFO:Declaring custom model
2025-04-06 17:31:23,086:INFO:Logistic Regression Imported successfully
2025-04-06 17:31:23,089:INFO:Starting cross validation
2025-04-06 17:31:23,090:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:23,110:INFO:Calculating mean and std
2025-04-06 17:31:23,110:INFO:Creating metrics dataframe
2025-04-06 17:31:23,113:INFO:Finalizing model
2025-04-06 17:31:23,120:INFO:Uploading results into container
2025-04-06 17:31:23,120:INFO:Uploading model into container now
2025-04-06 17:31:23,121:INFO:_master_model_container: 11
2025-04-06 17:31:23,121:INFO:_display_container: 3
2025-04-06 17:31:23,121:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:31:23,121:INFO:create_model() successfully completed......................................
2025-04-06 17:31:23,229:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:23,229:INFO:choose_better activated
2025-04-06 17:31:23,232:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:23,232:INFO:Initializing create_model()
2025-04-06 17:31:23,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:23,232:INFO:Checking exceptions
2025-04-06 17:31:23,233:INFO:Importing libraries
2025-04-06 17:31:23,233:INFO:Copying training dataset
2025-04-06 17:31:23,235:INFO:Defining folds
2025-04-06 17:31:23,235:INFO:Declaring metric variables
2025-04-06 17:31:23,235:INFO:Importing untrained model
2025-04-06 17:31:23,235:INFO:Declaring custom model
2025-04-06 17:31:23,235:INFO:Logistic Regression Imported successfully
2025-04-06 17:31:23,236:INFO:Starting cross validation
2025-04-06 17:31:23,236:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:23,266:INFO:Calculating mean and std
2025-04-06 17:31:23,266:INFO:Creating metrics dataframe
2025-04-06 17:31:23,267:INFO:Finalizing model
2025-04-06 17:31:23,272:INFO:Uploading results into container
2025-04-06 17:31:23,272:INFO:Uploading model into container now
2025-04-06 17:31:23,272:INFO:_master_model_container: 12
2025-04-06 17:31:23,272:INFO:_display_container: 4
2025-04-06 17:31:23,272:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:31:23,272:INFO:create_model() successfully completed......................................
2025-04-06 17:31:23,371:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:23,372:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4633
2025-04-06 17:31:23,372:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4636
2025-04-06 17:31:23,372:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-04-06 17:31:23,372:INFO:choose_better completed
2025-04-06 17:31:23,376:INFO:_master_model_container: 12
2025-04-06 17:31:23,376:INFO:_display_container: 3
2025-04-06 17:31:23,377:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:31:23,377:INFO:tune_model() successfully completed......................................
2025-04-06 17:31:23,480:INFO:Initializing tune_model()
2025-04-06 17:31:23,480:INFO:tune_model(estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'alpha': [1], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>)
2025-04-06 17:31:23,480:INFO:Checking exceptions
2025-04-06 17:31:23,488:INFO:Copying training dataset
2025-04-06 17:31:23,490:INFO:Checking base model
2025-04-06 17:31:23,490:INFO:Base model : Ridge Classifier
2025-04-06 17:31:23,492:INFO:Declaring metric variables
2025-04-06 17:31:23,493:INFO:Defining Hyperparameters
2025-04-06 17:31:23,602:INFO:custom_grid: {'actual_estimator__alpha': [1], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:31:23,602:INFO:Tuning with n_jobs=-1
2025-04-06 17:31:23,602:INFO:Initializing GridSearchCV
2025-04-06 17:31:23,624:INFO:best_params: {'actual_estimator__alpha': 1, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:31:23,624:INFO:Hyperparameter search completed
2025-04-06 17:31:23,624:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:23,625:INFO:Initializing create_model()
2025-04-06 17:31:23,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEF41730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'alpha': 1, 'solver': 'lsqr'})
2025-04-06 17:31:23,625:INFO:Checking exceptions
2025-04-06 17:31:23,625:INFO:Importing libraries
2025-04-06 17:31:23,625:INFO:Copying training dataset
2025-04-06 17:31:23,626:INFO:Defining folds
2025-04-06 17:31:23,627:INFO:Declaring metric variables
2025-04-06 17:31:23,628:INFO:Importing untrained model
2025-04-06 17:31:23,629:INFO:Declaring custom model
2025-04-06 17:31:23,630:INFO:Ridge Classifier Imported successfully
2025-04-06 17:31:23,634:INFO:Starting cross validation
2025-04-06 17:31:23,634:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:23,655:INFO:Calculating mean and std
2025-04-06 17:31:23,656:INFO:Creating metrics dataframe
2025-04-06 17:31:23,659:INFO:Finalizing model
2025-04-06 17:31:23,666:INFO:Uploading results into container
2025-04-06 17:31:23,667:INFO:Uploading model into container now
2025-04-06 17:31:23,667:INFO:_master_model_container: 13
2025-04-06 17:31:23,667:INFO:_display_container: 4
2025-04-06 17:31:23,667:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001)
2025-04-06 17:31:23,667:INFO:create_model() successfully completed......................................
2025-04-06 17:31:23,774:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:23,774:INFO:choose_better activated
2025-04-06 17:31:23,776:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:23,776:INFO:Initializing create_model()
2025-04-06 17:31:23,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:23,776:INFO:Checking exceptions
2025-04-06 17:31:23,777:INFO:Importing libraries
2025-04-06 17:31:23,777:INFO:Copying training dataset
2025-04-06 17:31:23,779:INFO:Defining folds
2025-04-06 17:31:23,779:INFO:Declaring metric variables
2025-04-06 17:31:23,779:INFO:Importing untrained model
2025-04-06 17:31:23,779:INFO:Declaring custom model
2025-04-06 17:31:23,779:INFO:Ridge Classifier Imported successfully
2025-04-06 17:31:23,779:INFO:Starting cross validation
2025-04-06 17:31:23,780:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:23,812:INFO:Calculating mean and std
2025-04-06 17:31:23,812:INFO:Creating metrics dataframe
2025-04-06 17:31:23,813:INFO:Finalizing model
2025-04-06 17:31:23,818:INFO:Uploading results into container
2025-04-06 17:31:23,818:INFO:Uploading model into container now
2025-04-06 17:31:23,819:INFO:_master_model_container: 14
2025-04-06 17:31:23,819:INFO:_display_container: 5
2025-04-06 17:31:23,819:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:31:23,819:INFO:create_model() successfully completed......................................
2025-04-06 17:31:23,919:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:23,920:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:31:23,920:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:31:23,920:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) is best model
2025-04-06 17:31:23,920:INFO:choose_better completed
2025-04-06 17:31:23,920:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:31:23,924:INFO:_master_model_container: 14
2025-04-06 17:31:23,925:INFO:_display_container: 4
2025-04-06 17:31:23,925:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:31:23,925:INFO:tune_model() successfully completed......................................
2025-04-06 17:31:24,026:INFO:Initializing tune_model()
2025-04-06 17:31:24,026:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'shrinkage': [0.0], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>)
2025-04-06 17:31:24,026:INFO:Checking exceptions
2025-04-06 17:31:24,034:INFO:Copying training dataset
2025-04-06 17:31:24,036:INFO:Checking base model
2025-04-06 17:31:24,036:INFO:Base model : Linear Discriminant Analysis
2025-04-06 17:31:24,037:INFO:Declaring metric variables
2025-04-06 17:31:24,039:INFO:Defining Hyperparameters
2025-04-06 17:31:24,159:INFO:custom_grid: {'actual_estimator__shrinkage': [0.0], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:31:24,159:INFO:Tuning with n_jobs=-1
2025-04-06 17:31:24,159:INFO:Initializing GridSearchCV
2025-04-06 17:31:24,177:INFO:best_params: {'actual_estimator__shrinkage': 0.0, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:31:24,177:INFO:Hyperparameter search completed
2025-04-06 17:31:24,177:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:24,177:INFO:Initializing create_model()
2025-04-06 17:31:24,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEFA2760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'shrinkage': 0.0, 'solver': 'lsqr'})
2025-04-06 17:31:24,178:INFO:Checking exceptions
2025-04-06 17:31:24,178:INFO:Importing libraries
2025-04-06 17:31:24,178:INFO:Copying training dataset
2025-04-06 17:31:24,179:INFO:Defining folds
2025-04-06 17:31:24,179:INFO:Declaring metric variables
2025-04-06 17:31:24,181:INFO:Importing untrained model
2025-04-06 17:31:24,181:INFO:Declaring custom model
2025-04-06 17:31:24,183:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:31:24,186:INFO:Starting cross validation
2025-04-06 17:31:24,186:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:24,208:INFO:Calculating mean and std
2025-04-06 17:31:24,208:INFO:Creating metrics dataframe
2025-04-06 17:31:24,211:INFO:Finalizing model
2025-04-06 17:31:24,218:INFO:Uploading results into container
2025-04-06 17:31:24,219:INFO:Uploading model into container now
2025-04-06 17:31:24,219:INFO:_master_model_container: 15
2025-04-06 17:31:24,219:INFO:_display_container: 5
2025-04-06 17:31:24,219:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:31:24,219:INFO:create_model() successfully completed......................................
2025-04-06 17:31:24,326:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:24,326:INFO:choose_better activated
2025-04-06 17:31:24,328:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:24,328:INFO:Initializing create_model()
2025-04-06 17:31:24,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:24,329:INFO:Checking exceptions
2025-04-06 17:31:24,330:INFO:Importing libraries
2025-04-06 17:31:24,330:INFO:Copying training dataset
2025-04-06 17:31:24,331:INFO:Defining folds
2025-04-06 17:31:24,332:INFO:Declaring metric variables
2025-04-06 17:31:24,332:INFO:Importing untrained model
2025-04-06 17:31:24,332:INFO:Declaring custom model
2025-04-06 17:31:24,332:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:31:24,332:INFO:Starting cross validation
2025-04-06 17:31:24,332:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:24,365:INFO:Calculating mean and std
2025-04-06 17:31:24,365:INFO:Creating metrics dataframe
2025-04-06 17:31:24,366:INFO:Finalizing model
2025-04-06 17:31:24,371:INFO:Uploading results into container
2025-04-06 17:31:24,371:INFO:Uploading model into container now
2025-04-06 17:31:24,371:INFO:_master_model_container: 16
2025-04-06 17:31:24,371:INFO:_display_container: 6
2025-04-06 17:31:24,372:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:31:24,372:INFO:create_model() successfully completed......................................
2025-04-06 17:31:24,474:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:24,474:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:31:24,475:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:31:24,475:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2025-04-06 17:31:24,475:INFO:choose_better completed
2025-04-06 17:31:24,475:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:31:24,479:INFO:_master_model_container: 16
2025-04-06 17:31:24,479:INFO:_display_container: 5
2025-04-06 17:31:24,480:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:31:24,480:INFO:tune_model() successfully completed......................................
2025-04-06 17:31:24,579:INFO:Initializing tune_model()
2025-04-06 17:31:24,579:INFO:tune_model(estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=4, round=4, n_iter=25, custom_grid={'probability': [True], 'C': [1.0], 'kernel': ['linear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>)
2025-04-06 17:31:24,580:INFO:Checking exceptions
2025-04-06 17:31:24,588:INFO:Copying training dataset
2025-04-06 17:31:24,589:INFO:Checking base model
2025-04-06 17:31:24,589:INFO:Base model : SVM - Radial Kernel
2025-04-06 17:31:24,591:INFO:Declaring metric variables
2025-04-06 17:31:24,592:INFO:Defining Hyperparameters
2025-04-06 17:31:24,701:INFO:custom_grid: {'actual_estimator__probability': [True], 'actual_estimator__C': [1.0], 'actual_estimator__kernel': ['linear']}
2025-04-06 17:31:24,701:INFO:Tuning with n_jobs=-1
2025-04-06 17:31:24,701:INFO:Initializing GridSearchCV
2025-04-06 17:31:24,727:INFO:best_params: {'actual_estimator__C': 1.0, 'actual_estimator__kernel': 'linear', 'actual_estimator__probability': True}
2025-04-06 17:31:24,727:INFO:Hyperparameter search completed
2025-04-06 17:31:24,727:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:24,728:INFO:Initializing create_model()
2025-04-06 17:31:24,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEF41940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1.0, 'kernel': 'linear', 'probability': True})
2025-04-06 17:31:24,728:INFO:Checking exceptions
2025-04-06 17:31:24,728:INFO:Importing libraries
2025-04-06 17:31:24,728:INFO:Copying training dataset
2025-04-06 17:31:24,729:INFO:Defining folds
2025-04-06 17:31:24,729:INFO:Declaring metric variables
2025-04-06 17:31:24,732:INFO:Importing untrained model
2025-04-06 17:31:24,732:INFO:Declaring custom model
2025-04-06 17:31:24,733:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:31:24,737:INFO:Starting cross validation
2025-04-06 17:31:24,737:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:24,774:INFO:Calculating mean and std
2025-04-06 17:31:24,774:INFO:Creating metrics dataframe
2025-04-06 17:31:24,777:INFO:Finalizing model
2025-04-06 17:31:24,788:INFO:Uploading results into container
2025-04-06 17:31:24,788:INFO:Uploading model into container now
2025-04-06 17:31:24,788:INFO:_master_model_container: 17
2025-04-06 17:31:24,788:INFO:_display_container: 6
2025-04-06 17:31:24,789:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:31:24,789:INFO:create_model() successfully completed......................................
2025-04-06 17:31:24,893:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:24,893:INFO:choose_better activated
2025-04-06 17:31:24,895:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:24,895:INFO:Initializing create_model()
2025-04-06 17:31:24,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:24,895:INFO:Checking exceptions
2025-04-06 17:31:24,896:INFO:Importing libraries
2025-04-06 17:31:24,896:INFO:Copying training dataset
2025-04-06 17:31:24,898:INFO:Defining folds
2025-04-06 17:31:24,898:INFO:Declaring metric variables
2025-04-06 17:31:24,898:INFO:Importing untrained model
2025-04-06 17:31:24,898:INFO:Declaring custom model
2025-04-06 17:31:24,898:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:31:24,898:INFO:Starting cross validation
2025-04-06 17:31:24,899:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:24,931:INFO:Calculating mean and std
2025-04-06 17:31:24,931:INFO:Creating metrics dataframe
2025-04-06 17:31:24,932:INFO:Finalizing model
2025-04-06 17:31:24,942:INFO:Uploading results into container
2025-04-06 17:31:24,942:INFO:Uploading model into container now
2025-04-06 17:31:24,942:INFO:_master_model_container: 18
2025-04-06 17:31:24,942:INFO:_display_container: 7
2025-04-06 17:31:24,942:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:31:24,942:INFO:create_model() successfully completed......................................
2025-04-06 17:31:25,045:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:25,045:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:31:25,045:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:31:25,045:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) is best model
2025-04-06 17:31:25,045:INFO:choose_better completed
2025-04-06 17:31:25,046:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:31:25,050:INFO:_master_model_container: 18
2025-04-06 17:31:25,050:INFO:_display_container: 6
2025-04-06 17:31:25,051:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:31:25,051:INFO:tune_model() successfully completed......................................
2025-04-06 17:31:25,154:INFO:Initializing tune_model()
2025-04-06 17:31:25,155:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>)
2025-04-06 17:31:25,155:INFO:Checking exceptions
2025-04-06 17:31:25,155:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:31:25,163:INFO:Copying training dataset
2025-04-06 17:31:25,165:INFO:Checking base model
2025-04-06 17:31:25,165:INFO:Base model : Random Forest Classifier
2025-04-06 17:31:25,167:INFO:Declaring metric variables
2025-04-06 17:31:25,169:INFO:Defining Hyperparameters
2025-04-06 17:31:25,289:INFO:Tuning with n_jobs=-1
2025-04-06 17:31:25,292:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:31:39,386:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', True), ('actual_estimator__class_weight', None), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 11), ('actual_estimator__max_features', 0.8300057969327517), ('actual_estimator__min_impurity_decrease', 3.341748754047965e-07), ('actual_estimator__min_samples_leaf', 4), ('actual_estimator__min_samples_split', 3), ('actual_estimator__n_estimators', 257)])
2025-04-06 17:31:39,387:INFO:Hyperparameter search completed
2025-04-06 17:31:39,387:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:39,387:INFO:Initializing create_model()
2025-04-06 17:31:39,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEECFC4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': True, 'class_weight': None, 'criterion': 'entropy', 'max_depth': 11, 'max_features': 0.8300057969327517, 'min_impurity_decrease': 3.341748754047965e-07, 'min_samples_leaf': 4, 'min_samples_split': 3, 'n_estimators': 257})
2025-04-06 17:31:39,387:INFO:Checking exceptions
2025-04-06 17:31:39,387:INFO:Importing libraries
2025-04-06 17:31:39,387:INFO:Copying training dataset
2025-04-06 17:31:39,389:INFO:Defining folds
2025-04-06 17:31:39,390:INFO:Declaring metric variables
2025-04-06 17:31:39,391:INFO:Importing untrained model
2025-04-06 17:31:39,391:INFO:Declaring custom model
2025-04-06 17:31:39,393:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:31:39,396:INFO:Starting cross validation
2025-04-06 17:31:39,396:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:39,665:INFO:Calculating mean and std
2025-04-06 17:31:39,665:INFO:Creating metrics dataframe
2025-04-06 17:31:39,668:INFO:Finalizing model
2025-04-06 17:31:39,856:INFO:Uploading results into container
2025-04-06 17:31:39,856:INFO:Uploading model into container now
2025-04-06 17:31:39,857:INFO:_master_model_container: 19
2025-04-06 17:31:39,857:INFO:_display_container: 7
2025-04-06 17:31:39,857:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:31:39,857:INFO:create_model() successfully completed......................................
2025-04-06 17:31:39,962:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:39,962:INFO:choose_better activated
2025-04-06 17:31:39,964:INFO:SubProcess create_model() called ==================================
2025-04-06 17:31:39,965:INFO:Initializing create_model()
2025-04-06 17:31:39,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:39,965:INFO:Checking exceptions
2025-04-06 17:31:39,966:INFO:Importing libraries
2025-04-06 17:31:39,966:INFO:Copying training dataset
2025-04-06 17:31:39,968:INFO:Defining folds
2025-04-06 17:31:39,968:INFO:Declaring metric variables
2025-04-06 17:31:39,968:INFO:Importing untrained model
2025-04-06 17:31:39,968:INFO:Declaring custom model
2025-04-06 17:31:39,968:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:31:39,968:INFO:Starting cross validation
2025-04-06 17:31:39,968:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:31:40,152:INFO:Calculating mean and std
2025-04-06 17:31:40,152:INFO:Creating metrics dataframe
2025-04-06 17:31:40,153:INFO:Finalizing model
2025-04-06 17:31:40,231:INFO:Uploading results into container
2025-04-06 17:31:40,231:INFO:Uploading model into container now
2025-04-06 17:31:40,231:INFO:_master_model_container: 20
2025-04-06 17:31:40,231:INFO:_display_container: 8
2025-04-06 17:31:40,232:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:31:40,232:INFO:create_model() successfully completed......................................
2025-04-06 17:31:40,332:INFO:SubProcess create_model() end ==================================
2025-04-06 17:31:40,332:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for AUC is 0.5485
2025-04-06 17:31:40,333:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for AUC is 0.5656
2025-04-06 17:31:40,333:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2025-04-06 17:31:40,333:INFO:choose_better completed
2025-04-06 17:31:40,337:INFO:_master_model_container: 20
2025-04-06 17:31:40,337:INFO:_display_container: 7
2025-04-06 17:31:40,338:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:31:40,338:INFO:tune_model() successfully completed......................................
2025-04-06 17:31:40,443:INFO:Initializing finalize_model()
2025-04-06 17:31:40,443:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:31:40,443:INFO:Finalizing LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:31:40,444:INFO:Initializing create_model()
2025-04-06 17:31:40,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:40,444:INFO:Checking exceptions
2025-04-06 17:31:40,445:INFO:Importing libraries
2025-04-06 17:31:40,445:INFO:Copying training dataset
2025-04-06 17:31:40,445:INFO:Defining folds
2025-04-06 17:31:40,445:INFO:Declaring metric variables
2025-04-06 17:31:40,445:INFO:Importing untrained model
2025-04-06 17:31:40,445:INFO:Declaring custom model
2025-04-06 17:31:40,445:INFO:Logistic Regression Imported successfully
2025-04-06 17:31:40,446:INFO:Cross validation set to False
2025-04-06 17:31:40,446:INFO:Fitting Model
2025-04-06 17:31:40,452:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:31:40,452:INFO:create_model() successfully completed......................................
2025-04-06 17:31:40,552:INFO:_master_model_container: 20
2025-04-06 17:31:40,552:INFO:_display_container: 7
2025-04-06 17:31:40,554:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:31:40,554:INFO:finalize_model() successfully completed......................................
2025-04-06 17:31:40,651:INFO:Initializing finalize_model()
2025-04-06 17:31:40,651:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:31:40,651:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:31:40,653:INFO:Initializing create_model()
2025-04-06 17:31:40,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:40,653:INFO:Checking exceptions
2025-04-06 17:31:40,653:INFO:Importing libraries
2025-04-06 17:31:40,654:INFO:Copying training dataset
2025-04-06 17:31:40,654:INFO:Defining folds
2025-04-06 17:31:40,654:INFO:Declaring metric variables
2025-04-06 17:31:40,654:INFO:Importing untrained model
2025-04-06 17:31:40,654:INFO:Declaring custom model
2025-04-06 17:31:40,654:INFO:Ridge Classifier Imported successfully
2025-04-06 17:31:40,654:INFO:Cross validation set to False
2025-04-06 17:31:40,654:INFO:Fitting Model
2025-04-06 17:31:40,660:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:31:40,660:INFO:create_model() successfully completed......................................
2025-04-06 17:31:40,759:INFO:_master_model_container: 20
2025-04-06 17:31:40,759:INFO:_display_container: 7
2025-04-06 17:31:40,761:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:31:40,761:INFO:finalize_model() successfully completed......................................
2025-04-06 17:31:40,859:INFO:Initializing finalize_model()
2025-04-06 17:31:40,859:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:31:40,859:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:31:40,861:INFO:Initializing create_model()
2025-04-06 17:31:40,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:40,861:INFO:Checking exceptions
2025-04-06 17:31:40,861:INFO:Importing libraries
2025-04-06 17:31:40,861:INFO:Copying training dataset
2025-04-06 17:31:40,862:INFO:Defining folds
2025-04-06 17:31:40,862:INFO:Declaring metric variables
2025-04-06 17:31:40,862:INFO:Importing untrained model
2025-04-06 17:31:40,862:INFO:Declaring custom model
2025-04-06 17:31:40,862:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:31:40,862:INFO:Cross validation set to False
2025-04-06 17:31:40,862:INFO:Fitting Model
2025-04-06 17:31:40,868:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:31:40,868:INFO:create_model() successfully completed......................................
2025-04-06 17:31:40,972:INFO:_master_model_container: 20
2025-04-06 17:31:40,972:INFO:_display_container: 7
2025-04-06 17:31:40,975:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:31:40,975:INFO:finalize_model() successfully completed......................................
2025-04-06 17:31:41,082:INFO:Initializing finalize_model()
2025-04-06 17:31:41,082:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:31:41,082:INFO:Finalizing SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:31:41,083:INFO:Initializing create_model()
2025-04-06 17:31:41,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:41,084:INFO:Checking exceptions
2025-04-06 17:31:41,085:INFO:Importing libraries
2025-04-06 17:31:41,085:INFO:Copying training dataset
2025-04-06 17:31:41,085:INFO:Defining folds
2025-04-06 17:31:41,085:INFO:Declaring metric variables
2025-04-06 17:31:41,085:INFO:Importing untrained model
2025-04-06 17:31:41,085:INFO:Declaring custom model
2025-04-06 17:31:41,085:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:31:41,086:INFO:Cross validation set to False
2025-04-06 17:31:41,086:INFO:Fitting Model
2025-04-06 17:31:41,097:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:31:41,097:INFO:create_model() successfully completed......................................
2025-04-06 17:31:41,196:INFO:_master_model_container: 20
2025-04-06 17:31:41,196:INFO:_display_container: 7
2025-04-06 17:31:41,198:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:31:41,198:INFO:finalize_model() successfully completed......................................
2025-04-06 17:31:41,299:INFO:Initializing finalize_model()
2025-04-06 17:31:41,299:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:31:41,299:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:31:41,301:INFO:Initializing create_model()
2025-04-06 17:31:41,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFEBB06820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:31:41,301:INFO:Checking exceptions
2025-04-06 17:31:41,302:INFO:Importing libraries
2025-04-06 17:31:41,302:INFO:Copying training dataset
2025-04-06 17:31:41,302:INFO:Defining folds
2025-04-06 17:31:41,302:INFO:Declaring metric variables
2025-04-06 17:31:41,302:INFO:Importing untrained model
2025-04-06 17:31:41,302:INFO:Declaring custom model
2025-04-06 17:31:41,302:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:31:41,303:INFO:Cross validation set to False
2025-04-06 17:31:41,303:INFO:Fitting Model
2025-04-06 17:31:41,484:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:31:41,484:INFO:create_model() successfully completed......................................
2025-04-06 17:31:41,584:INFO:_master_model_container: 20
2025-04-06 17:31:41,584:INFO:_display_container: 7
2025-04-06 17:31:41,586:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:31:41,586:INFO:finalize_model() successfully completed......................................
2025-04-06 17:31:41,694:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\arch\bootstrap\base.py:402: FutureWarning:

random_state is deprecated and will be removed in a future version. The default random number generator is changing to a NumPy Generator. To continue using RandomState, please directly pass a RandomState instance using the ``generator`` keyword argument.


2025-04-06 17:31:41,797:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:41,916:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:42,014:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:43,316:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:43,430:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:43,527:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:46,406:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:47,920:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:48,027:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:48,125:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:31:49,490:INFO:PyCaret ClassificationExperiment
2025-04-06 17:31:49,490:INFO:Logging name: clf-default-name
2025-04-06 17:31:49,490:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:31:49,490:INFO:version 3.3.2
2025-04-06 17:31:49,490:INFO:Initializing setup()
2025-04-06 17:31:49,490:INFO:self.USI: 0ee3
2025-04-06 17:31:49,490:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:31:49,490:INFO:Checking environment
2025-04-06 17:31:49,490:INFO:python_version: 3.9.21
2025-04-06 17:31:49,490:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:31:49,490:INFO:machine: AMD64
2025-04-06 17:31:49,490:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:31:49,501:INFO:Memory: svmem(total=137112563712, available=97870614528, percent=28.6, used=39241949184, free=97870614528)
2025-04-06 17:31:49,501:INFO:Physical Core: 24
2025-04-06 17:31:49,501:INFO:Logical Core: 32
2025-04-06 17:31:49,501:INFO:Checking libraries
2025-04-06 17:31:49,501:INFO:System:
2025-04-06 17:31:49,501:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:31:49,501:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:31:49,501:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:31:49,501:INFO:PyCaret required dependencies:
2025-04-06 17:31:49,501:INFO:                 pip: 25.0
2025-04-06 17:31:49,501:INFO:          setuptools: 72.1.0
2025-04-06 17:31:49,501:INFO:             pycaret: 3.3.2
2025-04-06 17:31:49,501:INFO:             IPython: 8.18.1
2025-04-06 17:31:49,501:INFO:          ipywidgets: 8.1.5
2025-04-06 17:31:49,501:INFO:                tqdm: 4.67.1
2025-04-06 17:31:49,502:INFO:               numpy: 1.26.4
2025-04-06 17:31:49,502:INFO:              pandas: 2.1.4
2025-04-06 17:31:49,502:INFO:              jinja2: 3.1.6
2025-04-06 17:31:49,502:INFO:               scipy: 1.11.4
2025-04-06 17:31:49,502:INFO:              joblib: 1.3.2
2025-04-06 17:31:49,502:INFO:             sklearn: 1.4.2
2025-04-06 17:31:49,502:INFO:                pyod: 2.0.4
2025-04-06 17:31:49,502:INFO:            imblearn: 0.12.4
2025-04-06 17:31:49,502:INFO:   category_encoders: 2.6.4
2025-04-06 17:31:49,502:INFO:            lightgbm: 4.6.0
2025-04-06 17:31:49,502:INFO:               numba: 0.60.0
2025-04-06 17:31:49,502:INFO:            requests: 2.32.3
2025-04-06 17:31:49,502:INFO:          matplotlib: 3.7.5
2025-04-06 17:31:49,502:INFO:          scikitplot: 0.3.7
2025-04-06 17:31:49,502:INFO:         yellowbrick: 1.5
2025-04-06 17:31:49,502:INFO:              plotly: 5.24.1
2025-04-06 17:31:49,502:INFO:    plotly-resampler: Not installed
2025-04-06 17:31:49,502:INFO:             kaleido: 0.2.1
2025-04-06 17:31:49,502:INFO:           schemdraw: 0.15
2025-04-06 17:31:49,502:INFO:         statsmodels: 0.14.4
2025-04-06 17:31:49,502:INFO:              sktime: 0.26.0
2025-04-06 17:31:49,502:INFO:               tbats: 1.1.3
2025-04-06 17:31:49,502:INFO:            pmdarima: 2.0.4
2025-04-06 17:31:49,502:INFO:              psutil: 7.0.0
2025-04-06 17:31:49,502:INFO:          markupsafe: 3.0.2
2025-04-06 17:31:49,502:INFO:             pickle5: Not installed
2025-04-06 17:31:49,502:INFO:         cloudpickle: 3.1.1
2025-04-06 17:31:49,502:INFO:         deprecation: 2.1.0
2025-04-06 17:31:49,502:INFO:              xxhash: 3.5.0
2025-04-06 17:31:49,502:INFO:           wurlitzer: Not installed
2025-04-06 17:31:49,502:INFO:PyCaret optional dependencies:
2025-04-06 17:31:49,502:INFO:                shap: Not installed
2025-04-06 17:31:49,502:INFO:           interpret: Not installed
2025-04-06 17:31:49,502:INFO:                umap: Not installed
2025-04-06 17:31:49,502:INFO:     ydata_profiling: Not installed
2025-04-06 17:31:49,502:INFO:  explainerdashboard: Not installed
2025-04-06 17:31:49,502:INFO:             autoviz: Not installed
2025-04-06 17:31:49,502:INFO:           fairlearn: Not installed
2025-04-06 17:31:49,502:INFO:          deepchecks: Not installed
2025-04-06 17:31:49,502:INFO:             xgboost: Not installed
2025-04-06 17:31:49,502:INFO:            catboost: Not installed
2025-04-06 17:31:49,502:INFO:              kmodes: Not installed
2025-04-06 17:31:49,502:INFO:             mlxtend: Not installed
2025-04-06 17:31:49,502:INFO:       statsforecast: Not installed
2025-04-06 17:31:49,502:INFO:        tune_sklearn: Not installed
2025-04-06 17:31:49,502:INFO:                 ray: Not installed
2025-04-06 17:31:49,502:INFO:            hyperopt: 0.2.7
2025-04-06 17:31:49,502:INFO:              optuna: 4.2.1
2025-04-06 17:31:49,502:INFO:               skopt: 0.10.2
2025-04-06 17:31:49,502:INFO:              mlflow: Not installed
2025-04-06 17:31:49,502:INFO:              gradio: Not installed
2025-04-06 17:31:49,502:INFO:             fastapi: Not installed
2025-04-06 17:31:49,502:INFO:             uvicorn: Not installed
2025-04-06 17:31:49,502:INFO:              m2cgen: Not installed
2025-04-06 17:31:49,502:INFO:           evidently: Not installed
2025-04-06 17:31:49,502:INFO:               fugue: Not installed
2025-04-06 17:31:49,502:INFO:           streamlit: Not installed
2025-04-06 17:31:49,502:INFO:             prophet: Not installed
2025-04-06 17:31:49,502:INFO:None
2025-04-06 17:31:49,502:INFO:Set up data.
2025-04-06 17:31:49,504:INFO:Set up folding strategy.
2025-04-06 17:31:49,504:INFO:Set up train/test split.
2025-04-06 17:33:35,584:INFO:PyCaret ClassificationExperiment
2025-04-06 17:33:35,584:INFO:Logging name: clf-default-name
2025-04-06 17:33:35,584:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:33:35,584:INFO:version 3.3.2
2025-04-06 17:33:35,584:INFO:Initializing setup()
2025-04-06 17:33:35,584:INFO:self.USI: bb8c
2025-04-06 17:33:35,584:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:33:35,584:INFO:Checking environment
2025-04-06 17:33:35,584:INFO:python_version: 3.9.21
2025-04-06 17:33:35,584:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:33:35,584:INFO:machine: AMD64
2025-04-06 17:33:35,584:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:33:35,590:INFO:Memory: svmem(total=137112563712, available=97869074432, percent=28.6, used=39243489280, free=97869074432)
2025-04-06 17:33:35,591:INFO:Physical Core: 24
2025-04-06 17:33:35,591:INFO:Logical Core: 32
2025-04-06 17:33:35,591:INFO:Checking libraries
2025-04-06 17:33:35,591:INFO:System:
2025-04-06 17:33:35,591:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:33:35,591:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:33:35,591:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:33:35,591:INFO:PyCaret required dependencies:
2025-04-06 17:33:35,591:INFO:                 pip: 25.0
2025-04-06 17:33:35,591:INFO:          setuptools: 72.1.0
2025-04-06 17:33:35,591:INFO:             pycaret: 3.3.2
2025-04-06 17:33:35,591:INFO:             IPython: 8.18.1
2025-04-06 17:33:35,591:INFO:          ipywidgets: 8.1.5
2025-04-06 17:33:35,591:INFO:                tqdm: 4.67.1
2025-04-06 17:33:35,591:INFO:               numpy: 1.26.4
2025-04-06 17:33:35,591:INFO:              pandas: 2.1.4
2025-04-06 17:33:35,591:INFO:              jinja2: 3.1.6
2025-04-06 17:33:35,591:INFO:               scipy: 1.11.4
2025-04-06 17:33:35,591:INFO:              joblib: 1.3.2
2025-04-06 17:33:35,591:INFO:             sklearn: 1.4.2
2025-04-06 17:33:35,591:INFO:                pyod: 2.0.4
2025-04-06 17:33:35,591:INFO:            imblearn: 0.12.4
2025-04-06 17:33:35,591:INFO:   category_encoders: 2.6.4
2025-04-06 17:33:35,591:INFO:            lightgbm: 4.6.0
2025-04-06 17:33:35,591:INFO:               numba: 0.60.0
2025-04-06 17:33:35,591:INFO:            requests: 2.32.3
2025-04-06 17:33:35,591:INFO:          matplotlib: 3.7.5
2025-04-06 17:33:35,591:INFO:          scikitplot: 0.3.7
2025-04-06 17:33:35,591:INFO:         yellowbrick: 1.5
2025-04-06 17:33:35,591:INFO:              plotly: 5.24.1
2025-04-06 17:33:35,591:INFO:    plotly-resampler: Not installed
2025-04-06 17:33:35,591:INFO:             kaleido: 0.2.1
2025-04-06 17:33:35,591:INFO:           schemdraw: 0.15
2025-04-06 17:33:35,591:INFO:         statsmodels: 0.14.4
2025-04-06 17:33:35,591:INFO:              sktime: 0.26.0
2025-04-06 17:33:35,591:INFO:               tbats: 1.1.3
2025-04-06 17:33:35,591:INFO:            pmdarima: 2.0.4
2025-04-06 17:33:35,591:INFO:              psutil: 7.0.0
2025-04-06 17:33:35,591:INFO:          markupsafe: 3.0.2
2025-04-06 17:33:35,591:INFO:             pickle5: Not installed
2025-04-06 17:33:35,591:INFO:         cloudpickle: 3.1.1
2025-04-06 17:33:35,591:INFO:         deprecation: 2.1.0
2025-04-06 17:33:35,591:INFO:              xxhash: 3.5.0
2025-04-06 17:33:35,591:INFO:           wurlitzer: Not installed
2025-04-06 17:33:35,591:INFO:PyCaret optional dependencies:
2025-04-06 17:33:35,591:INFO:                shap: Not installed
2025-04-06 17:33:35,591:INFO:           interpret: Not installed
2025-04-06 17:33:35,591:INFO:                umap: Not installed
2025-04-06 17:33:35,591:INFO:     ydata_profiling: Not installed
2025-04-06 17:33:35,591:INFO:  explainerdashboard: Not installed
2025-04-06 17:33:35,591:INFO:             autoviz: Not installed
2025-04-06 17:33:35,591:INFO:           fairlearn: Not installed
2025-04-06 17:33:35,591:INFO:          deepchecks: Not installed
2025-04-06 17:33:35,591:INFO:             xgboost: Not installed
2025-04-06 17:33:35,591:INFO:            catboost: Not installed
2025-04-06 17:33:35,591:INFO:              kmodes: Not installed
2025-04-06 17:33:35,591:INFO:             mlxtend: Not installed
2025-04-06 17:33:35,591:INFO:       statsforecast: Not installed
2025-04-06 17:33:35,591:INFO:        tune_sklearn: Not installed
2025-04-06 17:33:35,591:INFO:                 ray: Not installed
2025-04-06 17:33:35,591:INFO:            hyperopt: 0.2.7
2025-04-06 17:33:35,591:INFO:              optuna: 4.2.1
2025-04-06 17:33:35,591:INFO:               skopt: 0.10.2
2025-04-06 17:33:35,592:INFO:              mlflow: Not installed
2025-04-06 17:33:35,592:INFO:              gradio: Not installed
2025-04-06 17:33:35,592:INFO:             fastapi: Not installed
2025-04-06 17:33:35,592:INFO:             uvicorn: Not installed
2025-04-06 17:33:35,592:INFO:              m2cgen: Not installed
2025-04-06 17:33:35,592:INFO:           evidently: Not installed
2025-04-06 17:33:35,592:INFO:               fugue: Not installed
2025-04-06 17:33:35,592:INFO:           streamlit: Not installed
2025-04-06 17:33:35,592:INFO:             prophet: Not installed
2025-04-06 17:33:35,592:INFO:None
2025-04-06 17:33:35,592:INFO:Set up data.
2025-04-06 17:33:35,593:INFO:Set up folding strategy.
2025-04-06 17:33:35,593:INFO:Set up train/test split.
2025-04-06 17:33:35,595:INFO:Set up index.
2025-04-06 17:33:35,595:INFO:Assigning column types.
2025-04-06 17:33:35,596:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-06 17:33:35,617:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:33:35,617:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:33:35,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:33:35,653:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:33:35,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-06 17:33:35,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:33:35,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:33:35,733:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,734:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-06 17:33:35,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,805:INFO:Preparing preprocessing pipeline...
2025-04-06 17:33:35,805:INFO:Set up simple imputation.
2025-04-06 17:33:35,805:INFO:Set up feature normalization.
2025-04-06 17:33:35,817:INFO:Finished creating preprocessing pipeline.
2025-04-06 17:33:35,819:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-04-06 17:33:35,819:INFO:Creating final display dataframe.
2025-04-06 17:33:35,854:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Direction
2                   Target type            Binary
3           Original data shape          (358, 5)
4        Transformed data shape          (358, 5)
5   Transformed train set shape          (354, 5)
6    Transformed test set shape            (4, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              bb8c
2025-04-06 17:33:35,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,924:INFO:setup() successfully completed in 0.34s...............
2025-04-06 17:33:35,925:INFO:gpu_param set to False
2025-04-06 17:33:35,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:35,992:INFO:gpu_param set to False
2025-04-06 17:33:36,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:36,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:36,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:36,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:33:36,059:INFO:Initializing compare_models()
2025-04-06 17:33:36,059:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, include=['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, 'include': ['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-06 17:33:36,059:INFO:Checking exceptions
2025-04-06 17:33:36,061:INFO:Preparing display monitor
2025-04-06 17:33:36,071:INFO:Initializing Gradient Boosting Classifier
2025-04-06 17:33:36,071:INFO:Total runtime is 0.0 minutes
2025-04-06 17:33:36,073:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:36,073:INFO:Initializing create_model()
2025-04-06 17:33:36,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:36,073:INFO:Checking exceptions
2025-04-06 17:33:36,073:INFO:Importing libraries
2025-04-06 17:33:36,073:INFO:Copying training dataset
2025-04-06 17:33:36,075:INFO:Defining folds
2025-04-06 17:33:36,075:INFO:Declaring metric variables
2025-04-06 17:33:36,076:INFO:Importing untrained model
2025-04-06 17:33:36,078:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 17:33:36,081:INFO:Starting cross validation
2025-04-06 17:33:36,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:36,190:INFO:Calculating mean and std
2025-04-06 17:33:36,190:INFO:Creating metrics dataframe
2025-04-06 17:33:36,191:INFO:Uploading results into container
2025-04-06 17:33:36,191:INFO:Uploading model into container now
2025-04-06 17:33:36,192:INFO:_master_model_container: 1
2025-04-06 17:33:36,192:INFO:_display_container: 2
2025-04-06 17:33:36,192:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 17:33:36,192:INFO:create_model() successfully completed......................................
2025-04-06 17:33:36,312:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:36,312:INFO:Creating metrics dataframe
2025-04-06 17:33:36,315:INFO:Initializing Logistic Regression
2025-04-06 17:33:36,315:INFO:Total runtime is 0.00405884583791097 minutes
2025-04-06 17:33:36,317:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:36,317:INFO:Initializing create_model()
2025-04-06 17:33:36,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:36,318:INFO:Checking exceptions
2025-04-06 17:33:36,318:INFO:Importing libraries
2025-04-06 17:33:36,318:INFO:Copying training dataset
2025-04-06 17:33:36,319:INFO:Defining folds
2025-04-06 17:33:36,319:INFO:Declaring metric variables
2025-04-06 17:33:36,321:INFO:Importing untrained model
2025-04-06 17:33:36,323:INFO:Logistic Regression Imported successfully
2025-04-06 17:33:36,326:INFO:Starting cross validation
2025-04-06 17:33:36,326:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:36,361:INFO:Calculating mean and std
2025-04-06 17:33:36,361:INFO:Creating metrics dataframe
2025-04-06 17:33:36,362:INFO:Uploading results into container
2025-04-06 17:33:36,363:INFO:Uploading model into container now
2025-04-06 17:33:36,363:INFO:_master_model_container: 2
2025-04-06 17:33:36,363:INFO:_display_container: 2
2025-04-06 17:33:36,363:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:33:36,363:INFO:create_model() successfully completed......................................
2025-04-06 17:33:36,464:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:36,464:INFO:Creating metrics dataframe
2025-04-06 17:33:36,468:INFO:Initializing Extra Trees Classifier
2025-04-06 17:33:36,468:INFO:Total runtime is 0.006608835856119792 minutes
2025-04-06 17:33:36,470:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:36,470:INFO:Initializing create_model()
2025-04-06 17:33:36,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:36,470:INFO:Checking exceptions
2025-04-06 17:33:36,470:INFO:Importing libraries
2025-04-06 17:33:36,470:INFO:Copying training dataset
2025-04-06 17:33:36,472:INFO:Defining folds
2025-04-06 17:33:36,472:INFO:Declaring metric variables
2025-04-06 17:33:36,474:INFO:Importing untrained model
2025-04-06 17:33:36,476:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:33:36,479:INFO:Starting cross validation
2025-04-06 17:33:36,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:36,659:INFO:Calculating mean and std
2025-04-06 17:33:36,659:INFO:Creating metrics dataframe
2025-04-06 17:33:36,660:INFO:Uploading results into container
2025-04-06 17:33:36,661:INFO:Uploading model into container now
2025-04-06 17:33:36,661:INFO:_master_model_container: 3
2025-04-06 17:33:36,661:INFO:_display_container: 2
2025-04-06 17:33:36,661:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:33:36,661:INFO:create_model() successfully completed......................................
2025-04-06 17:33:36,763:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:36,764:INFO:Creating metrics dataframe
2025-04-06 17:33:36,767:INFO:Initializing Ridge Classifier
2025-04-06 17:33:36,768:INFO:Total runtime is 0.01160881519317627 minutes
2025-04-06 17:33:36,769:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:36,770:INFO:Initializing create_model()
2025-04-06 17:33:36,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:36,770:INFO:Checking exceptions
2025-04-06 17:33:36,770:INFO:Importing libraries
2025-04-06 17:33:36,770:INFO:Copying training dataset
2025-04-06 17:33:36,771:INFO:Defining folds
2025-04-06 17:33:36,771:INFO:Declaring metric variables
2025-04-06 17:33:36,773:INFO:Importing untrained model
2025-04-06 17:33:36,774:INFO:Ridge Classifier Imported successfully
2025-04-06 17:33:36,778:INFO:Starting cross validation
2025-04-06 17:33:36,778:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:36,815:INFO:Calculating mean and std
2025-04-06 17:33:36,815:INFO:Creating metrics dataframe
2025-04-06 17:33:36,816:INFO:Uploading results into container
2025-04-06 17:33:36,816:INFO:Uploading model into container now
2025-04-06 17:33:36,817:INFO:_master_model_container: 4
2025-04-06 17:33:36,817:INFO:_display_container: 2
2025-04-06 17:33:36,817:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:33:36,817:INFO:create_model() successfully completed......................................
2025-04-06 17:33:36,923:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:36,923:INFO:Creating metrics dataframe
2025-04-06 17:33:36,927:INFO:Initializing Quadratic Discriminant Analysis
2025-04-06 17:33:36,927:INFO:Total runtime is 0.014258813858032227 minutes
2025-04-06 17:33:36,929:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:36,929:INFO:Initializing create_model()
2025-04-06 17:33:36,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:36,930:INFO:Checking exceptions
2025-04-06 17:33:36,930:INFO:Importing libraries
2025-04-06 17:33:36,930:INFO:Copying training dataset
2025-04-06 17:33:36,931:INFO:Defining folds
2025-04-06 17:33:36,931:INFO:Declaring metric variables
2025-04-06 17:33:36,932:INFO:Importing untrained model
2025-04-06 17:33:36,934:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-06 17:33:36,938:INFO:Starting cross validation
2025-04-06 17:33:36,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:36,974:INFO:Calculating mean and std
2025-04-06 17:33:36,974:INFO:Creating metrics dataframe
2025-04-06 17:33:36,975:INFO:Uploading results into container
2025-04-06 17:33:36,975:INFO:Uploading model into container now
2025-04-06 17:33:36,975:INFO:_master_model_container: 5
2025-04-06 17:33:36,975:INFO:_display_container: 2
2025-04-06 17:33:36,976:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-06 17:33:36,976:INFO:create_model() successfully completed......................................
2025-04-06 17:33:37,084:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:37,084:INFO:Creating metrics dataframe
2025-04-06 17:33:37,088:INFO:Initializing Linear Discriminant Analysis
2025-04-06 17:33:37,088:INFO:Total runtime is 0.016942135492960614 minutes
2025-04-06 17:33:37,090:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:37,090:INFO:Initializing create_model()
2025-04-06 17:33:37,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:37,090:INFO:Checking exceptions
2025-04-06 17:33:37,090:INFO:Importing libraries
2025-04-06 17:33:37,090:INFO:Copying training dataset
2025-04-06 17:33:37,092:INFO:Defining folds
2025-04-06 17:33:37,092:INFO:Declaring metric variables
2025-04-06 17:33:37,094:INFO:Importing untrained model
2025-04-06 17:33:37,096:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:33:37,099:INFO:Starting cross validation
2025-04-06 17:33:37,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:37,132:INFO:Calculating mean and std
2025-04-06 17:33:37,132:INFO:Creating metrics dataframe
2025-04-06 17:33:37,133:INFO:Uploading results into container
2025-04-06 17:33:37,133:INFO:Uploading model into container now
2025-04-06 17:33:37,134:INFO:_master_model_container: 6
2025-04-06 17:33:37,134:INFO:_display_container: 2
2025-04-06 17:33:37,134:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:33:37,134:INFO:create_model() successfully completed......................................
2025-04-06 17:33:37,237:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:37,237:INFO:Creating metrics dataframe
2025-04-06 17:33:37,241:INFO:Initializing MLP Classifier
2025-04-06 17:33:37,241:INFO:Total runtime is 0.01950100660324097 minutes
2025-04-06 17:33:37,243:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:37,243:INFO:Initializing create_model()
2025-04-06 17:33:37,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:37,243:INFO:Checking exceptions
2025-04-06 17:33:37,244:INFO:Importing libraries
2025-04-06 17:33:37,244:INFO:Copying training dataset
2025-04-06 17:33:37,246:INFO:Defining folds
2025-04-06 17:33:37,246:INFO:Declaring metric variables
2025-04-06 17:33:37,247:INFO:Importing untrained model
2025-04-06 17:33:37,249:INFO:MLP Classifier Imported successfully
2025-04-06 17:33:37,252:INFO:Starting cross validation
2025-04-06 17:33:37,253:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:37,491:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,493:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,495:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,518:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,527:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,528:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,528:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,529:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,532:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,550:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:33:37,574:INFO:Calculating mean and std
2025-04-06 17:33:37,574:INFO:Creating metrics dataframe
2025-04-06 17:33:37,576:INFO:Uploading results into container
2025-04-06 17:33:37,576:INFO:Uploading model into container now
2025-04-06 17:33:37,577:INFO:_master_model_container: 7
2025-04-06 17:33:37,577:INFO:_display_container: 2
2025-04-06 17:33:37,577:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 17:33:37,577:INFO:create_model() successfully completed......................................
2025-04-06 17:33:37,684:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:37,684:INFO:Creating metrics dataframe
2025-04-06 17:33:37,689:INFO:Initializing Decision Tree Classifier
2025-04-06 17:33:37,689:INFO:Total runtime is 0.026967644691467285 minutes
2025-04-06 17:33:37,691:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:37,691:INFO:Initializing create_model()
2025-04-06 17:33:37,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:37,691:INFO:Checking exceptions
2025-04-06 17:33:37,691:INFO:Importing libraries
2025-04-06 17:33:37,691:INFO:Copying training dataset
2025-04-06 17:33:37,692:INFO:Defining folds
2025-04-06 17:33:37,692:INFO:Declaring metric variables
2025-04-06 17:33:37,694:INFO:Importing untrained model
2025-04-06 17:33:37,696:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:33:37,699:INFO:Starting cross validation
2025-04-06 17:33:37,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:37,747:INFO:Calculating mean and std
2025-04-06 17:33:37,747:INFO:Creating metrics dataframe
2025-04-06 17:33:37,748:INFO:Uploading results into container
2025-04-06 17:33:37,748:INFO:Uploading model into container now
2025-04-06 17:33:37,749:INFO:_master_model_container: 8
2025-04-06 17:33:37,749:INFO:_display_container: 2
2025-04-06 17:33:37,749:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:33:37,749:INFO:create_model() successfully completed......................................
2025-04-06 17:33:37,861:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:37,861:INFO:Creating metrics dataframe
2025-04-06 17:33:37,865:INFO:Initializing Random Forest Classifier
2025-04-06 17:33:37,865:INFO:Total runtime is 0.029895480473836264 minutes
2025-04-06 17:33:37,867:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:37,867:INFO:Initializing create_model()
2025-04-06 17:33:37,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:37,867:INFO:Checking exceptions
2025-04-06 17:33:37,867:INFO:Importing libraries
2025-04-06 17:33:37,868:INFO:Copying training dataset
2025-04-06 17:33:37,869:INFO:Defining folds
2025-04-06 17:33:37,869:INFO:Declaring metric variables
2025-04-06 17:33:37,871:INFO:Importing untrained model
2025-04-06 17:33:37,873:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:33:37,876:INFO:Starting cross validation
2025-04-06 17:33:37,877:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:38,080:INFO:Calculating mean and std
2025-04-06 17:33:38,081:INFO:Creating metrics dataframe
2025-04-06 17:33:38,082:INFO:Uploading results into container
2025-04-06 17:33:38,083:INFO:Uploading model into container now
2025-04-06 17:33:38,083:INFO:_master_model_container: 9
2025-04-06 17:33:38,083:INFO:_display_container: 2
2025-04-06 17:33:38,084:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:33:38,084:INFO:create_model() successfully completed......................................
2025-04-06 17:33:38,193:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:38,193:INFO:Creating metrics dataframe
2025-04-06 17:33:38,198:INFO:Initializing custom model SVM - Radial Kernel
2025-04-06 17:33:38,198:INFO:Total runtime is 0.03544548749923706 minutes
2025-04-06 17:33:38,200:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:38,200:INFO:Initializing create_model()
2025-04-06 17:33:38,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0E44850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:38,200:INFO:Checking exceptions
2025-04-06 17:33:38,200:INFO:Importing libraries
2025-04-06 17:33:38,200:INFO:Copying training dataset
2025-04-06 17:33:38,202:INFO:Defining folds
2025-04-06 17:33:38,203:INFO:Declaring metric variables
2025-04-06 17:33:38,204:INFO:Importing untrained model
2025-04-06 17:33:38,205:INFO:Declaring custom model
2025-04-06 17:33:38,206:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:33:38,209:INFO:Starting cross validation
2025-04-06 17:33:38,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:38,255:INFO:Calculating mean and std
2025-04-06 17:33:38,255:INFO:Creating metrics dataframe
2025-04-06 17:33:38,256:INFO:Uploading results into container
2025-04-06 17:33:38,257:INFO:Uploading model into container now
2025-04-06 17:33:38,257:INFO:_master_model_container: 10
2025-04-06 17:33:38,257:INFO:_display_container: 2
2025-04-06 17:33:38,257:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:33:38,257:INFO:create_model() successfully completed......................................
2025-04-06 17:33:38,359:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:38,359:INFO:Creating metrics dataframe
2025-04-06 17:33:38,365:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-04-06 17:33:38,369:INFO:Initializing create_model()
2025-04-06 17:33:38,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:38,370:INFO:Checking exceptions
2025-04-06 17:33:38,371:INFO:Importing libraries
2025-04-06 17:33:38,371:INFO:Copying training dataset
2025-04-06 17:33:38,373:INFO:Defining folds
2025-04-06 17:33:38,373:INFO:Declaring metric variables
2025-04-06 17:33:38,373:INFO:Importing untrained model
2025-04-06 17:33:38,373:INFO:Declaring custom model
2025-04-06 17:33:38,373:INFO:Logistic Regression Imported successfully
2025-04-06 17:33:38,373:INFO:Cross validation set to False
2025-04-06 17:33:38,373:INFO:Fitting Model
2025-04-06 17:33:38,379:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:33:38,379:INFO:create_model() successfully completed......................................
2025-04-06 17:33:38,489:INFO:Initializing create_model()
2025-04-06 17:33:38,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:38,490:INFO:Checking exceptions
2025-04-06 17:33:38,491:INFO:Importing libraries
2025-04-06 17:33:38,491:INFO:Copying training dataset
2025-04-06 17:33:38,493:INFO:Defining folds
2025-04-06 17:33:38,493:INFO:Declaring metric variables
2025-04-06 17:33:38,493:INFO:Importing untrained model
2025-04-06 17:33:38,493:INFO:Declaring custom model
2025-04-06 17:33:38,493:INFO:Ridge Classifier Imported successfully
2025-04-06 17:33:38,494:INFO:Cross validation set to False
2025-04-06 17:33:38,494:INFO:Fitting Model
2025-04-06 17:33:38,499:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:33:38,499:INFO:create_model() successfully completed......................................
2025-04-06 17:33:38,607:INFO:Initializing create_model()
2025-04-06 17:33:38,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:38,607:INFO:Checking exceptions
2025-04-06 17:33:38,609:INFO:Importing libraries
2025-04-06 17:33:38,609:INFO:Copying training dataset
2025-04-06 17:33:38,610:INFO:Defining folds
2025-04-06 17:33:38,610:INFO:Declaring metric variables
2025-04-06 17:33:38,610:INFO:Importing untrained model
2025-04-06 17:33:38,610:INFO:Declaring custom model
2025-04-06 17:33:38,611:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:33:38,611:INFO:Cross validation set to False
2025-04-06 17:33:38,611:INFO:Fitting Model
2025-04-06 17:33:38,616:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:33:38,616:INFO:create_model() successfully completed......................................
2025-04-06 17:33:38,726:INFO:Initializing create_model()
2025-04-06 17:33:38,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:38,726:INFO:Checking exceptions
2025-04-06 17:33:38,727:INFO:Importing libraries
2025-04-06 17:33:38,727:INFO:Copying training dataset
2025-04-06 17:33:38,729:INFO:Defining folds
2025-04-06 17:33:38,729:INFO:Declaring metric variables
2025-04-06 17:33:38,729:INFO:Importing untrained model
2025-04-06 17:33:38,729:INFO:Declaring custom model
2025-04-06 17:33:38,729:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:33:38,729:INFO:Cross validation set to False
2025-04-06 17:33:38,729:INFO:Fitting Model
2025-04-06 17:33:38,738:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:33:38,738:INFO:create_model() successfully completed......................................
2025-04-06 17:33:38,845:INFO:Initializing create_model()
2025-04-06 17:33:38,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:38,846:INFO:Checking exceptions
2025-04-06 17:33:38,846:INFO:Importing libraries
2025-04-06 17:33:38,847:INFO:Copying training dataset
2025-04-06 17:33:38,848:INFO:Defining folds
2025-04-06 17:33:38,848:INFO:Declaring metric variables
2025-04-06 17:33:38,848:INFO:Importing untrained model
2025-04-06 17:33:38,848:INFO:Declaring custom model
2025-04-06 17:33:38,848:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:33:38,849:INFO:Cross validation set to False
2025-04-06 17:33:38,849:INFO:Fitting Model
2025-04-06 17:33:38,930:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:33:38,931:INFO:create_model() successfully completed......................................
2025-04-06 17:33:39,044:INFO:_master_model_container: 10
2025-04-06 17:33:39,045:INFO:_display_container: 2
2025-04-06 17:33:39,045:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)]
2025-04-06 17:33:39,045:INFO:compare_models() successfully completed......................................
2025-04-06 17:33:39,046:INFO:Initializing tune_model()
2025-04-06 17:33:39,046:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=4, round=4, n_iter=25, custom_grid={'C': [1], 'solver': ['liblinear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>)
2025-04-06 17:33:39,046:INFO:Checking exceptions
2025-04-06 17:33:39,053:INFO:Copying training dataset
2025-04-06 17:33:39,055:INFO:Checking base model
2025-04-06 17:33:39,055:INFO:Base model : Logistic Regression
2025-04-06 17:33:39,057:INFO:Declaring metric variables
2025-04-06 17:33:39,058:INFO:Defining Hyperparameters
2025-04-06 17:33:39,160:INFO:custom_grid: {'actual_estimator__C': [1], 'actual_estimator__solver': ['liblinear']}
2025-04-06 17:33:39,160:INFO:Tuning with n_jobs=-1
2025-04-06 17:33:39,160:INFO:Initializing GridSearchCV
2025-04-06 17:33:39,182:INFO:best_params: {'actual_estimator__C': 1, 'actual_estimator__solver': 'liblinear'}
2025-04-06 17:33:39,182:INFO:Hyperparameter search completed
2025-04-06 17:33:39,182:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:39,183:INFO:Initializing create_model()
2025-04-06 17:33:39,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF0F1B190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1, 'solver': 'liblinear'})
2025-04-06 17:33:39,183:INFO:Checking exceptions
2025-04-06 17:33:39,183:INFO:Importing libraries
2025-04-06 17:33:39,183:INFO:Copying training dataset
2025-04-06 17:33:39,184:INFO:Defining folds
2025-04-06 17:33:39,184:INFO:Declaring metric variables
2025-04-06 17:33:39,186:INFO:Importing untrained model
2025-04-06 17:33:39,186:INFO:Declaring custom model
2025-04-06 17:33:39,188:INFO:Logistic Regression Imported successfully
2025-04-06 17:33:39,191:INFO:Starting cross validation
2025-04-06 17:33:39,191:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:39,214:INFO:Calculating mean and std
2025-04-06 17:33:39,214:INFO:Creating metrics dataframe
2025-04-06 17:33:39,217:INFO:Finalizing model
2025-04-06 17:33:39,224:INFO:Uploading results into container
2025-04-06 17:33:39,224:INFO:Uploading model into container now
2025-04-06 17:33:39,225:INFO:_master_model_container: 11
2025-04-06 17:33:39,225:INFO:_display_container: 3
2025-04-06 17:33:39,225:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:33:39,225:INFO:create_model() successfully completed......................................
2025-04-06 17:33:39,327:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:39,327:INFO:choose_better activated
2025-04-06 17:33:39,329:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:39,329:INFO:Initializing create_model()
2025-04-06 17:33:39,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:39,329:INFO:Checking exceptions
2025-04-06 17:33:39,330:INFO:Importing libraries
2025-04-06 17:33:39,330:INFO:Copying training dataset
2025-04-06 17:33:39,331:INFO:Defining folds
2025-04-06 17:33:39,332:INFO:Declaring metric variables
2025-04-06 17:33:39,332:INFO:Importing untrained model
2025-04-06 17:33:39,332:INFO:Declaring custom model
2025-04-06 17:33:39,332:INFO:Logistic Regression Imported successfully
2025-04-06 17:33:39,332:INFO:Starting cross validation
2025-04-06 17:33:39,332:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:39,358:INFO:Calculating mean and std
2025-04-06 17:33:39,358:INFO:Creating metrics dataframe
2025-04-06 17:33:39,359:INFO:Finalizing model
2025-04-06 17:33:39,365:INFO:Uploading results into container
2025-04-06 17:33:39,365:INFO:Uploading model into container now
2025-04-06 17:33:39,365:INFO:_master_model_container: 12
2025-04-06 17:33:39,365:INFO:_display_container: 4
2025-04-06 17:33:39,365:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:33:39,365:INFO:create_model() successfully completed......................................
2025-04-06 17:33:39,481:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:39,481:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4633
2025-04-06 17:33:39,481:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4636
2025-04-06 17:33:39,481:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-04-06 17:33:39,482:INFO:choose_better completed
2025-04-06 17:33:39,486:INFO:_master_model_container: 12
2025-04-06 17:33:39,486:INFO:_display_container: 3
2025-04-06 17:33:39,486:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:33:39,486:INFO:tune_model() successfully completed......................................
2025-04-06 17:33:39,587:INFO:Initializing tune_model()
2025-04-06 17:33:39,587:INFO:tune_model(estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'alpha': [1], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>)
2025-04-06 17:33:39,587:INFO:Checking exceptions
2025-04-06 17:33:39,595:INFO:Copying training dataset
2025-04-06 17:33:39,597:INFO:Checking base model
2025-04-06 17:33:39,597:INFO:Base model : Ridge Classifier
2025-04-06 17:33:39,598:INFO:Declaring metric variables
2025-04-06 17:33:39,600:INFO:Defining Hyperparameters
2025-04-06 17:33:39,702:INFO:custom_grid: {'actual_estimator__alpha': [1], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:33:39,702:INFO:Tuning with n_jobs=-1
2025-04-06 17:33:39,702:INFO:Initializing GridSearchCV
2025-04-06 17:33:39,722:INFO:best_params: {'actual_estimator__alpha': 1, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:33:39,723:INFO:Hyperparameter search completed
2025-04-06 17:33:39,723:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:39,723:INFO:Initializing create_model()
2025-04-06 17:33:39,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEEEAEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'alpha': 1, 'solver': 'lsqr'})
2025-04-06 17:33:39,723:INFO:Checking exceptions
2025-04-06 17:33:39,723:INFO:Importing libraries
2025-04-06 17:33:39,723:INFO:Copying training dataset
2025-04-06 17:33:39,725:INFO:Defining folds
2025-04-06 17:33:39,725:INFO:Declaring metric variables
2025-04-06 17:33:39,727:INFO:Importing untrained model
2025-04-06 17:33:39,727:INFO:Declaring custom model
2025-04-06 17:33:39,729:INFO:Ridge Classifier Imported successfully
2025-04-06 17:33:39,732:INFO:Starting cross validation
2025-04-06 17:33:39,732:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:39,753:INFO:Calculating mean and std
2025-04-06 17:33:39,753:INFO:Creating metrics dataframe
2025-04-06 17:33:39,756:INFO:Finalizing model
2025-04-06 17:33:39,763:INFO:Uploading results into container
2025-04-06 17:33:39,763:INFO:Uploading model into container now
2025-04-06 17:33:39,763:INFO:_master_model_container: 13
2025-04-06 17:33:39,764:INFO:_display_container: 4
2025-04-06 17:33:39,764:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001)
2025-04-06 17:33:39,764:INFO:create_model() successfully completed......................................
2025-04-06 17:33:39,882:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:39,882:INFO:choose_better activated
2025-04-06 17:33:39,884:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:39,884:INFO:Initializing create_model()
2025-04-06 17:33:39,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:39,884:INFO:Checking exceptions
2025-04-06 17:33:39,885:INFO:Importing libraries
2025-04-06 17:33:39,885:INFO:Copying training dataset
2025-04-06 17:33:39,886:INFO:Defining folds
2025-04-06 17:33:39,886:INFO:Declaring metric variables
2025-04-06 17:33:39,887:INFO:Importing untrained model
2025-04-06 17:33:39,887:INFO:Declaring custom model
2025-04-06 17:33:39,887:INFO:Ridge Classifier Imported successfully
2025-04-06 17:33:39,887:INFO:Starting cross validation
2025-04-06 17:33:39,887:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:39,909:INFO:Calculating mean and std
2025-04-06 17:33:39,909:INFO:Creating metrics dataframe
2025-04-06 17:33:39,910:INFO:Finalizing model
2025-04-06 17:33:39,915:INFO:Uploading results into container
2025-04-06 17:33:39,915:INFO:Uploading model into container now
2025-04-06 17:33:39,915:INFO:_master_model_container: 14
2025-04-06 17:33:39,915:INFO:_display_container: 5
2025-04-06 17:33:39,915:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:33:39,915:INFO:create_model() successfully completed......................................
2025-04-06 17:33:40,015:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:40,016:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:33:40,016:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:33:40,016:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) is best model
2025-04-06 17:33:40,016:INFO:choose_better completed
2025-04-06 17:33:40,016:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:33:40,022:INFO:_master_model_container: 14
2025-04-06 17:33:40,022:INFO:_display_container: 4
2025-04-06 17:33:40,022:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:33:40,022:INFO:tune_model() successfully completed......................................
2025-04-06 17:33:40,125:INFO:Initializing tune_model()
2025-04-06 17:33:40,125:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'shrinkage': [0.0], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>)
2025-04-06 17:33:40,125:INFO:Checking exceptions
2025-04-06 17:33:40,133:INFO:Copying training dataset
2025-04-06 17:33:40,135:INFO:Checking base model
2025-04-06 17:33:40,135:INFO:Base model : Linear Discriminant Analysis
2025-04-06 17:33:40,136:INFO:Declaring metric variables
2025-04-06 17:33:40,138:INFO:Defining Hyperparameters
2025-04-06 17:33:40,239:INFO:custom_grid: {'actual_estimator__shrinkage': [0.0], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:33:40,239:INFO:Tuning with n_jobs=-1
2025-04-06 17:33:40,239:INFO:Initializing GridSearchCV
2025-04-06 17:33:40,254:INFO:best_params: {'actual_estimator__shrinkage': 0.0, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:33:40,254:INFO:Hyperparameter search completed
2025-04-06 17:33:40,254:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:40,254:INFO:Initializing create_model()
2025-04-06 17:33:40,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEE89FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'shrinkage': 0.0, 'solver': 'lsqr'})
2025-04-06 17:33:40,255:INFO:Checking exceptions
2025-04-06 17:33:40,255:INFO:Importing libraries
2025-04-06 17:33:40,255:INFO:Copying training dataset
2025-04-06 17:33:40,256:INFO:Defining folds
2025-04-06 17:33:40,256:INFO:Declaring metric variables
2025-04-06 17:33:40,258:INFO:Importing untrained model
2025-04-06 17:33:40,258:INFO:Declaring custom model
2025-04-06 17:33:40,260:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:33:40,263:INFO:Starting cross validation
2025-04-06 17:33:40,264:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:40,284:INFO:Calculating mean and std
2025-04-06 17:33:40,284:INFO:Creating metrics dataframe
2025-04-06 17:33:40,287:INFO:Finalizing model
2025-04-06 17:33:40,294:INFO:Uploading results into container
2025-04-06 17:33:40,294:INFO:Uploading model into container now
2025-04-06 17:33:40,294:INFO:_master_model_container: 15
2025-04-06 17:33:40,294:INFO:_display_container: 5
2025-04-06 17:33:40,295:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:33:40,295:INFO:create_model() successfully completed......................................
2025-04-06 17:33:40,399:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:40,399:INFO:choose_better activated
2025-04-06 17:33:40,401:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:40,401:INFO:Initializing create_model()
2025-04-06 17:33:40,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:40,401:INFO:Checking exceptions
2025-04-06 17:33:40,402:INFO:Importing libraries
2025-04-06 17:33:40,402:INFO:Copying training dataset
2025-04-06 17:33:40,404:INFO:Defining folds
2025-04-06 17:33:40,404:INFO:Declaring metric variables
2025-04-06 17:33:40,404:INFO:Importing untrained model
2025-04-06 17:33:40,404:INFO:Declaring custom model
2025-04-06 17:33:40,404:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:33:40,404:INFO:Starting cross validation
2025-04-06 17:33:40,404:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:40,423:INFO:Calculating mean and std
2025-04-06 17:33:40,423:INFO:Creating metrics dataframe
2025-04-06 17:33:40,424:INFO:Finalizing model
2025-04-06 17:33:40,428:INFO:Uploading results into container
2025-04-06 17:33:40,429:INFO:Uploading model into container now
2025-04-06 17:33:40,429:INFO:_master_model_container: 16
2025-04-06 17:33:40,429:INFO:_display_container: 6
2025-04-06 17:33:40,429:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:33:40,429:INFO:create_model() successfully completed......................................
2025-04-06 17:33:40,541:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:40,541:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:33:40,541:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:33:40,542:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2025-04-06 17:33:40,542:INFO:choose_better completed
2025-04-06 17:33:40,542:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:33:40,546:INFO:_master_model_container: 16
2025-04-06 17:33:40,547:INFO:_display_container: 5
2025-04-06 17:33:40,547:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:33:40,547:INFO:tune_model() successfully completed......................................
2025-04-06 17:33:40,666:INFO:Initializing tune_model()
2025-04-06 17:33:40,666:INFO:tune_model(estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=4, round=4, n_iter=25, custom_grid={'probability': [True], 'C': [1.0], 'kernel': ['linear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>)
2025-04-06 17:33:40,666:INFO:Checking exceptions
2025-04-06 17:33:40,674:INFO:Copying training dataset
2025-04-06 17:33:40,676:INFO:Checking base model
2025-04-06 17:33:40,676:INFO:Base model : SVM - Radial Kernel
2025-04-06 17:33:40,678:INFO:Declaring metric variables
2025-04-06 17:33:40,679:INFO:Defining Hyperparameters
2025-04-06 17:33:40,789:INFO:custom_grid: {'actual_estimator__probability': [True], 'actual_estimator__C': [1.0], 'actual_estimator__kernel': ['linear']}
2025-04-06 17:33:40,789:INFO:Tuning with n_jobs=-1
2025-04-06 17:33:40,789:INFO:Initializing GridSearchCV
2025-04-06 17:33:40,815:INFO:best_params: {'actual_estimator__C': 1.0, 'actual_estimator__kernel': 'linear', 'actual_estimator__probability': True}
2025-04-06 17:33:40,815:INFO:Hyperparameter search completed
2025-04-06 17:33:40,815:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:40,816:INFO:Initializing create_model()
2025-04-06 17:33:40,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB70A5340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1.0, 'kernel': 'linear', 'probability': True})
2025-04-06 17:33:40,816:INFO:Checking exceptions
2025-04-06 17:33:40,816:INFO:Importing libraries
2025-04-06 17:33:40,816:INFO:Copying training dataset
2025-04-06 17:33:40,817:INFO:Defining folds
2025-04-06 17:33:40,817:INFO:Declaring metric variables
2025-04-06 17:33:40,819:INFO:Importing untrained model
2025-04-06 17:33:40,819:INFO:Declaring custom model
2025-04-06 17:33:40,821:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:33:40,825:INFO:Starting cross validation
2025-04-06 17:33:40,825:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:40,863:INFO:Calculating mean and std
2025-04-06 17:33:40,863:INFO:Creating metrics dataframe
2025-04-06 17:33:40,866:INFO:Finalizing model
2025-04-06 17:33:40,877:INFO:Uploading results into container
2025-04-06 17:33:40,877:INFO:Uploading model into container now
2025-04-06 17:33:40,878:INFO:_master_model_container: 17
2025-04-06 17:33:40,878:INFO:_display_container: 6
2025-04-06 17:33:40,878:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:33:40,878:INFO:create_model() successfully completed......................................
2025-04-06 17:33:40,984:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:40,984:INFO:choose_better activated
2025-04-06 17:33:40,987:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:40,987:INFO:Initializing create_model()
2025-04-06 17:33:40,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:40,987:INFO:Checking exceptions
2025-04-06 17:33:40,988:INFO:Importing libraries
2025-04-06 17:33:40,988:INFO:Copying training dataset
2025-04-06 17:33:40,990:INFO:Defining folds
2025-04-06 17:33:40,990:INFO:Declaring metric variables
2025-04-06 17:33:40,990:INFO:Importing untrained model
2025-04-06 17:33:40,990:INFO:Declaring custom model
2025-04-06 17:33:40,990:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:33:40,990:INFO:Starting cross validation
2025-04-06 17:33:40,991:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:41,020:INFO:Calculating mean and std
2025-04-06 17:33:41,020:INFO:Creating metrics dataframe
2025-04-06 17:33:41,021:INFO:Finalizing model
2025-04-06 17:33:41,030:INFO:Uploading results into container
2025-04-06 17:33:41,030:INFO:Uploading model into container now
2025-04-06 17:33:41,030:INFO:_master_model_container: 18
2025-04-06 17:33:41,030:INFO:_display_container: 7
2025-04-06 17:33:41,031:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:33:41,031:INFO:create_model() successfully completed......................................
2025-04-06 17:33:41,133:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:41,133:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:33:41,134:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:33:41,134:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) is best model
2025-04-06 17:33:41,134:INFO:choose_better completed
2025-04-06 17:33:41,134:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:33:41,139:INFO:_master_model_container: 18
2025-04-06 17:33:41,139:INFO:_display_container: 6
2025-04-06 17:33:41,139:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:33:41,139:INFO:tune_model() successfully completed......................................
2025-04-06 17:33:41,242:INFO:Initializing tune_model()
2025-04-06 17:33:41,242:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>)
2025-04-06 17:33:41,242:INFO:Checking exceptions
2025-04-06 17:33:41,242:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:33:41,250:INFO:Copying training dataset
2025-04-06 17:33:41,252:INFO:Checking base model
2025-04-06 17:33:41,252:INFO:Base model : Random Forest Classifier
2025-04-06 17:33:41,253:INFO:Declaring metric variables
2025-04-06 17:33:41,255:INFO:Defining Hyperparameters
2025-04-06 17:33:41,369:INFO:Tuning with n_jobs=-1
2025-04-06 17:33:41,372:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:33:55,581:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', True), ('actual_estimator__class_weight', None), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 11), ('actual_estimator__max_features', 0.8300057969327517), ('actual_estimator__min_impurity_decrease', 3.341748754047965e-07), ('actual_estimator__min_samples_leaf', 4), ('actual_estimator__min_samples_split', 3), ('actual_estimator__n_estimators', 257)])
2025-04-06 17:33:55,581:INFO:Hyperparameter search completed
2025-04-06 17:33:55,581:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:55,582:INFO:Initializing create_model()
2025-04-06 17:33:55,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEBB1C490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': True, 'class_weight': None, 'criterion': 'entropy', 'max_depth': 11, 'max_features': 0.8300057969327517, 'min_impurity_decrease': 3.341748754047965e-07, 'min_samples_leaf': 4, 'min_samples_split': 3, 'n_estimators': 257})
2025-04-06 17:33:55,582:INFO:Checking exceptions
2025-04-06 17:33:55,582:INFO:Importing libraries
2025-04-06 17:33:55,582:INFO:Copying training dataset
2025-04-06 17:33:55,584:INFO:Defining folds
2025-04-06 17:33:55,584:INFO:Declaring metric variables
2025-04-06 17:33:55,586:INFO:Importing untrained model
2025-04-06 17:33:55,587:INFO:Declaring custom model
2025-04-06 17:33:55,589:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:33:55,592:INFO:Starting cross validation
2025-04-06 17:33:55,592:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:55,864:INFO:Calculating mean and std
2025-04-06 17:33:55,864:INFO:Creating metrics dataframe
2025-04-06 17:33:55,867:INFO:Finalizing model
2025-04-06 17:33:56,057:INFO:Uploading results into container
2025-04-06 17:33:56,057:INFO:Uploading model into container now
2025-04-06 17:33:56,058:INFO:_master_model_container: 19
2025-04-06 17:33:56,058:INFO:_display_container: 7
2025-04-06 17:33:56,058:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:33:56,058:INFO:create_model() successfully completed......................................
2025-04-06 17:33:56,163:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:56,163:INFO:choose_better activated
2025-04-06 17:33:56,165:INFO:SubProcess create_model() called ==================================
2025-04-06 17:33:56,166:INFO:Initializing create_model()
2025-04-06 17:33:56,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:56,166:INFO:Checking exceptions
2025-04-06 17:33:56,167:INFO:Importing libraries
2025-04-06 17:33:56,167:INFO:Copying training dataset
2025-04-06 17:33:56,169:INFO:Defining folds
2025-04-06 17:33:56,169:INFO:Declaring metric variables
2025-04-06 17:33:56,169:INFO:Importing untrained model
2025-04-06 17:33:56,169:INFO:Declaring custom model
2025-04-06 17:33:56,169:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:33:56,169:INFO:Starting cross validation
2025-04-06 17:33:56,170:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:33:56,352:INFO:Calculating mean and std
2025-04-06 17:33:56,352:INFO:Creating metrics dataframe
2025-04-06 17:33:56,354:INFO:Finalizing model
2025-04-06 17:33:56,431:INFO:Uploading results into container
2025-04-06 17:33:56,432:INFO:Uploading model into container now
2025-04-06 17:33:56,432:INFO:_master_model_container: 20
2025-04-06 17:33:56,432:INFO:_display_container: 8
2025-04-06 17:33:56,432:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:33:56,432:INFO:create_model() successfully completed......................................
2025-04-06 17:33:56,534:INFO:SubProcess create_model() end ==================================
2025-04-06 17:33:56,534:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for AUC is 0.5485
2025-04-06 17:33:56,535:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for AUC is 0.5656
2025-04-06 17:33:56,535:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2025-04-06 17:33:56,535:INFO:choose_better completed
2025-04-06 17:33:56,540:INFO:_master_model_container: 20
2025-04-06 17:33:56,540:INFO:_display_container: 7
2025-04-06 17:33:56,540:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:33:56,541:INFO:tune_model() successfully completed......................................
2025-04-06 17:33:56,641:INFO:Initializing finalize_model()
2025-04-06 17:33:56,641:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:33:56,641:INFO:Finalizing LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:33:56,642:INFO:Initializing create_model()
2025-04-06 17:33:56,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:56,642:INFO:Checking exceptions
2025-04-06 17:33:56,643:INFO:Importing libraries
2025-04-06 17:33:56,643:INFO:Copying training dataset
2025-04-06 17:33:56,643:INFO:Defining folds
2025-04-06 17:33:56,643:INFO:Declaring metric variables
2025-04-06 17:33:56,643:INFO:Importing untrained model
2025-04-06 17:33:56,643:INFO:Declaring custom model
2025-04-06 17:33:56,644:INFO:Logistic Regression Imported successfully
2025-04-06 17:33:56,644:INFO:Cross validation set to False
2025-04-06 17:33:56,644:INFO:Fitting Model
2025-04-06 17:33:56,650:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:33:56,650:INFO:create_model() successfully completed......................................
2025-04-06 17:33:56,749:INFO:_master_model_container: 20
2025-04-06 17:33:56,749:INFO:_display_container: 7
2025-04-06 17:33:56,751:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:33:56,751:INFO:finalize_model() successfully completed......................................
2025-04-06 17:33:56,854:INFO:Initializing finalize_model()
2025-04-06 17:33:56,855:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:33:56,855:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:33:56,856:INFO:Initializing create_model()
2025-04-06 17:33:56,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:56,856:INFO:Checking exceptions
2025-04-06 17:33:56,857:INFO:Importing libraries
2025-04-06 17:33:56,857:INFO:Copying training dataset
2025-04-06 17:33:56,857:INFO:Defining folds
2025-04-06 17:33:56,857:INFO:Declaring metric variables
2025-04-06 17:33:56,857:INFO:Importing untrained model
2025-04-06 17:33:56,857:INFO:Declaring custom model
2025-04-06 17:33:56,858:INFO:Ridge Classifier Imported successfully
2025-04-06 17:33:56,858:INFO:Cross validation set to False
2025-04-06 17:33:56,858:INFO:Fitting Model
2025-04-06 17:33:56,864:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:33:56,864:INFO:create_model() successfully completed......................................
2025-04-06 17:33:56,962:INFO:_master_model_container: 20
2025-04-06 17:33:56,962:INFO:_display_container: 7
2025-04-06 17:33:56,964:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:33:56,964:INFO:finalize_model() successfully completed......................................
2025-04-06 17:33:57,069:INFO:Initializing finalize_model()
2025-04-06 17:33:57,069:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:33:57,069:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:33:57,070:INFO:Initializing create_model()
2025-04-06 17:33:57,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:57,070:INFO:Checking exceptions
2025-04-06 17:33:57,071:INFO:Importing libraries
2025-04-06 17:33:57,071:INFO:Copying training dataset
2025-04-06 17:33:57,071:INFO:Defining folds
2025-04-06 17:33:57,071:INFO:Declaring metric variables
2025-04-06 17:33:57,072:INFO:Importing untrained model
2025-04-06 17:33:57,072:INFO:Declaring custom model
2025-04-06 17:33:57,072:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:33:57,072:INFO:Cross validation set to False
2025-04-06 17:33:57,072:INFO:Fitting Model
2025-04-06 17:33:57,078:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:33:57,078:INFO:create_model() successfully completed......................................
2025-04-06 17:33:57,180:INFO:_master_model_container: 20
2025-04-06 17:33:57,181:INFO:_display_container: 7
2025-04-06 17:33:57,183:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:33:57,183:INFO:finalize_model() successfully completed......................................
2025-04-06 17:33:57,285:INFO:Initializing finalize_model()
2025-04-06 17:33:57,285:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:33:57,285:INFO:Finalizing SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:33:57,287:INFO:Initializing create_model()
2025-04-06 17:33:57,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:57,287:INFO:Checking exceptions
2025-04-06 17:33:57,288:INFO:Importing libraries
2025-04-06 17:33:57,288:INFO:Copying training dataset
2025-04-06 17:33:57,288:INFO:Defining folds
2025-04-06 17:33:57,288:INFO:Declaring metric variables
2025-04-06 17:33:57,288:INFO:Importing untrained model
2025-04-06 17:33:57,288:INFO:Declaring custom model
2025-04-06 17:33:57,289:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:33:57,289:INFO:Cross validation set to False
2025-04-06 17:33:57,289:INFO:Fitting Model
2025-04-06 17:33:57,301:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:33:57,301:INFO:create_model() successfully completed......................................
2025-04-06 17:33:57,402:INFO:_master_model_container: 20
2025-04-06 17:33:57,402:INFO:_display_container: 7
2025-04-06 17:33:57,404:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:33:57,404:INFO:finalize_model() successfully completed......................................
2025-04-06 17:33:57,504:INFO:Initializing finalize_model()
2025-04-06 17:33:57,504:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:33:57,505:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:33:57,506:INFO:Initializing create_model()
2025-04-06 17:33:57,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF6D3ADC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:33:57,506:INFO:Checking exceptions
2025-04-06 17:33:57,507:INFO:Importing libraries
2025-04-06 17:33:57,507:INFO:Copying training dataset
2025-04-06 17:33:57,507:INFO:Defining folds
2025-04-06 17:33:57,507:INFO:Declaring metric variables
2025-04-06 17:33:57,507:INFO:Importing untrained model
2025-04-06 17:33:57,507:INFO:Declaring custom model
2025-04-06 17:33:57,507:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:33:57,508:INFO:Cross validation set to False
2025-04-06 17:33:57,508:INFO:Fitting Model
2025-04-06 17:33:57,712:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:33:57,712:INFO:create_model() successfully completed......................................
2025-04-06 17:33:57,822:INFO:_master_model_container: 20
2025-04-06 17:33:57,822:INFO:_display_container: 7
2025-04-06 17:33:57,825:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:33:57,825:INFO:finalize_model() successfully completed......................................
2025-04-06 17:33:57,938:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\arch\bootstrap\base.py:402: FutureWarning:

random_state is deprecated and will be removed in a future version. The default random number generator is changing to a NumPy Generator. To continue using RandomState, please directly pass a RandomState instance using the ``generator`` keyword argument.


2025-04-06 17:33:58,041:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:33:58,153:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:33:58,257:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:33:59,508:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:33:59,624:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:33:59,721:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:34:02,677:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:34:04,017:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:34:04,125:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:34:04,224:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:34:05,326:INFO:PyCaret ClassificationExperiment
2025-04-06 17:34:05,326:INFO:Logging name: clf-default-name
2025-04-06 17:34:05,326:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:34:05,326:INFO:version 3.3.2
2025-04-06 17:34:05,326:INFO:Initializing setup()
2025-04-06 17:34:05,326:INFO:self.USI: 6f04
2025-04-06 17:34:05,326:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:34:05,326:INFO:Checking environment
2025-04-06 17:34:05,326:INFO:python_version: 3.9.21
2025-04-06 17:34:05,326:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:34:05,326:INFO:machine: AMD64
2025-04-06 17:34:05,326:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:34:05,333:INFO:Memory: svmem(total=137112563712, available=97735475200, percent=28.7, used=39377088512, free=97735475200)
2025-04-06 17:34:05,333:INFO:Physical Core: 24
2025-04-06 17:34:05,333:INFO:Logical Core: 32
2025-04-06 17:34:05,333:INFO:Checking libraries
2025-04-06 17:34:05,333:INFO:System:
2025-04-06 17:34:05,333:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:34:05,333:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:34:05,333:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:34:05,333:INFO:PyCaret required dependencies:
2025-04-06 17:34:05,333:INFO:                 pip: 25.0
2025-04-06 17:34:05,333:INFO:          setuptools: 72.1.0
2025-04-06 17:34:05,333:INFO:             pycaret: 3.3.2
2025-04-06 17:34:05,333:INFO:             IPython: 8.18.1
2025-04-06 17:34:05,333:INFO:          ipywidgets: 8.1.5
2025-04-06 17:34:05,333:INFO:                tqdm: 4.67.1
2025-04-06 17:34:05,333:INFO:               numpy: 1.26.4
2025-04-06 17:34:05,333:INFO:              pandas: 2.1.4
2025-04-06 17:34:05,333:INFO:              jinja2: 3.1.6
2025-04-06 17:34:05,333:INFO:               scipy: 1.11.4
2025-04-06 17:34:05,333:INFO:              joblib: 1.3.2
2025-04-06 17:34:05,333:INFO:             sklearn: 1.4.2
2025-04-06 17:34:05,333:INFO:                pyod: 2.0.4
2025-04-06 17:34:05,333:INFO:            imblearn: 0.12.4
2025-04-06 17:34:05,333:INFO:   category_encoders: 2.6.4
2025-04-06 17:34:05,333:INFO:            lightgbm: 4.6.0
2025-04-06 17:34:05,333:INFO:               numba: 0.60.0
2025-04-06 17:34:05,333:INFO:            requests: 2.32.3
2025-04-06 17:34:05,333:INFO:          matplotlib: 3.7.5
2025-04-06 17:34:05,333:INFO:          scikitplot: 0.3.7
2025-04-06 17:34:05,333:INFO:         yellowbrick: 1.5
2025-04-06 17:34:05,333:INFO:              plotly: 5.24.1
2025-04-06 17:34:05,333:INFO:    plotly-resampler: Not installed
2025-04-06 17:34:05,333:INFO:             kaleido: 0.2.1
2025-04-06 17:34:05,333:INFO:           schemdraw: 0.15
2025-04-06 17:34:05,333:INFO:         statsmodels: 0.14.4
2025-04-06 17:34:05,333:INFO:              sktime: 0.26.0
2025-04-06 17:34:05,333:INFO:               tbats: 1.1.3
2025-04-06 17:34:05,334:INFO:            pmdarima: 2.0.4
2025-04-06 17:34:05,334:INFO:              psutil: 7.0.0
2025-04-06 17:34:05,334:INFO:          markupsafe: 3.0.2
2025-04-06 17:34:05,334:INFO:             pickle5: Not installed
2025-04-06 17:34:05,334:INFO:         cloudpickle: 3.1.1
2025-04-06 17:34:05,334:INFO:         deprecation: 2.1.0
2025-04-06 17:34:05,334:INFO:              xxhash: 3.5.0
2025-04-06 17:34:05,334:INFO:           wurlitzer: Not installed
2025-04-06 17:34:05,334:INFO:PyCaret optional dependencies:
2025-04-06 17:34:05,334:INFO:                shap: Not installed
2025-04-06 17:34:05,334:INFO:           interpret: Not installed
2025-04-06 17:34:05,334:INFO:                umap: Not installed
2025-04-06 17:34:05,334:INFO:     ydata_profiling: Not installed
2025-04-06 17:34:05,334:INFO:  explainerdashboard: Not installed
2025-04-06 17:34:05,334:INFO:             autoviz: Not installed
2025-04-06 17:34:05,334:INFO:           fairlearn: Not installed
2025-04-06 17:34:05,334:INFO:          deepchecks: Not installed
2025-04-06 17:34:05,334:INFO:             xgboost: Not installed
2025-04-06 17:34:05,334:INFO:            catboost: Not installed
2025-04-06 17:34:05,334:INFO:              kmodes: Not installed
2025-04-06 17:34:05,334:INFO:             mlxtend: Not installed
2025-04-06 17:34:05,334:INFO:       statsforecast: Not installed
2025-04-06 17:34:05,334:INFO:        tune_sklearn: Not installed
2025-04-06 17:34:05,334:INFO:                 ray: Not installed
2025-04-06 17:34:05,334:INFO:            hyperopt: 0.2.7
2025-04-06 17:34:05,334:INFO:              optuna: 4.2.1
2025-04-06 17:34:05,334:INFO:               skopt: 0.10.2
2025-04-06 17:34:05,334:INFO:              mlflow: Not installed
2025-04-06 17:34:05,334:INFO:              gradio: Not installed
2025-04-06 17:34:05,334:INFO:             fastapi: Not installed
2025-04-06 17:34:05,334:INFO:             uvicorn: Not installed
2025-04-06 17:34:05,334:INFO:              m2cgen: Not installed
2025-04-06 17:34:05,334:INFO:           evidently: Not installed
2025-04-06 17:34:05,334:INFO:               fugue: Not installed
2025-04-06 17:34:05,334:INFO:           streamlit: Not installed
2025-04-06 17:34:05,334:INFO:             prophet: Not installed
2025-04-06 17:34:05,334:INFO:None
2025-04-06 17:34:05,334:INFO:Set up data.
2025-04-06 17:34:05,336:INFO:Set up folding strategy.
2025-04-06 17:34:05,336:INFO:Set up train/test split.
2025-04-06 17:35:40,323:INFO:PyCaret ClassificationExperiment
2025-04-06 17:35:40,324:INFO:Logging name: clf-default-name
2025-04-06 17:35:40,324:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:35:40,324:INFO:version 3.3.2
2025-04-06 17:35:40,324:INFO:Initializing setup()
2025-04-06 17:35:40,324:INFO:self.USI: 05fa
2025-04-06 17:35:40,324:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:35:40,324:INFO:Checking environment
2025-04-06 17:35:40,324:INFO:python_version: 3.9.21
2025-04-06 17:35:40,324:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:35:40,324:INFO:machine: AMD64
2025-04-06 17:35:40,324:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:35:40,330:INFO:Memory: svmem(total=137112563712, available=97686093824, percent=28.8, used=39426469888, free=97686093824)
2025-04-06 17:35:40,330:INFO:Physical Core: 24
2025-04-06 17:35:40,330:INFO:Logical Core: 32
2025-04-06 17:35:40,330:INFO:Checking libraries
2025-04-06 17:35:40,330:INFO:System:
2025-04-06 17:35:40,330:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:35:40,330:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:35:40,330:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:35:40,330:INFO:PyCaret required dependencies:
2025-04-06 17:35:40,330:INFO:                 pip: 25.0
2025-04-06 17:35:40,330:INFO:          setuptools: 72.1.0
2025-04-06 17:35:40,330:INFO:             pycaret: 3.3.2
2025-04-06 17:35:40,330:INFO:             IPython: 8.18.1
2025-04-06 17:35:40,330:INFO:          ipywidgets: 8.1.5
2025-04-06 17:35:40,330:INFO:                tqdm: 4.67.1
2025-04-06 17:35:40,330:INFO:               numpy: 1.26.4
2025-04-06 17:35:40,330:INFO:              pandas: 2.1.4
2025-04-06 17:35:40,330:INFO:              jinja2: 3.1.6
2025-04-06 17:35:40,331:INFO:               scipy: 1.11.4
2025-04-06 17:35:40,331:INFO:              joblib: 1.3.2
2025-04-06 17:35:40,331:INFO:             sklearn: 1.4.2
2025-04-06 17:35:40,331:INFO:                pyod: 2.0.4
2025-04-06 17:35:40,331:INFO:            imblearn: 0.12.4
2025-04-06 17:35:40,331:INFO:   category_encoders: 2.6.4
2025-04-06 17:35:40,331:INFO:            lightgbm: 4.6.0
2025-04-06 17:35:40,331:INFO:               numba: 0.60.0
2025-04-06 17:35:40,331:INFO:            requests: 2.32.3
2025-04-06 17:35:40,331:INFO:          matplotlib: 3.7.5
2025-04-06 17:35:40,331:INFO:          scikitplot: 0.3.7
2025-04-06 17:35:40,331:INFO:         yellowbrick: 1.5
2025-04-06 17:35:40,331:INFO:              plotly: 5.24.1
2025-04-06 17:35:40,331:INFO:    plotly-resampler: Not installed
2025-04-06 17:35:40,331:INFO:             kaleido: 0.2.1
2025-04-06 17:35:40,331:INFO:           schemdraw: 0.15
2025-04-06 17:35:40,331:INFO:         statsmodels: 0.14.4
2025-04-06 17:35:40,331:INFO:              sktime: 0.26.0
2025-04-06 17:35:40,331:INFO:               tbats: 1.1.3
2025-04-06 17:35:40,331:INFO:            pmdarima: 2.0.4
2025-04-06 17:35:40,331:INFO:              psutil: 7.0.0
2025-04-06 17:35:40,331:INFO:          markupsafe: 3.0.2
2025-04-06 17:35:40,331:INFO:             pickle5: Not installed
2025-04-06 17:35:40,331:INFO:         cloudpickle: 3.1.1
2025-04-06 17:35:40,331:INFO:         deprecation: 2.1.0
2025-04-06 17:35:40,331:INFO:              xxhash: 3.5.0
2025-04-06 17:35:40,331:INFO:           wurlitzer: Not installed
2025-04-06 17:35:40,331:INFO:PyCaret optional dependencies:
2025-04-06 17:35:40,331:INFO:                shap: Not installed
2025-04-06 17:35:40,331:INFO:           interpret: Not installed
2025-04-06 17:35:40,331:INFO:                umap: Not installed
2025-04-06 17:35:40,331:INFO:     ydata_profiling: Not installed
2025-04-06 17:35:40,331:INFO:  explainerdashboard: Not installed
2025-04-06 17:35:40,331:INFO:             autoviz: Not installed
2025-04-06 17:35:40,331:INFO:           fairlearn: Not installed
2025-04-06 17:35:40,331:INFO:          deepchecks: Not installed
2025-04-06 17:35:40,331:INFO:             xgboost: Not installed
2025-04-06 17:35:40,331:INFO:            catboost: Not installed
2025-04-06 17:35:40,331:INFO:              kmodes: Not installed
2025-04-06 17:35:40,331:INFO:             mlxtend: Not installed
2025-04-06 17:35:40,331:INFO:       statsforecast: Not installed
2025-04-06 17:35:40,331:INFO:        tune_sklearn: Not installed
2025-04-06 17:35:40,331:INFO:                 ray: Not installed
2025-04-06 17:35:40,331:INFO:            hyperopt: 0.2.7
2025-04-06 17:35:40,331:INFO:              optuna: 4.2.1
2025-04-06 17:35:40,331:INFO:               skopt: 0.10.2
2025-04-06 17:35:40,331:INFO:              mlflow: Not installed
2025-04-06 17:35:40,331:INFO:              gradio: Not installed
2025-04-06 17:35:40,331:INFO:             fastapi: Not installed
2025-04-06 17:35:40,331:INFO:             uvicorn: Not installed
2025-04-06 17:35:40,331:INFO:              m2cgen: Not installed
2025-04-06 17:35:40,331:INFO:           evidently: Not installed
2025-04-06 17:35:40,331:INFO:               fugue: Not installed
2025-04-06 17:35:40,331:INFO:           streamlit: Not installed
2025-04-06 17:35:40,331:INFO:             prophet: Not installed
2025-04-06 17:35:40,331:INFO:None
2025-04-06 17:35:40,331:INFO:Set up data.
2025-04-06 17:35:40,333:INFO:Set up folding strategy.
2025-04-06 17:35:40,333:INFO:Set up train/test split.
2025-04-06 17:35:40,335:INFO:Set up index.
2025-04-06 17:35:40,335:INFO:Assigning column types.
2025-04-06 17:35:40,336:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-06 17:35:40,356:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:35:40,356:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:35:40,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,388:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:35:40,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:35:40,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,401:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-06 17:35:40,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:35:40,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,452:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:35:40,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,464:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-06 17:35:40,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,528:INFO:Preparing preprocessing pipeline...
2025-04-06 17:35:40,528:INFO:Set up simple imputation.
2025-04-06 17:35:40,528:INFO:Set up feature normalization.
2025-04-06 17:35:40,539:INFO:Finished creating preprocessing pipeline.
2025-04-06 17:35:40,540:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-04-06 17:35:40,540:INFO:Creating final display dataframe.
2025-04-06 17:35:40,573:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Direction
2                   Target type            Binary
3           Original data shape          (358, 5)
4        Transformed data shape          (358, 5)
5   Transformed train set shape          (354, 5)
6    Transformed test set shape            (4, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              05fa
2025-04-06 17:35:40,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,645:INFO:setup() successfully completed in 0.32s...............
2025-04-06 17:35:40,647:INFO:gpu_param set to False
2025-04-06 17:35:40,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,713:INFO:gpu_param set to False
2025-04-06 17:35:40,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:35:40,778:INFO:Initializing compare_models()
2025-04-06 17:35:40,778:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, include=['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, 'include': ['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-06 17:35:40,778:INFO:Checking exceptions
2025-04-06 17:35:40,780:INFO:Preparing display monitor
2025-04-06 17:35:40,790:INFO:Initializing Gradient Boosting Classifier
2025-04-06 17:35:40,790:INFO:Total runtime is 0.0 minutes
2025-04-06 17:35:40,792:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:40,792:INFO:Initializing create_model()
2025-04-06 17:35:40,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:40,793:INFO:Checking exceptions
2025-04-06 17:35:40,793:INFO:Importing libraries
2025-04-06 17:35:40,793:INFO:Copying training dataset
2025-04-06 17:35:40,794:INFO:Defining folds
2025-04-06 17:35:40,795:INFO:Declaring metric variables
2025-04-06 17:35:40,796:INFO:Importing untrained model
2025-04-06 17:35:40,798:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 17:35:40,801:INFO:Starting cross validation
2025-04-06 17:35:40,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:40,931:INFO:Calculating mean and std
2025-04-06 17:35:40,931:INFO:Creating metrics dataframe
2025-04-06 17:35:40,932:INFO:Uploading results into container
2025-04-06 17:35:40,933:INFO:Uploading model into container now
2025-04-06 17:35:40,933:INFO:_master_model_container: 1
2025-04-06 17:35:40,933:INFO:_display_container: 2
2025-04-06 17:35:40,933:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 17:35:40,933:INFO:create_model() successfully completed......................................
2025-04-06 17:35:41,040:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:41,041:INFO:Creating metrics dataframe
2025-04-06 17:35:41,044:INFO:Initializing Logistic Regression
2025-04-06 17:35:41,044:INFO:Total runtime is 0.0042332768440246586 minutes
2025-04-06 17:35:41,045:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:41,046:INFO:Initializing create_model()
2025-04-06 17:35:41,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:41,046:INFO:Checking exceptions
2025-04-06 17:35:41,046:INFO:Importing libraries
2025-04-06 17:35:41,046:INFO:Copying training dataset
2025-04-06 17:35:41,047:INFO:Defining folds
2025-04-06 17:35:41,047:INFO:Declaring metric variables
2025-04-06 17:35:41,049:INFO:Importing untrained model
2025-04-06 17:35:41,051:INFO:Logistic Regression Imported successfully
2025-04-06 17:35:41,054:INFO:Starting cross validation
2025-04-06 17:35:41,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:41,088:INFO:Calculating mean and std
2025-04-06 17:35:41,088:INFO:Creating metrics dataframe
2025-04-06 17:35:41,089:INFO:Uploading results into container
2025-04-06 17:35:41,089:INFO:Uploading model into container now
2025-04-06 17:35:41,090:INFO:_master_model_container: 2
2025-04-06 17:35:41,090:INFO:_display_container: 2
2025-04-06 17:35:41,090:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:35:41,090:INFO:create_model() successfully completed......................................
2025-04-06 17:35:41,192:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:41,193:INFO:Creating metrics dataframe
2025-04-06 17:35:41,196:INFO:Initializing Extra Trees Classifier
2025-04-06 17:35:41,196:INFO:Total runtime is 0.006776185830434164 minutes
2025-04-06 17:35:41,198:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:41,198:INFO:Initializing create_model()
2025-04-06 17:35:41,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:41,198:INFO:Checking exceptions
2025-04-06 17:35:41,198:INFO:Importing libraries
2025-04-06 17:35:41,198:INFO:Copying training dataset
2025-04-06 17:35:41,200:INFO:Defining folds
2025-04-06 17:35:41,201:INFO:Declaring metric variables
2025-04-06 17:35:41,202:INFO:Importing untrained model
2025-04-06 17:35:41,204:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:35:41,207:INFO:Starting cross validation
2025-04-06 17:35:41,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:41,398:INFO:Calculating mean and std
2025-04-06 17:35:41,398:INFO:Creating metrics dataframe
2025-04-06 17:35:41,399:INFO:Uploading results into container
2025-04-06 17:35:41,400:INFO:Uploading model into container now
2025-04-06 17:35:41,400:INFO:_master_model_container: 3
2025-04-06 17:35:41,400:INFO:_display_container: 2
2025-04-06 17:35:41,400:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:35:41,400:INFO:create_model() successfully completed......................................
2025-04-06 17:35:41,507:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:41,507:INFO:Creating metrics dataframe
2025-04-06 17:35:41,510:INFO:Initializing Ridge Classifier
2025-04-06 17:35:41,510:INFO:Total runtime is 0.012009342511494955 minutes
2025-04-06 17:35:41,512:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:41,512:INFO:Initializing create_model()
2025-04-06 17:35:41,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:41,512:INFO:Checking exceptions
2025-04-06 17:35:41,513:INFO:Importing libraries
2025-04-06 17:35:41,513:INFO:Copying training dataset
2025-04-06 17:35:41,515:INFO:Defining folds
2025-04-06 17:35:41,515:INFO:Declaring metric variables
2025-04-06 17:35:41,516:INFO:Importing untrained model
2025-04-06 17:35:41,518:INFO:Ridge Classifier Imported successfully
2025-04-06 17:35:41,521:INFO:Starting cross validation
2025-04-06 17:35:41,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:41,555:INFO:Calculating mean and std
2025-04-06 17:35:41,555:INFO:Creating metrics dataframe
2025-04-06 17:35:41,556:INFO:Uploading results into container
2025-04-06 17:35:41,556:INFO:Uploading model into container now
2025-04-06 17:35:41,557:INFO:_master_model_container: 4
2025-04-06 17:35:41,557:INFO:_display_container: 2
2025-04-06 17:35:41,557:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:35:41,557:INFO:create_model() successfully completed......................................
2025-04-06 17:35:41,660:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:41,660:INFO:Creating metrics dataframe
2025-04-06 17:35:41,663:INFO:Initializing Quadratic Discriminant Analysis
2025-04-06 17:35:41,664:INFO:Total runtime is 0.014569997787475586 minutes
2025-04-06 17:35:41,665:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:41,665:INFO:Initializing create_model()
2025-04-06 17:35:41,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:41,666:INFO:Checking exceptions
2025-04-06 17:35:41,666:INFO:Importing libraries
2025-04-06 17:35:41,666:INFO:Copying training dataset
2025-04-06 17:35:41,667:INFO:Defining folds
2025-04-06 17:35:41,667:INFO:Declaring metric variables
2025-04-06 17:35:41,669:INFO:Importing untrained model
2025-04-06 17:35:41,670:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-06 17:35:41,674:INFO:Starting cross validation
2025-04-06 17:35:41,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:41,712:INFO:Calculating mean and std
2025-04-06 17:35:41,712:INFO:Creating metrics dataframe
2025-04-06 17:35:41,713:INFO:Uploading results into container
2025-04-06 17:35:41,713:INFO:Uploading model into container now
2025-04-06 17:35:41,714:INFO:_master_model_container: 5
2025-04-06 17:35:41,714:INFO:_display_container: 2
2025-04-06 17:35:41,714:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-06 17:35:41,714:INFO:create_model() successfully completed......................................
2025-04-06 17:35:41,815:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:41,815:INFO:Creating metrics dataframe
2025-04-06 17:35:41,819:INFO:Initializing Linear Discriminant Analysis
2025-04-06 17:35:41,819:INFO:Total runtime is 0.017154061794281007 minutes
2025-04-06 17:35:41,821:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:41,821:INFO:Initializing create_model()
2025-04-06 17:35:41,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:41,821:INFO:Checking exceptions
2025-04-06 17:35:41,821:INFO:Importing libraries
2025-04-06 17:35:41,821:INFO:Copying training dataset
2025-04-06 17:35:41,823:INFO:Defining folds
2025-04-06 17:35:41,823:INFO:Declaring metric variables
2025-04-06 17:35:41,825:INFO:Importing untrained model
2025-04-06 17:35:41,826:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:35:41,830:INFO:Starting cross validation
2025-04-06 17:35:41,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:41,871:INFO:Calculating mean and std
2025-04-06 17:35:41,871:INFO:Creating metrics dataframe
2025-04-06 17:35:41,872:INFO:Uploading results into container
2025-04-06 17:35:41,872:INFO:Uploading model into container now
2025-04-06 17:35:41,873:INFO:_master_model_container: 6
2025-04-06 17:35:41,873:INFO:_display_container: 2
2025-04-06 17:35:41,873:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:35:41,873:INFO:create_model() successfully completed......................................
2025-04-06 17:35:41,980:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:41,980:INFO:Creating metrics dataframe
2025-04-06 17:35:41,985:INFO:Initializing MLP Classifier
2025-04-06 17:35:41,985:INFO:Total runtime is 0.019920690854390462 minutes
2025-04-06 17:35:41,987:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:41,987:INFO:Initializing create_model()
2025-04-06 17:35:41,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:41,987:INFO:Checking exceptions
2025-04-06 17:35:41,987:INFO:Importing libraries
2025-04-06 17:35:41,987:INFO:Copying training dataset
2025-04-06 17:35:41,989:INFO:Defining folds
2025-04-06 17:35:41,989:INFO:Declaring metric variables
2025-04-06 17:35:41,991:INFO:Importing untrained model
2025-04-06 17:35:41,993:INFO:MLP Classifier Imported successfully
2025-04-06 17:35:41,996:INFO:Starting cross validation
2025-04-06 17:35:41,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:42,233:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,235:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,236:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,245:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,246:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,257:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,270:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,279:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,305:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,334:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:35:42,344:INFO:Calculating mean and std
2025-04-06 17:35:42,344:INFO:Creating metrics dataframe
2025-04-06 17:35:42,345:INFO:Uploading results into container
2025-04-06 17:35:42,346:INFO:Uploading model into container now
2025-04-06 17:35:42,346:INFO:_master_model_container: 7
2025-04-06 17:35:42,346:INFO:_display_container: 2
2025-04-06 17:35:42,347:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 17:35:42,347:INFO:create_model() successfully completed......................................
2025-04-06 17:35:42,454:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:42,454:INFO:Creating metrics dataframe
2025-04-06 17:35:42,459:INFO:Initializing Decision Tree Classifier
2025-04-06 17:35:42,459:INFO:Total runtime is 0.027820587158203125 minutes
2025-04-06 17:35:42,460:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:42,460:INFO:Initializing create_model()
2025-04-06 17:35:42,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:42,461:INFO:Checking exceptions
2025-04-06 17:35:42,461:INFO:Importing libraries
2025-04-06 17:35:42,461:INFO:Copying training dataset
2025-04-06 17:35:42,462:INFO:Defining folds
2025-04-06 17:35:42,462:INFO:Declaring metric variables
2025-04-06 17:35:42,464:INFO:Importing untrained model
2025-04-06 17:35:42,466:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:35:42,470:INFO:Starting cross validation
2025-04-06 17:35:42,470:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:42,518:INFO:Calculating mean and std
2025-04-06 17:35:42,518:INFO:Creating metrics dataframe
2025-04-06 17:35:42,519:INFO:Uploading results into container
2025-04-06 17:35:42,520:INFO:Uploading model into container now
2025-04-06 17:35:42,520:INFO:_master_model_container: 8
2025-04-06 17:35:42,520:INFO:_display_container: 2
2025-04-06 17:35:42,520:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:35:42,520:INFO:create_model() successfully completed......................................
2025-04-06 17:35:42,626:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:42,626:INFO:Creating metrics dataframe
2025-04-06 17:35:42,630:INFO:Initializing Random Forest Classifier
2025-04-06 17:35:42,630:INFO:Total runtime is 0.030679372946421306 minutes
2025-04-06 17:35:42,632:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:42,632:INFO:Initializing create_model()
2025-04-06 17:35:42,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:42,633:INFO:Checking exceptions
2025-04-06 17:35:42,633:INFO:Importing libraries
2025-04-06 17:35:42,633:INFO:Copying training dataset
2025-04-06 17:35:42,635:INFO:Defining folds
2025-04-06 17:35:42,635:INFO:Declaring metric variables
2025-04-06 17:35:42,636:INFO:Importing untrained model
2025-04-06 17:35:42,638:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:35:42,641:INFO:Starting cross validation
2025-04-06 17:35:42,642:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:42,879:INFO:Calculating mean and std
2025-04-06 17:35:42,880:INFO:Creating metrics dataframe
2025-04-06 17:35:42,881:INFO:Uploading results into container
2025-04-06 17:35:42,881:INFO:Uploading model into container now
2025-04-06 17:35:42,881:INFO:_master_model_container: 9
2025-04-06 17:35:42,881:INFO:_display_container: 2
2025-04-06 17:35:42,882:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:35:42,882:INFO:create_model() successfully completed......................................
2025-04-06 17:35:42,986:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:42,987:INFO:Creating metrics dataframe
2025-04-06 17:35:42,991:INFO:Initializing custom model SVM - Radial Kernel
2025-04-06 17:35:42,991:INFO:Total runtime is 0.03669595718383789 minutes
2025-04-06 17:35:42,993:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:42,993:INFO:Initializing create_model()
2025-04-06 17:35:42,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED12250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:42,993:INFO:Checking exceptions
2025-04-06 17:35:42,993:INFO:Importing libraries
2025-04-06 17:35:42,994:INFO:Copying training dataset
2025-04-06 17:35:42,996:INFO:Defining folds
2025-04-06 17:35:42,996:INFO:Declaring metric variables
2025-04-06 17:35:42,998:INFO:Importing untrained model
2025-04-06 17:35:42,998:INFO:Declaring custom model
2025-04-06 17:35:43,001:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:35:43,004:INFO:Starting cross validation
2025-04-06 17:35:43,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:43,055:INFO:Calculating mean and std
2025-04-06 17:35:43,055:INFO:Creating metrics dataframe
2025-04-06 17:35:43,056:INFO:Uploading results into container
2025-04-06 17:35:43,056:INFO:Uploading model into container now
2025-04-06 17:35:43,057:INFO:_master_model_container: 10
2025-04-06 17:35:43,057:INFO:_display_container: 2
2025-04-06 17:35:43,057:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:35:43,057:INFO:create_model() successfully completed......................................
2025-04-06 17:35:43,158:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:43,158:INFO:Creating metrics dataframe
2025-04-06 17:35:43,163:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-04-06 17:35:43,167:INFO:Initializing create_model()
2025-04-06 17:35:43,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:43,167:INFO:Checking exceptions
2025-04-06 17:35:43,168:INFO:Importing libraries
2025-04-06 17:35:43,168:INFO:Copying training dataset
2025-04-06 17:35:43,169:INFO:Defining folds
2025-04-06 17:35:43,169:INFO:Declaring metric variables
2025-04-06 17:35:43,170:INFO:Importing untrained model
2025-04-06 17:35:43,170:INFO:Declaring custom model
2025-04-06 17:35:43,170:INFO:Logistic Regression Imported successfully
2025-04-06 17:35:43,170:INFO:Cross validation set to False
2025-04-06 17:35:43,170:INFO:Fitting Model
2025-04-06 17:35:43,175:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:35:43,175:INFO:create_model() successfully completed......................................
2025-04-06 17:35:43,283:INFO:Initializing create_model()
2025-04-06 17:35:43,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:43,283:INFO:Checking exceptions
2025-04-06 17:35:43,284:INFO:Importing libraries
2025-04-06 17:35:43,284:INFO:Copying training dataset
2025-04-06 17:35:43,286:INFO:Defining folds
2025-04-06 17:35:43,286:INFO:Declaring metric variables
2025-04-06 17:35:43,286:INFO:Importing untrained model
2025-04-06 17:35:43,286:INFO:Declaring custom model
2025-04-06 17:35:43,286:INFO:Ridge Classifier Imported successfully
2025-04-06 17:35:43,286:INFO:Cross validation set to False
2025-04-06 17:35:43,286:INFO:Fitting Model
2025-04-06 17:35:43,291:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:35:43,291:INFO:create_model() successfully completed......................................
2025-04-06 17:35:43,401:INFO:Initializing create_model()
2025-04-06 17:35:43,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:43,401:INFO:Checking exceptions
2025-04-06 17:35:43,402:INFO:Importing libraries
2025-04-06 17:35:43,402:INFO:Copying training dataset
2025-04-06 17:35:43,404:INFO:Defining folds
2025-04-06 17:35:43,404:INFO:Declaring metric variables
2025-04-06 17:35:43,404:INFO:Importing untrained model
2025-04-06 17:35:43,404:INFO:Declaring custom model
2025-04-06 17:35:43,404:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:35:43,405:INFO:Cross validation set to False
2025-04-06 17:35:43,405:INFO:Fitting Model
2025-04-06 17:35:43,410:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:35:43,410:INFO:create_model() successfully completed......................................
2025-04-06 17:35:43,521:INFO:Initializing create_model()
2025-04-06 17:35:43,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:43,521:INFO:Checking exceptions
2025-04-06 17:35:43,522:INFO:Importing libraries
2025-04-06 17:35:43,522:INFO:Copying training dataset
2025-04-06 17:35:43,524:INFO:Defining folds
2025-04-06 17:35:43,524:INFO:Declaring metric variables
2025-04-06 17:35:43,524:INFO:Importing untrained model
2025-04-06 17:35:43,524:INFO:Declaring custom model
2025-04-06 17:35:43,524:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:35:43,525:INFO:Cross validation set to False
2025-04-06 17:35:43,525:INFO:Fitting Model
2025-04-06 17:35:43,533:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:35:43,533:INFO:create_model() successfully completed......................................
2025-04-06 17:35:43,635:INFO:Initializing create_model()
2025-04-06 17:35:43,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:43,635:INFO:Checking exceptions
2025-04-06 17:35:43,636:INFO:Importing libraries
2025-04-06 17:35:43,636:INFO:Copying training dataset
2025-04-06 17:35:43,638:INFO:Defining folds
2025-04-06 17:35:43,638:INFO:Declaring metric variables
2025-04-06 17:35:43,638:INFO:Importing untrained model
2025-04-06 17:35:43,638:INFO:Declaring custom model
2025-04-06 17:35:43,638:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:35:43,638:INFO:Cross validation set to False
2025-04-06 17:35:43,638:INFO:Fitting Model
2025-04-06 17:35:43,726:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:35:43,727:INFO:create_model() successfully completed......................................
2025-04-06 17:35:43,851:INFO:_master_model_container: 10
2025-04-06 17:35:43,851:INFO:_display_container: 2
2025-04-06 17:35:43,853:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)]
2025-04-06 17:35:43,853:INFO:compare_models() successfully completed......................................
2025-04-06 17:35:43,854:INFO:Initializing tune_model()
2025-04-06 17:35:43,854:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=4, round=4, n_iter=25, custom_grid={'C': [1], 'solver': ['liblinear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>)
2025-04-06 17:35:43,854:INFO:Checking exceptions
2025-04-06 17:35:43,867:INFO:Copying training dataset
2025-04-06 17:35:43,871:INFO:Checking base model
2025-04-06 17:35:43,871:INFO:Base model : Logistic Regression
2025-04-06 17:35:43,874:INFO:Declaring metric variables
2025-04-06 17:35:43,878:INFO:Defining Hyperparameters
2025-04-06 17:35:43,989:INFO:custom_grid: {'actual_estimator__C': [1], 'actual_estimator__solver': ['liblinear']}
2025-04-06 17:35:43,989:INFO:Tuning with n_jobs=-1
2025-04-06 17:35:43,989:INFO:Initializing GridSearchCV
2025-04-06 17:35:44,007:INFO:best_params: {'actual_estimator__C': 1, 'actual_estimator__solver': 'liblinear'}
2025-04-06 17:35:44,007:INFO:Hyperparameter search completed
2025-04-06 17:35:44,007:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:44,007:INFO:Initializing create_model()
2025-04-06 17:35:44,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF6D8E9A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1, 'solver': 'liblinear'})
2025-04-06 17:35:44,007:INFO:Checking exceptions
2025-04-06 17:35:44,007:INFO:Importing libraries
2025-04-06 17:35:44,008:INFO:Copying training dataset
2025-04-06 17:35:44,009:INFO:Defining folds
2025-04-06 17:35:44,009:INFO:Declaring metric variables
2025-04-06 17:35:44,011:INFO:Importing untrained model
2025-04-06 17:35:44,012:INFO:Declaring custom model
2025-04-06 17:35:44,013:INFO:Logistic Regression Imported successfully
2025-04-06 17:35:44,017:INFO:Starting cross validation
2025-04-06 17:35:44,017:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:44,037:INFO:Calculating mean and std
2025-04-06 17:35:44,037:INFO:Creating metrics dataframe
2025-04-06 17:35:44,040:INFO:Finalizing model
2025-04-06 17:35:44,047:INFO:Uploading results into container
2025-04-06 17:35:44,048:INFO:Uploading model into container now
2025-04-06 17:35:44,048:INFO:_master_model_container: 11
2025-04-06 17:35:44,048:INFO:_display_container: 3
2025-04-06 17:35:44,048:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:35:44,048:INFO:create_model() successfully completed......................................
2025-04-06 17:35:44,148:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:44,148:INFO:choose_better activated
2025-04-06 17:35:44,150:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:44,150:INFO:Initializing create_model()
2025-04-06 17:35:44,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:44,150:INFO:Checking exceptions
2025-04-06 17:35:44,151:INFO:Importing libraries
2025-04-06 17:35:44,151:INFO:Copying training dataset
2025-04-06 17:35:44,152:INFO:Defining folds
2025-04-06 17:35:44,152:INFO:Declaring metric variables
2025-04-06 17:35:44,153:INFO:Importing untrained model
2025-04-06 17:35:44,153:INFO:Declaring custom model
2025-04-06 17:35:44,153:INFO:Logistic Regression Imported successfully
2025-04-06 17:35:44,153:INFO:Starting cross validation
2025-04-06 17:35:44,153:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:44,175:INFO:Calculating mean and std
2025-04-06 17:35:44,175:INFO:Creating metrics dataframe
2025-04-06 17:35:44,176:INFO:Finalizing model
2025-04-06 17:35:44,182:INFO:Uploading results into container
2025-04-06 17:35:44,182:INFO:Uploading model into container now
2025-04-06 17:35:44,182:INFO:_master_model_container: 12
2025-04-06 17:35:44,182:INFO:_display_container: 4
2025-04-06 17:35:44,182:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:35:44,182:INFO:create_model() successfully completed......................................
2025-04-06 17:35:44,291:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:44,291:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4633
2025-04-06 17:35:44,291:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.4636
2025-04-06 17:35:44,291:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-04-06 17:35:44,291:INFO:choose_better completed
2025-04-06 17:35:44,295:INFO:_master_model_container: 12
2025-04-06 17:35:44,296:INFO:_display_container: 3
2025-04-06 17:35:44,296:INFO:LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:35:44,296:INFO:tune_model() successfully completed......................................
2025-04-06 17:35:44,403:INFO:Initializing tune_model()
2025-04-06 17:35:44,403:INFO:tune_model(estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'alpha': [1], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>)
2025-04-06 17:35:44,403:INFO:Checking exceptions
2025-04-06 17:35:44,412:INFO:Copying training dataset
2025-04-06 17:35:44,414:INFO:Checking base model
2025-04-06 17:35:44,414:INFO:Base model : Ridge Classifier
2025-04-06 17:35:44,416:INFO:Declaring metric variables
2025-04-06 17:35:44,417:INFO:Defining Hyperparameters
2025-04-06 17:35:44,523:INFO:custom_grid: {'actual_estimator__alpha': [1], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:35:44,523:INFO:Tuning with n_jobs=-1
2025-04-06 17:35:44,523:INFO:Initializing GridSearchCV
2025-04-06 17:35:44,548:INFO:best_params: {'actual_estimator__alpha': 1, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:35:44,548:INFO:Hyperparameter search completed
2025-04-06 17:35:44,548:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:44,549:INFO:Initializing create_model()
2025-04-06 17:35:44,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF6D7E130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'alpha': 1, 'solver': 'lsqr'})
2025-04-06 17:35:44,549:INFO:Checking exceptions
2025-04-06 17:35:44,549:INFO:Importing libraries
2025-04-06 17:35:44,549:INFO:Copying training dataset
2025-04-06 17:35:44,551:INFO:Defining folds
2025-04-06 17:35:44,551:INFO:Declaring metric variables
2025-04-06 17:35:44,553:INFO:Importing untrained model
2025-04-06 17:35:44,553:INFO:Declaring custom model
2025-04-06 17:35:44,555:INFO:Ridge Classifier Imported successfully
2025-04-06 17:35:44,558:INFO:Starting cross validation
2025-04-06 17:35:44,558:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:44,595:INFO:Calculating mean and std
2025-04-06 17:35:44,595:INFO:Creating metrics dataframe
2025-04-06 17:35:44,598:INFO:Finalizing model
2025-04-06 17:35:44,605:INFO:Uploading results into container
2025-04-06 17:35:44,606:INFO:Uploading model into container now
2025-04-06 17:35:44,606:INFO:_master_model_container: 13
2025-04-06 17:35:44,606:INFO:_display_container: 4
2025-04-06 17:35:44,606:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001)
2025-04-06 17:35:44,606:INFO:create_model() successfully completed......................................
2025-04-06 17:35:44,714:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:44,715:INFO:choose_better activated
2025-04-06 17:35:44,717:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:44,717:INFO:Initializing create_model()
2025-04-06 17:35:44,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:44,717:INFO:Checking exceptions
2025-04-06 17:35:44,718:INFO:Importing libraries
2025-04-06 17:35:44,718:INFO:Copying training dataset
2025-04-06 17:35:44,720:INFO:Defining folds
2025-04-06 17:35:44,720:INFO:Declaring metric variables
2025-04-06 17:35:44,720:INFO:Importing untrained model
2025-04-06 17:35:44,720:INFO:Declaring custom model
2025-04-06 17:35:44,721:INFO:Ridge Classifier Imported successfully
2025-04-06 17:35:44,721:INFO:Starting cross validation
2025-04-06 17:35:44,721:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:44,751:INFO:Calculating mean and std
2025-04-06 17:35:44,751:INFO:Creating metrics dataframe
2025-04-06 17:35:44,752:INFO:Finalizing model
2025-04-06 17:35:44,758:INFO:Uploading results into container
2025-04-06 17:35:44,758:INFO:Uploading model into container now
2025-04-06 17:35:44,758:INFO:_master_model_container: 14
2025-04-06 17:35:44,758:INFO:_display_container: 5
2025-04-06 17:35:44,758:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:35:44,758:INFO:create_model() successfully completed......................................
2025-04-06 17:35:44,873:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:44,874:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:35:44,874:INFO:RidgeClassifier(alpha=1, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='lsqr',
                tol=0.0001) result for AUC is 0.4628
2025-04-06 17:35:44,874:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) is best model
2025-04-06 17:35:44,874:INFO:choose_better completed
2025-04-06 17:35:44,874:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:35:44,879:INFO:_master_model_container: 14
2025-04-06 17:35:44,879:INFO:_display_container: 4
2025-04-06 17:35:44,879:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:35:44,879:INFO:tune_model() successfully completed......................................
2025-04-06 17:35:44,983:INFO:Initializing tune_model()
2025-04-06 17:35:44,983:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=4, round=4, n_iter=25, custom_grid={'shrinkage': [0.0], 'solver': ['lsqr']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>)
2025-04-06 17:35:44,983:INFO:Checking exceptions
2025-04-06 17:35:44,992:INFO:Copying training dataset
2025-04-06 17:35:44,993:INFO:Checking base model
2025-04-06 17:35:44,993:INFO:Base model : Linear Discriminant Analysis
2025-04-06 17:35:44,995:INFO:Declaring metric variables
2025-04-06 17:35:44,996:INFO:Defining Hyperparameters
2025-04-06 17:35:45,108:INFO:custom_grid: {'actual_estimator__shrinkage': [0.0], 'actual_estimator__solver': ['lsqr']}
2025-04-06 17:35:45,108:INFO:Tuning with n_jobs=-1
2025-04-06 17:35:45,108:INFO:Initializing GridSearchCV
2025-04-06 17:35:45,131:INFO:best_params: {'actual_estimator__shrinkage': 0.0, 'actual_estimator__solver': 'lsqr'}
2025-04-06 17:35:45,131:INFO:Hyperparameter search completed
2025-04-06 17:35:45,131:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:45,132:INFO:Initializing create_model()
2025-04-06 17:35:45,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEED67430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'shrinkage': 0.0, 'solver': 'lsqr'})
2025-04-06 17:35:45,132:INFO:Checking exceptions
2025-04-06 17:35:45,132:INFO:Importing libraries
2025-04-06 17:35:45,132:INFO:Copying training dataset
2025-04-06 17:35:45,134:INFO:Defining folds
2025-04-06 17:35:45,134:INFO:Declaring metric variables
2025-04-06 17:35:45,135:INFO:Importing untrained model
2025-04-06 17:35:45,136:INFO:Declaring custom model
2025-04-06 17:35:45,138:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:35:45,141:INFO:Starting cross validation
2025-04-06 17:35:45,141:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:45,162:INFO:Calculating mean and std
2025-04-06 17:35:45,162:INFO:Creating metrics dataframe
2025-04-06 17:35:45,165:INFO:Finalizing model
2025-04-06 17:35:45,172:INFO:Uploading results into container
2025-04-06 17:35:45,173:INFO:Uploading model into container now
2025-04-06 17:35:45,173:INFO:_master_model_container: 15
2025-04-06 17:35:45,173:INFO:_display_container: 5
2025-04-06 17:35:45,173:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:35:45,173:INFO:create_model() successfully completed......................................
2025-04-06 17:35:45,273:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:45,274:INFO:choose_better activated
2025-04-06 17:35:45,275:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:45,276:INFO:Initializing create_model()
2025-04-06 17:35:45,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:45,276:INFO:Checking exceptions
2025-04-06 17:35:45,277:INFO:Importing libraries
2025-04-06 17:35:45,277:INFO:Copying training dataset
2025-04-06 17:35:45,278:INFO:Defining folds
2025-04-06 17:35:45,278:INFO:Declaring metric variables
2025-04-06 17:35:45,278:INFO:Importing untrained model
2025-04-06 17:35:45,278:INFO:Declaring custom model
2025-04-06 17:35:45,279:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:35:45,279:INFO:Starting cross validation
2025-04-06 17:35:45,279:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:45,301:INFO:Calculating mean and std
2025-04-06 17:35:45,301:INFO:Creating metrics dataframe
2025-04-06 17:35:45,302:INFO:Finalizing model
2025-04-06 17:35:45,307:INFO:Uploading results into container
2025-04-06 17:35:45,308:INFO:Uploading model into container now
2025-04-06 17:35:45,308:INFO:_master_model_container: 16
2025-04-06 17:35:45,308:INFO:_display_container: 6
2025-04-06 17:35:45,308:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:35:45,308:INFO:create_model() successfully completed......................................
2025-04-06 17:35:45,414:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:45,415:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:35:45,415:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.0, solver='lsqr',
                           store_covariance=False, tol=0.0001) result for AUC is 0.4633
2025-04-06 17:35:45,415:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2025-04-06 17:35:45,415:INFO:choose_better completed
2025-04-06 17:35:45,415:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:35:45,420:INFO:_master_model_container: 16
2025-04-06 17:35:45,420:INFO:_display_container: 5
2025-04-06 17:35:45,420:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:35:45,420:INFO:tune_model() successfully completed......................................
2025-04-06 17:35:45,529:INFO:Initializing tune_model()
2025-04-06 17:35:45,530:INFO:tune_model(estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=4, round=4, n_iter=25, custom_grid={'probability': [True], 'C': [1.0], 'kernel': ['linear']}, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>)
2025-04-06 17:35:45,530:INFO:Checking exceptions
2025-04-06 17:35:45,538:INFO:Copying training dataset
2025-04-06 17:35:45,540:INFO:Checking base model
2025-04-06 17:35:45,540:INFO:Base model : SVM - Radial Kernel
2025-04-06 17:35:45,542:INFO:Declaring metric variables
2025-04-06 17:35:45,543:INFO:Defining Hyperparameters
2025-04-06 17:35:45,649:INFO:custom_grid: {'actual_estimator__probability': [True], 'actual_estimator__C': [1.0], 'actual_estimator__kernel': ['linear']}
2025-04-06 17:35:45,649:INFO:Tuning with n_jobs=-1
2025-04-06 17:35:45,649:INFO:Initializing GridSearchCV
2025-04-06 17:35:45,676:INFO:best_params: {'actual_estimator__C': 1.0, 'actual_estimator__kernel': 'linear', 'actual_estimator__probability': True}
2025-04-06 17:35:45,676:INFO:Hyperparameter search completed
2025-04-06 17:35:45,676:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:45,676:INFO:Initializing create_model()
2025-04-06 17:35:45,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF129DF70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'C': 1.0, 'kernel': 'linear', 'probability': True})
2025-04-06 17:35:45,676:INFO:Checking exceptions
2025-04-06 17:35:45,676:INFO:Importing libraries
2025-04-06 17:35:45,677:INFO:Copying training dataset
2025-04-06 17:35:45,680:INFO:Defining folds
2025-04-06 17:35:45,680:INFO:Declaring metric variables
2025-04-06 17:35:45,682:INFO:Importing untrained model
2025-04-06 17:35:45,682:INFO:Declaring custom model
2025-04-06 17:35:45,684:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:35:45,688:INFO:Starting cross validation
2025-04-06 17:35:45,689:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:45,723:INFO:Calculating mean and std
2025-04-06 17:35:45,723:INFO:Creating metrics dataframe
2025-04-06 17:35:45,726:INFO:Finalizing model
2025-04-06 17:35:45,737:INFO:Uploading results into container
2025-04-06 17:35:45,738:INFO:Uploading model into container now
2025-04-06 17:35:45,738:INFO:_master_model_container: 17
2025-04-06 17:35:45,738:INFO:_display_container: 6
2025-04-06 17:35:45,738:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:35:45,738:INFO:create_model() successfully completed......................................
2025-04-06 17:35:45,855:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:45,855:INFO:choose_better activated
2025-04-06 17:35:45,857:INFO:SubProcess create_model() called ==================================
2025-04-06 17:35:45,857:INFO:Initializing create_model()
2025-04-06 17:35:45,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:35:45,858:INFO:Checking exceptions
2025-04-06 17:35:45,859:INFO:Importing libraries
2025-04-06 17:35:45,859:INFO:Copying training dataset
2025-04-06 17:35:45,860:INFO:Defining folds
2025-04-06 17:35:45,860:INFO:Declaring metric variables
2025-04-06 17:35:45,860:INFO:Importing untrained model
2025-04-06 17:35:45,860:INFO:Declaring custom model
2025-04-06 17:35:45,861:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:35:45,861:INFO:Starting cross validation
2025-04-06 17:35:45,861:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:35:45,897:INFO:Calculating mean and std
2025-04-06 17:35:45,897:INFO:Creating metrics dataframe
2025-04-06 17:35:45,898:INFO:Finalizing model
2025-04-06 17:35:45,907:INFO:Uploading results into container
2025-04-06 17:35:45,908:INFO:Uploading model into container now
2025-04-06 17:35:45,908:INFO:_master_model_container: 18
2025-04-06 17:35:45,908:INFO:_display_container: 7
2025-04-06 17:35:45,908:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:35:45,908:INFO:create_model() successfully completed......................................
2025-04-06 17:35:46,019:INFO:SubProcess create_model() end ==================================
2025-04-06 17:35:46,019:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:35:46,019:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) result for AUC is 0.4686
2025-04-06 17:35:46,019:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False) is best model
2025-04-06 17:35:46,019:INFO:choose_better completed
2025-04-06 17:35:46,019:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:35:46,024:INFO:_master_model_container: 18
2025-04-06 17:35:46,025:INFO:_display_container: 6
2025-04-06 17:35:46,025:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:35:46,025:INFO:tune_model() successfully completed......................................
2025-04-06 17:35:46,136:INFO:Initializing tune_model()
2025-04-06 17:35:46,136:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>)
2025-04-06 17:35:46,136:INFO:Checking exceptions
2025-04-06 17:35:46,136:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:35:46,146:INFO:Copying training dataset
2025-04-06 17:35:46,148:INFO:Checking base model
2025-04-06 17:35:46,148:INFO:Base model : Random Forest Classifier
2025-04-06 17:35:46,151:INFO:Declaring metric variables
2025-04-06 17:35:46,154:INFO:Defining Hyperparameters
2025-04-06 17:35:46,275:INFO:Tuning with n_jobs=-1
2025-04-06 17:35:46,278:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:36:00,627:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', True), ('actual_estimator__class_weight', None), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 11), ('actual_estimator__max_features', 0.8300057969327517), ('actual_estimator__min_impurity_decrease', 3.341748754047965e-07), ('actual_estimator__min_samples_leaf', 4), ('actual_estimator__min_samples_split', 3), ('actual_estimator__n_estimators', 257)])
2025-04-06 17:36:00,628:INFO:Hyperparameter search completed
2025-04-06 17:36:00,628:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:00,629:INFO:Initializing create_model()
2025-04-06 17:36:00,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF6B76760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': True, 'class_weight': None, 'criterion': 'entropy', 'max_depth': 11, 'max_features': 0.8300057969327517, 'min_impurity_decrease': 3.341748754047965e-07, 'min_samples_leaf': 4, 'min_samples_split': 3, 'n_estimators': 257})
2025-04-06 17:36:00,629:INFO:Checking exceptions
2025-04-06 17:36:00,629:INFO:Importing libraries
2025-04-06 17:36:00,629:INFO:Copying training dataset
2025-04-06 17:36:00,631:INFO:Defining folds
2025-04-06 17:36:00,631:INFO:Declaring metric variables
2025-04-06 17:36:00,632:INFO:Importing untrained model
2025-04-06 17:36:00,633:INFO:Declaring custom model
2025-04-06 17:36:00,635:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:36:00,638:INFO:Starting cross validation
2025-04-06 17:36:00,638:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:00,922:INFO:Calculating mean and std
2025-04-06 17:36:00,923:INFO:Creating metrics dataframe
2025-04-06 17:36:00,925:INFO:Finalizing model
2025-04-06 17:36:01,116:INFO:Uploading results into container
2025-04-06 17:36:01,116:INFO:Uploading model into container now
2025-04-06 17:36:01,117:INFO:_master_model_container: 19
2025-04-06 17:36:01,117:INFO:_display_container: 7
2025-04-06 17:36:01,117:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:36:01,117:INFO:create_model() successfully completed......................................
2025-04-06 17:36:01,222:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:01,222:INFO:choose_better activated
2025-04-06 17:36:01,225:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:01,225:INFO:Initializing create_model()
2025-04-06 17:36:01,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:01,225:INFO:Checking exceptions
2025-04-06 17:36:01,226:INFO:Importing libraries
2025-04-06 17:36:01,226:INFO:Copying training dataset
2025-04-06 17:36:01,228:INFO:Defining folds
2025-04-06 17:36:01,228:INFO:Declaring metric variables
2025-04-06 17:36:01,228:INFO:Importing untrained model
2025-04-06 17:36:01,228:INFO:Declaring custom model
2025-04-06 17:36:01,228:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:36:01,228:INFO:Starting cross validation
2025-04-06 17:36:01,229:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:01,442:INFO:Calculating mean and std
2025-04-06 17:36:01,443:INFO:Creating metrics dataframe
2025-04-06 17:36:01,443:INFO:Finalizing model
2025-04-06 17:36:01,537:INFO:Uploading results into container
2025-04-06 17:36:01,538:INFO:Uploading model into container now
2025-04-06 17:36:01,538:INFO:_master_model_container: 20
2025-04-06 17:36:01,538:INFO:_display_container: 8
2025-04-06 17:36:01,539:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:36:01,539:INFO:create_model() successfully completed......................................
2025-04-06 17:36:01,643:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:01,643:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for AUC is 0.5485
2025-04-06 17:36:01,644:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for AUC is 0.5656
2025-04-06 17:36:01,644:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2025-04-06 17:36:01,644:INFO:choose_better completed
2025-04-06 17:36:01,649:INFO:_master_model_container: 20
2025-04-06 17:36:01,649:INFO:_display_container: 7
2025-04-06 17:36:01,649:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:36:01,649:INFO:tune_model() successfully completed......................................
2025-04-06 17:36:01,754:INFO:Initializing finalize_model()
2025-04-06 17:36:01,754:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:36:01,754:INFO:Finalizing LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:36:01,755:INFO:Initializing create_model()
2025-04-06 17:36:01,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:01,755:INFO:Checking exceptions
2025-04-06 17:36:01,756:INFO:Importing libraries
2025-04-06 17:36:01,756:INFO:Copying training dataset
2025-04-06 17:36:01,757:INFO:Defining folds
2025-04-06 17:36:01,757:INFO:Declaring metric variables
2025-04-06 17:36:01,757:INFO:Importing untrained model
2025-04-06 17:36:01,757:INFO:Declaring custom model
2025-04-06 17:36:01,757:INFO:Logistic Regression Imported successfully
2025-04-06 17:36:01,757:INFO:Cross validation set to False
2025-04-06 17:36:01,757:INFO:Fitting Model
2025-04-06 17:36:01,763:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:36:01,763:INFO:create_model() successfully completed......................................
2025-04-06 17:36:01,872:INFO:_master_model_container: 20
2025-04-06 17:36:01,872:INFO:_display_container: 7
2025-04-06 17:36:01,874:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='liblinear', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-04-06 17:36:01,874:INFO:finalize_model() successfully completed......................................
2025-04-06 17:36:01,984:INFO:Initializing finalize_model()
2025-04-06 17:36:01,984:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:36:01,984:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:36:01,986:INFO:Initializing create_model()
2025-04-06 17:36:01,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:01,986:INFO:Checking exceptions
2025-04-06 17:36:01,987:INFO:Importing libraries
2025-04-06 17:36:01,987:INFO:Copying training dataset
2025-04-06 17:36:01,987:INFO:Defining folds
2025-04-06 17:36:01,987:INFO:Declaring metric variables
2025-04-06 17:36:01,987:INFO:Importing untrained model
2025-04-06 17:36:01,987:INFO:Declaring custom model
2025-04-06 17:36:01,988:INFO:Ridge Classifier Imported successfully
2025-04-06 17:36:01,988:INFO:Cross validation set to False
2025-04-06 17:36:01,988:INFO:Fitting Model
2025-04-06 17:36:01,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:36:01,995:INFO:create_model() successfully completed......................................
2025-04-06 17:36:02,107:INFO:_master_model_container: 20
2025-04-06 17:36:02,107:INFO:_display_container: 7
2025-04-06 17:36:02,109:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-04-06 17:36:02,109:INFO:finalize_model() successfully completed......................................
2025-04-06 17:36:02,220:INFO:Initializing finalize_model()
2025-04-06 17:36:02,220:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:36:02,220:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:36:02,221:INFO:Initializing create_model()
2025-04-06 17:36:02,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:02,221:INFO:Checking exceptions
2025-04-06 17:36:02,222:INFO:Importing libraries
2025-04-06 17:36:02,222:INFO:Copying training dataset
2025-04-06 17:36:02,223:INFO:Defining folds
2025-04-06 17:36:02,223:INFO:Declaring metric variables
2025-04-06 17:36:02,223:INFO:Importing untrained model
2025-04-06 17:36:02,223:INFO:Declaring custom model
2025-04-06 17:36:02,223:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:36:02,223:INFO:Cross validation set to False
2025-04-06 17:36:02,223:INFO:Fitting Model
2025-04-06 17:36:02,229:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:36:02,229:INFO:create_model() successfully completed......................................
2025-04-06 17:36:02,330:INFO:_master_model_container: 20
2025-04-06 17:36:02,330:INFO:_display_container: 7
2025-04-06 17:36:02,332:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-04-06 17:36:02,332:INFO:finalize_model() successfully completed......................................
2025-04-06 17:36:02,439:INFO:Initializing finalize_model()
2025-04-06 17:36:02,439:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:36:02,439:INFO:Finalizing SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:36:02,440:INFO:Initializing create_model()
2025-04-06 17:36:02,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:02,440:INFO:Checking exceptions
2025-04-06 17:36:02,441:INFO:Importing libraries
2025-04-06 17:36:02,441:INFO:Copying training dataset
2025-04-06 17:36:02,441:INFO:Defining folds
2025-04-06 17:36:02,441:INFO:Declaring metric variables
2025-04-06 17:36:02,442:INFO:Importing untrained model
2025-04-06 17:36:02,442:INFO:Declaring custom model
2025-04-06 17:36:02,442:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:36:02,442:INFO:Cross validation set to False
2025-04-06 17:36:02,442:INFO:Fitting Model
2025-04-06 17:36:02,453:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:36:02,453:INFO:create_model() successfully completed......................................
2025-04-06 17:36:02,556:INFO:_master_model_container: 20
2025-04-06 17:36:02,556:INFO:_display_container: 7
2025-04-06 17:36:02,558:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None,
                     coef0=0.0, decision_function_shape='ovr', degree=3,
                     gamma='scale', kernel='linear', max_iter=-1,
                     probability=True, random_state=None, shrinking=True,
                     tol=0.001, verbose=False))],
         verbose=False)
2025-04-06 17:36:02,558:INFO:finalize_model() successfully completed......................................
2025-04-06 17:36:02,664:INFO:Initializing finalize_model()
2025-04-06 17:36:02,665:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:36:02,665:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:36:02,666:INFO:Initializing create_model()
2025-04-06 17:36:02,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF14857C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=11,
                       max_features=0.8300057969327517, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.341748754047965e-07,
                       min_samples_leaf=4, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=257, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:02,666:INFO:Checking exceptions
2025-04-06 17:36:02,667:INFO:Importing libraries
2025-04-06 17:36:02,667:INFO:Copying training dataset
2025-04-06 17:36:02,667:INFO:Defining folds
2025-04-06 17:36:02,667:INFO:Declaring metric variables
2025-04-06 17:36:02,667:INFO:Importing untrained model
2025-04-06 17:36:02,667:INFO:Declaring custom model
2025-04-06 17:36:02,668:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:36:02,668:INFO:Cross validation set to False
2025-04-06 17:36:02,668:INFO:Fitting Model
2025-04-06 17:36:02,866:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:36:02,866:INFO:create_model() successfully completed......................................
2025-04-06 17:36:02,975:INFO:_master_model_container: 20
2025-04-06 17:36:02,986:INFO:_display_container: 7
2025-04-06 17:36:02,988:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                        class_weight=None, criterion='entropy',
                                        max_depth=11,
                                        max_features=0.8300057969327517,
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=3.341748754047965e-07,
                                        min_samples_leaf=4, min_samples_split=3,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=257,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:36:02,988:INFO:finalize_model() successfully completed......................................
2025-04-06 17:36:03,105:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\arch\bootstrap\base.py:402: FutureWarning:

random_state is deprecated and will be removed in a future version. The default random number generator is changing to a NumPy Generator. To continue using RandomState, please directly pass a RandomState instance using the ``generator`` keyword argument.


2025-04-06 17:36:03,222:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:03,346:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:03,457:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:04,688:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:04,799:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:04,903:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:07,731:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:09,069:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:09,182:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:09,290:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\RiskLabAI\features\feature_importance\swefi\stability_weighted_ensemble_feature_importance.py:1209: RuntimeWarning:

invalid value encountered in divide


2025-04-06 17:36:10,431:INFO:PyCaret ClassificationExperiment
2025-04-06 17:36:10,431:INFO:Logging name: clf-default-name
2025-04-06 17:36:10,431:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 17:36:10,431:INFO:version 3.3.2
2025-04-06 17:36:10,431:INFO:Initializing setup()
2025-04-06 17:36:10,431:INFO:self.USI: 5b64
2025-04-06 17:36:10,431:INFO:self._variable_keys: {'exp_id', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'pipeline', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'fix_imbalance', '_available_plots', 'y', 'seed', 'X', 'y_test', 'gpu_n_jobs_param', 'gpu_param', 'logging_param', 'memory', 'X_test', 'USI', 'exp_name_log', 'y_train', 'data', '_ml_usecase', 'target_param', 'log_plots_param'}
2025-04-06 17:36:10,431:INFO:Checking environment
2025-04-06 17:36:10,431:INFO:python_version: 3.9.21
2025-04-06 17:36:10,431:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 17:36:10,431:INFO:machine: AMD64
2025-04-06 17:36:10,431:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 17:36:10,438:INFO:Memory: svmem(total=137112563712, available=97705947136, percent=28.7, used=39406616576, free=97705947136)
2025-04-06 17:36:10,438:INFO:Physical Core: 24
2025-04-06 17:36:10,438:INFO:Logical Core: 32
2025-04-06 17:36:10,438:INFO:Checking libraries
2025-04-06 17:36:10,438:INFO:System:
2025-04-06 17:36:10,438:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 17:36:10,438:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 17:36:10,438:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 17:36:10,438:INFO:PyCaret required dependencies:
2025-04-06 17:36:10,438:INFO:                 pip: 25.0
2025-04-06 17:36:10,438:INFO:          setuptools: 72.1.0
2025-04-06 17:36:10,438:INFO:             pycaret: 3.3.2
2025-04-06 17:36:10,438:INFO:             IPython: 8.18.1
2025-04-06 17:36:10,438:INFO:          ipywidgets: 8.1.5
2025-04-06 17:36:10,438:INFO:                tqdm: 4.67.1
2025-04-06 17:36:10,438:INFO:               numpy: 1.26.4
2025-04-06 17:36:10,438:INFO:              pandas: 2.1.4
2025-04-06 17:36:10,438:INFO:              jinja2: 3.1.6
2025-04-06 17:36:10,438:INFO:               scipy: 1.11.4
2025-04-06 17:36:10,438:INFO:              joblib: 1.3.2
2025-04-06 17:36:10,438:INFO:             sklearn: 1.4.2
2025-04-06 17:36:10,438:INFO:                pyod: 2.0.4
2025-04-06 17:36:10,438:INFO:            imblearn: 0.12.4
2025-04-06 17:36:10,438:INFO:   category_encoders: 2.6.4
2025-04-06 17:36:10,438:INFO:            lightgbm: 4.6.0
2025-04-06 17:36:10,438:INFO:               numba: 0.60.0
2025-04-06 17:36:10,438:INFO:            requests: 2.32.3
2025-04-06 17:36:10,438:INFO:          matplotlib: 3.7.5
2025-04-06 17:36:10,438:INFO:          scikitplot: 0.3.7
2025-04-06 17:36:10,438:INFO:         yellowbrick: 1.5
2025-04-06 17:36:10,438:INFO:              plotly: 5.24.1
2025-04-06 17:36:10,438:INFO:    plotly-resampler: Not installed
2025-04-06 17:36:10,438:INFO:             kaleido: 0.2.1
2025-04-06 17:36:10,438:INFO:           schemdraw: 0.15
2025-04-06 17:36:10,438:INFO:         statsmodels: 0.14.4
2025-04-06 17:36:10,438:INFO:              sktime: 0.26.0
2025-04-06 17:36:10,438:INFO:               tbats: 1.1.3
2025-04-06 17:36:10,438:INFO:            pmdarima: 2.0.4
2025-04-06 17:36:10,438:INFO:              psutil: 7.0.0
2025-04-06 17:36:10,438:INFO:          markupsafe: 3.0.2
2025-04-06 17:36:10,438:INFO:             pickle5: Not installed
2025-04-06 17:36:10,438:INFO:         cloudpickle: 3.1.1
2025-04-06 17:36:10,438:INFO:         deprecation: 2.1.0
2025-04-06 17:36:10,438:INFO:              xxhash: 3.5.0
2025-04-06 17:36:10,438:INFO:           wurlitzer: Not installed
2025-04-06 17:36:10,438:INFO:PyCaret optional dependencies:
2025-04-06 17:36:10,438:INFO:                shap: Not installed
2025-04-06 17:36:10,438:INFO:           interpret: Not installed
2025-04-06 17:36:10,438:INFO:                umap: Not installed
2025-04-06 17:36:10,438:INFO:     ydata_profiling: Not installed
2025-04-06 17:36:10,438:INFO:  explainerdashboard: Not installed
2025-04-06 17:36:10,438:INFO:             autoviz: Not installed
2025-04-06 17:36:10,438:INFO:           fairlearn: Not installed
2025-04-06 17:36:10,438:INFO:          deepchecks: Not installed
2025-04-06 17:36:10,438:INFO:             xgboost: Not installed
2025-04-06 17:36:10,438:INFO:            catboost: Not installed
2025-04-06 17:36:10,438:INFO:              kmodes: Not installed
2025-04-06 17:36:10,438:INFO:             mlxtend: Not installed
2025-04-06 17:36:10,438:INFO:       statsforecast: Not installed
2025-04-06 17:36:10,439:INFO:        tune_sklearn: Not installed
2025-04-06 17:36:10,439:INFO:                 ray: Not installed
2025-04-06 17:36:10,439:INFO:            hyperopt: 0.2.7
2025-04-06 17:36:10,439:INFO:              optuna: 4.2.1
2025-04-06 17:36:10,439:INFO:               skopt: 0.10.2
2025-04-06 17:36:10,439:INFO:              mlflow: Not installed
2025-04-06 17:36:10,439:INFO:              gradio: Not installed
2025-04-06 17:36:10,439:INFO:             fastapi: Not installed
2025-04-06 17:36:10,439:INFO:             uvicorn: Not installed
2025-04-06 17:36:10,439:INFO:              m2cgen: Not installed
2025-04-06 17:36:10,439:INFO:           evidently: Not installed
2025-04-06 17:36:10,439:INFO:               fugue: Not installed
2025-04-06 17:36:10,439:INFO:           streamlit: Not installed
2025-04-06 17:36:10,439:INFO:             prophet: Not installed
2025-04-06 17:36:10,439:INFO:None
2025-04-06 17:36:10,439:INFO:Set up data.
2025-04-06 17:36:10,440:INFO:Set up folding strategy.
2025-04-06 17:36:10,440:INFO:Set up train/test split.
2025-04-06 17:36:10,442:INFO:Set up index.
2025-04-06 17:36:10,442:INFO:Assigning column types.
2025-04-06 17:36:10,443:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-06 17:36:10,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:36:10,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:36:10,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,494:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-06 17:36:10,495:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:36:10,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,508:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-06 17:36:10,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:36:10,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-06 17:36:10,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,572:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-06 17:36:10,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,635:INFO:Preparing preprocessing pipeline...
2025-04-06 17:36:10,635:INFO:Set up simple imputation.
2025-04-06 17:36:10,635:INFO:Set up feature normalization.
2025-04-06 17:36:10,645:INFO:Finished creating preprocessing pipeline.
2025-04-06 17:36:10,647:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\harian\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-04-06 17:36:10,647:INFO:Creating final display dataframe.
2025-04-06 17:36:10,676:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Direction
2                   Target type            Binary
3           Original data shape          (102, 5)
4        Transformed data shape          (102, 5)
5   Transformed train set shape          (100, 5)
6    Transformed test set shape            (2, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5b64
2025-04-06 17:36:10,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,742:INFO:setup() successfully completed in 0.31s...............
2025-04-06 17:36:10,742:INFO:gpu_param set to False
2025-04-06 17:36:10,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,805:INFO:gpu_param set to False
2025-04-06 17:36:10,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-06 17:36:10,871:INFO:Initializing compare_models()
2025-04-06 17:36:10,871:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, include=['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, 'include': ['gbc', 'lr', 'et', 'ridge', 'qda', 'lda', 'mlp', 'dt', 'rf', SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-04-06 17:36:10,871:INFO:Checking exceptions
2025-04-06 17:36:10,872:INFO:Preparing display monitor
2025-04-06 17:36:10,884:INFO:Initializing Gradient Boosting Classifier
2025-04-06 17:36:10,884:INFO:Total runtime is 0.0 minutes
2025-04-06 17:36:10,885:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:10,886:INFO:Initializing create_model()
2025-04-06 17:36:10,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:10,886:INFO:Checking exceptions
2025-04-06 17:36:10,886:INFO:Importing libraries
2025-04-06 17:36:10,886:INFO:Copying training dataset
2025-04-06 17:36:10,887:INFO:Defining folds
2025-04-06 17:36:10,887:INFO:Declaring metric variables
2025-04-06 17:36:10,889:INFO:Importing untrained model
2025-04-06 17:36:10,890:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 17:36:10,894:INFO:Starting cross validation
2025-04-06 17:36:10,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:10,985:INFO:Calculating mean and std
2025-04-06 17:36:10,985:INFO:Creating metrics dataframe
2025-04-06 17:36:10,986:INFO:Uploading results into container
2025-04-06 17:36:10,987:INFO:Uploading model into container now
2025-04-06 17:36:10,987:INFO:_master_model_container: 1
2025-04-06 17:36:10,987:INFO:_display_container: 2
2025-04-06 17:36:10,987:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 17:36:10,987:INFO:create_model() successfully completed......................................
2025-04-06 17:36:11,091:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:11,091:INFO:Creating metrics dataframe
2025-04-06 17:36:11,094:INFO:Initializing Logistic Regression
2025-04-06 17:36:11,094:INFO:Total runtime is 0.0034999450047810874 minutes
2025-04-06 17:36:11,096:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:11,096:INFO:Initializing create_model()
2025-04-06 17:36:11,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:11,096:INFO:Checking exceptions
2025-04-06 17:36:11,096:INFO:Importing libraries
2025-04-06 17:36:11,096:INFO:Copying training dataset
2025-04-06 17:36:11,098:INFO:Defining folds
2025-04-06 17:36:11,098:INFO:Declaring metric variables
2025-04-06 17:36:11,099:INFO:Importing untrained model
2025-04-06 17:36:11,101:INFO:Logistic Regression Imported successfully
2025-04-06 17:36:11,104:INFO:Starting cross validation
2025-04-06 17:36:11,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:11,142:INFO:Calculating mean and std
2025-04-06 17:36:11,142:INFO:Creating metrics dataframe
2025-04-06 17:36:11,143:INFO:Uploading results into container
2025-04-06 17:36:11,143:INFO:Uploading model into container now
2025-04-06 17:36:11,144:INFO:_master_model_container: 2
2025-04-06 17:36:11,144:INFO:_display_container: 2
2025-04-06 17:36:11,144:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-06 17:36:11,144:INFO:create_model() successfully completed......................................
2025-04-06 17:36:11,253:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:11,253:INFO:Creating metrics dataframe
2025-04-06 17:36:11,257:INFO:Initializing Extra Trees Classifier
2025-04-06 17:36:11,257:INFO:Total runtime is 0.006225287914276123 minutes
2025-04-06 17:36:11,259:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:11,259:INFO:Initializing create_model()
2025-04-06 17:36:11,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:11,259:INFO:Checking exceptions
2025-04-06 17:36:11,259:INFO:Importing libraries
2025-04-06 17:36:11,259:INFO:Copying training dataset
2025-04-06 17:36:11,261:INFO:Defining folds
2025-04-06 17:36:11,261:INFO:Declaring metric variables
2025-04-06 17:36:11,262:INFO:Importing untrained model
2025-04-06 17:36:11,263:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:36:11,267:INFO:Starting cross validation
2025-04-06 17:36:11,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:11,459:INFO:Calculating mean and std
2025-04-06 17:36:11,459:INFO:Creating metrics dataframe
2025-04-06 17:36:11,460:INFO:Uploading results into container
2025-04-06 17:36:11,461:INFO:Uploading model into container now
2025-04-06 17:36:11,461:INFO:_master_model_container: 3
2025-04-06 17:36:11,461:INFO:_display_container: 2
2025-04-06 17:36:11,461:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:36:11,461:INFO:create_model() successfully completed......................................
2025-04-06 17:36:11,571:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:11,571:INFO:Creating metrics dataframe
2025-04-06 17:36:11,575:INFO:Initializing Ridge Classifier
2025-04-06 17:36:11,575:INFO:Total runtime is 0.011517274379730224 minutes
2025-04-06 17:36:11,576:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:11,577:INFO:Initializing create_model()
2025-04-06 17:36:11,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:11,577:INFO:Checking exceptions
2025-04-06 17:36:11,577:INFO:Importing libraries
2025-04-06 17:36:11,577:INFO:Copying training dataset
2025-04-06 17:36:11,578:INFO:Defining folds
2025-04-06 17:36:11,578:INFO:Declaring metric variables
2025-04-06 17:36:11,580:INFO:Importing untrained model
2025-04-06 17:36:11,581:INFO:Ridge Classifier Imported successfully
2025-04-06 17:36:11,584:INFO:Starting cross validation
2025-04-06 17:36:11,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:11,629:INFO:Calculating mean and std
2025-04-06 17:36:11,629:INFO:Creating metrics dataframe
2025-04-06 17:36:11,630:INFO:Uploading results into container
2025-04-06 17:36:11,630:INFO:Uploading model into container now
2025-04-06 17:36:11,630:INFO:_master_model_container: 4
2025-04-06 17:36:11,630:INFO:_display_container: 2
2025-04-06 17:36:11,631:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-06 17:36:11,631:INFO:create_model() successfully completed......................................
2025-04-06 17:36:11,738:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:11,738:INFO:Creating metrics dataframe
2025-04-06 17:36:11,742:INFO:Initializing Quadratic Discriminant Analysis
2025-04-06 17:36:11,742:INFO:Total runtime is 0.014300560951232909 minutes
2025-04-06 17:36:11,744:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:11,744:INFO:Initializing create_model()
2025-04-06 17:36:11,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:11,744:INFO:Checking exceptions
2025-04-06 17:36:11,744:INFO:Importing libraries
2025-04-06 17:36:11,744:INFO:Copying training dataset
2025-04-06 17:36:11,746:INFO:Defining folds
2025-04-06 17:36:11,746:INFO:Declaring metric variables
2025-04-06 17:36:11,747:INFO:Importing untrained model
2025-04-06 17:36:11,749:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-06 17:36:11,754:INFO:Starting cross validation
2025-04-06 17:36:11,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:11,801:INFO:Calculating mean and std
2025-04-06 17:36:11,801:INFO:Creating metrics dataframe
2025-04-06 17:36:11,802:INFO:Uploading results into container
2025-04-06 17:36:11,803:INFO:Uploading model into container now
2025-04-06 17:36:11,803:INFO:_master_model_container: 5
2025-04-06 17:36:11,803:INFO:_display_container: 2
2025-04-06 17:36:11,803:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-06 17:36:11,803:INFO:create_model() successfully completed......................................
2025-04-06 17:36:11,904:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:11,904:INFO:Creating metrics dataframe
2025-04-06 17:36:11,908:INFO:Initializing Linear Discriminant Analysis
2025-04-06 17:36:11,908:INFO:Total runtime is 0.017067197958628336 minutes
2025-04-06 17:36:11,910:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:11,910:INFO:Initializing create_model()
2025-04-06 17:36:11,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:11,910:INFO:Checking exceptions
2025-04-06 17:36:11,910:INFO:Importing libraries
2025-04-06 17:36:11,910:INFO:Copying training dataset
2025-04-06 17:36:11,912:INFO:Defining folds
2025-04-06 17:36:11,912:INFO:Declaring metric variables
2025-04-06 17:36:11,914:INFO:Importing untrained model
2025-04-06 17:36:11,916:INFO:Linear Discriminant Analysis Imported successfully
2025-04-06 17:36:11,918:INFO:Starting cross validation
2025-04-06 17:36:11,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:11,961:INFO:Calculating mean and std
2025-04-06 17:36:11,961:INFO:Creating metrics dataframe
2025-04-06 17:36:11,962:INFO:Uploading results into container
2025-04-06 17:36:11,963:INFO:Uploading model into container now
2025-04-06 17:36:11,963:INFO:_master_model_container: 6
2025-04-06 17:36:11,963:INFO:_display_container: 2
2025-04-06 17:36:11,963:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-06 17:36:11,963:INFO:create_model() successfully completed......................................
2025-04-06 17:36:12,071:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:12,071:INFO:Creating metrics dataframe
2025-04-06 17:36:12,075:INFO:Initializing MLP Classifier
2025-04-06 17:36:12,075:INFO:Total runtime is 0.019850488503774008 minutes
2025-04-06 17:36:12,077:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:12,077:INFO:Initializing create_model()
2025-04-06 17:36:12,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=mlp, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:12,077:INFO:Checking exceptions
2025-04-06 17:36:12,077:INFO:Importing libraries
2025-04-06 17:36:12,077:INFO:Copying training dataset
2025-04-06 17:36:12,079:INFO:Defining folds
2025-04-06 17:36:12,079:INFO:Declaring metric variables
2025-04-06 17:36:12,081:INFO:Importing untrained model
2025-04-06 17:36:12,084:INFO:MLP Classifier Imported successfully
2025-04-06 17:36:12,087:INFO:Starting cross validation
2025-04-06 17:36:12,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:12,188:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,191:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,192:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,193:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,194:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,196:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,197:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,207:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,240:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,243:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:12,262:INFO:Calculating mean and std
2025-04-06 17:36:12,262:INFO:Creating metrics dataframe
2025-04-06 17:36:12,263:INFO:Uploading results into container
2025-04-06 17:36:12,264:INFO:Uploading model into container now
2025-04-06 17:36:12,264:INFO:_master_model_container: 7
2025-04-06 17:36:12,264:INFO:_display_container: 2
2025-04-06 17:36:12,265:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 17:36:12,265:INFO:create_model() successfully completed......................................
2025-04-06 17:36:12,367:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:12,367:INFO:Creating metrics dataframe
2025-04-06 17:36:12,371:INFO:Initializing Decision Tree Classifier
2025-04-06 17:36:12,371:INFO:Total runtime is 0.024783015251159668 minutes
2025-04-06 17:36:12,373:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:12,373:INFO:Initializing create_model()
2025-04-06 17:36:12,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:12,373:INFO:Checking exceptions
2025-04-06 17:36:12,373:INFO:Importing libraries
2025-04-06 17:36:12,373:INFO:Copying training dataset
2025-04-06 17:36:12,375:INFO:Defining folds
2025-04-06 17:36:12,375:INFO:Declaring metric variables
2025-04-06 17:36:12,376:INFO:Importing untrained model
2025-04-06 17:36:12,378:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:36:12,381:INFO:Starting cross validation
2025-04-06 17:36:12,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:12,418:INFO:Calculating mean and std
2025-04-06 17:36:12,419:INFO:Creating metrics dataframe
2025-04-06 17:36:12,420:INFO:Uploading results into container
2025-04-06 17:36:12,420:INFO:Uploading model into container now
2025-04-06 17:36:12,420:INFO:_master_model_container: 8
2025-04-06 17:36:12,420:INFO:_display_container: 2
2025-04-06 17:36:12,421:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:36:12,421:INFO:create_model() successfully completed......................................
2025-04-06 17:36:12,523:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:12,523:INFO:Creating metrics dataframe
2025-04-06 17:36:12,528:INFO:Initializing Random Forest Classifier
2025-04-06 17:36:12,528:INFO:Total runtime is 0.0274074117342631 minutes
2025-04-06 17:36:12,530:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:12,530:INFO:Initializing create_model()
2025-04-06 17:36:12,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:12,530:INFO:Checking exceptions
2025-04-06 17:36:12,530:INFO:Importing libraries
2025-04-06 17:36:12,531:INFO:Copying training dataset
2025-04-06 17:36:12,532:INFO:Defining folds
2025-04-06 17:36:12,532:INFO:Declaring metric variables
2025-04-06 17:36:12,534:INFO:Importing untrained model
2025-04-06 17:36:12,536:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:36:12,539:INFO:Starting cross validation
2025-04-06 17:36:12,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:12,752:INFO:Calculating mean and std
2025-04-06 17:36:12,753:INFO:Creating metrics dataframe
2025-04-06 17:36:12,754:INFO:Uploading results into container
2025-04-06 17:36:12,754:INFO:Uploading model into container now
2025-04-06 17:36:12,754:INFO:_master_model_container: 9
2025-04-06 17:36:12,755:INFO:_display_container: 2
2025-04-06 17:36:12,755:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:36:12,755:INFO:create_model() successfully completed......................................
2025-04-06 17:36:12,862:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:12,862:INFO:Creating metrics dataframe
2025-04-06 17:36:12,867:INFO:Initializing custom model SVM - Radial Kernel
2025-04-06 17:36:12,867:INFO:Total runtime is 0.03304913838704427 minutes
2025-04-06 17:36:12,869:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:12,869:INFO:Initializing create_model()
2025-04-06 17:36:12,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF738F640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:12,869:INFO:Checking exceptions
2025-04-06 17:36:12,869:INFO:Importing libraries
2025-04-06 17:36:12,869:INFO:Copying training dataset
2025-04-06 17:36:12,871:INFO:Defining folds
2025-04-06 17:36:12,871:INFO:Declaring metric variables
2025-04-06 17:36:12,872:INFO:Importing untrained model
2025-04-06 17:36:12,873:INFO:Declaring custom model
2025-04-06 17:36:12,874:INFO:SVM - Radial Kernel Imported successfully
2025-04-06 17:36:12,877:INFO:Starting cross validation
2025-04-06 17:36:12,878:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:12,909:INFO:Calculating mean and std
2025-04-06 17:36:12,909:INFO:Creating metrics dataframe
2025-04-06 17:36:12,910:INFO:Uploading results into container
2025-04-06 17:36:12,911:INFO:Uploading model into container now
2025-04-06 17:36:12,911:INFO:_master_model_container: 10
2025-04-06 17:36:12,911:INFO:_display_container: 2
2025-04-06 17:36:12,911:INFO:SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='linear',
    max_iter=-1, probability=True, random_state=None, shrinking=True, tol=0.001,
    verbose=False)
2025-04-06 17:36:12,911:INFO:create_model() successfully completed......................................
2025-04-06 17:36:13,018:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:13,018:INFO:Creating metrics dataframe
2025-04-06 17:36:13,023:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-04-06 17:36:13,028:INFO:Initializing create_model()
2025-04-06 17:36:13,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:13,028:INFO:Checking exceptions
2025-04-06 17:36:13,029:INFO:Importing libraries
2025-04-06 17:36:13,029:INFO:Copying training dataset
2025-04-06 17:36:13,031:INFO:Defining folds
2025-04-06 17:36:13,031:INFO:Declaring metric variables
2025-04-06 17:36:13,031:INFO:Importing untrained model
2025-04-06 17:36:13,031:INFO:Declaring custom model
2025-04-06 17:36:13,031:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 17:36:13,031:INFO:Cross validation set to False
2025-04-06 17:36:13,031:INFO:Fitting Model
2025-04-06 17:36:13,066:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 17:36:13,066:INFO:create_model() successfully completed......................................
2025-04-06 17:36:13,172:INFO:Initializing create_model()
2025-04-06 17:36:13,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:13,172:INFO:Checking exceptions
2025-04-06 17:36:13,174:INFO:Importing libraries
2025-04-06 17:36:13,174:INFO:Copying training dataset
2025-04-06 17:36:13,175:INFO:Defining folds
2025-04-06 17:36:13,175:INFO:Declaring metric variables
2025-04-06 17:36:13,175:INFO:Importing untrained model
2025-04-06 17:36:13,175:INFO:Declaring custom model
2025-04-06 17:36:13,175:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:36:13,176:INFO:Cross validation set to False
2025-04-06 17:36:13,176:INFO:Fitting Model
2025-04-06 17:36:13,239:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:36:13,239:INFO:create_model() successfully completed......................................
2025-04-06 17:36:13,346:INFO:Initializing create_model()
2025-04-06 17:36:13,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:13,346:INFO:Checking exceptions
2025-04-06 17:36:13,347:INFO:Importing libraries
2025-04-06 17:36:13,347:INFO:Copying training dataset
2025-04-06 17:36:13,349:INFO:Defining folds
2025-04-06 17:36:13,349:INFO:Declaring metric variables
2025-04-06 17:36:13,349:INFO:Importing untrained model
2025-04-06 17:36:13,349:INFO:Declaring custom model
2025-04-06 17:36:13,349:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:36:13,350:INFO:Cross validation set to False
2025-04-06 17:36:13,350:INFO:Fitting Model
2025-04-06 17:36:13,355:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:36:13,355:INFO:create_model() successfully completed......................................
2025-04-06 17:36:13,463:INFO:Initializing create_model()
2025-04-06 17:36:13,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:13,464:INFO:Checking exceptions
2025-04-06 17:36:13,464:INFO:Importing libraries
2025-04-06 17:36:13,464:INFO:Copying training dataset
2025-04-06 17:36:13,466:INFO:Defining folds
2025-04-06 17:36:13,466:INFO:Declaring metric variables
2025-04-06 17:36:13,466:INFO:Importing untrained model
2025-04-06 17:36:13,466:INFO:Declaring custom model
2025-04-06 17:36:13,466:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:36:13,467:INFO:Cross validation set to False
2025-04-06 17:36:13,467:INFO:Fitting Model
2025-04-06 17:36:13,554:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:36:13,554:INFO:create_model() successfully completed......................................
2025-04-06 17:36:13,661:INFO:Initializing create_model()
2025-04-06 17:36:13,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:13,661:INFO:Checking exceptions
2025-04-06 17:36:13,662:INFO:Importing libraries
2025-04-06 17:36:13,662:INFO:Copying training dataset
2025-04-06 17:36:13,664:INFO:Defining folds
2025-04-06 17:36:13,664:INFO:Declaring metric variables
2025-04-06 17:36:13,664:INFO:Importing untrained model
2025-04-06 17:36:13,664:INFO:Declaring custom model
2025-04-06 17:36:13,664:INFO:MLP Classifier Imported successfully
2025-04-06 17:36:13,665:INFO:Cross validation set to False
2025-04-06 17:36:13,665:INFO:Fitting Model
2025-04-06 17:36:13,888:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning:

Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.


2025-04-06 17:36:13,889:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 17:36:13,889:INFO:create_model() successfully completed......................................
2025-04-06 17:36:14,008:INFO:_master_model_container: 10
2025-04-06 17:36:14,008:INFO:_display_container: 2
2025-04-06 17:36:14,009:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)]
2025-04-06 17:36:14,009:INFO:compare_models() successfully completed......................................
2025-04-06 17:36:14,009:INFO:Initializing tune_model()
2025-04-06 17:36:14,010:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>)
2025-04-06 17:36:14,010:INFO:Checking exceptions
2025-04-06 17:36:14,010:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:36:14,018:INFO:Copying training dataset
2025-04-06 17:36:14,021:INFO:Checking base model
2025-04-06 17:36:14,021:INFO:Base model : Extra Trees Classifier
2025-04-06 17:36:14,023:INFO:Declaring metric variables
2025-04-06 17:36:14,025:INFO:Defining Hyperparameters
2025-04-06 17:36:14,146:INFO:Tuning with n_jobs=-1
2025-04-06 17:36:14,149:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:36:28,567:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', False), ('actual_estimator__class_weight', None), ('actual_estimator__criterion', 'entropy'), ('actual_estimator__max_depth', 8), ('actual_estimator__max_features', 1.0), ('actual_estimator__min_impurity_decrease', 4.402904844772163e-08), ('actual_estimator__min_samples_leaf', 1), ('actual_estimator__min_samples_split', 6), ('actual_estimator__n_estimators', 300)])
2025-04-06 17:36:28,568:INFO:Hyperparameter search completed
2025-04-06 17:36:28,568:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:28,568:INFO:Initializing create_model()
2025-04-06 17:36:28,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEEF41730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': False, 'class_weight': None, 'criterion': 'entropy', 'max_depth': 8, 'max_features': 1.0, 'min_impurity_decrease': 4.402904844772163e-08, 'min_samples_leaf': 1, 'min_samples_split': 6, 'n_estimators': 300})
2025-04-06 17:36:28,568:INFO:Checking exceptions
2025-04-06 17:36:28,568:INFO:Importing libraries
2025-04-06 17:36:28,568:INFO:Copying training dataset
2025-04-06 17:36:28,570:INFO:Defining folds
2025-04-06 17:36:28,570:INFO:Declaring metric variables
2025-04-06 17:36:28,572:INFO:Importing untrained model
2025-04-06 17:36:28,572:INFO:Declaring custom model
2025-04-06 17:36:28,575:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:36:28,578:INFO:Starting cross validation
2025-04-06 17:36:28,578:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:28,845:INFO:Calculating mean and std
2025-04-06 17:36:28,846:INFO:Creating metrics dataframe
2025-04-06 17:36:28,848:INFO:Finalizing model
2025-04-06 17:36:28,990:INFO:Uploading results into container
2025-04-06 17:36:28,991:INFO:Uploading model into container now
2025-04-06 17:36:28,991:INFO:_master_model_container: 11
2025-04-06 17:36:28,992:INFO:_display_container: 3
2025-04-06 17:36:28,992:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='entropy', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=4.402904844772163e-08,
                     min_samples_leaf=1, min_samples_split=6,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=300, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-04-06 17:36:28,992:INFO:create_model() successfully completed......................................
2025-04-06 17:36:29,098:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:29,098:INFO:choose_better activated
2025-04-06 17:36:29,100:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:29,101:INFO:Initializing create_model()
2025-04-06 17:36:29,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:29,101:INFO:Checking exceptions
2025-04-06 17:36:29,102:INFO:Importing libraries
2025-04-06 17:36:29,102:INFO:Copying training dataset
2025-04-06 17:36:29,104:INFO:Defining folds
2025-04-06 17:36:29,104:INFO:Declaring metric variables
2025-04-06 17:36:29,104:INFO:Importing untrained model
2025-04-06 17:36:29,104:INFO:Declaring custom model
2025-04-06 17:36:29,104:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:36:29,104:INFO:Starting cross validation
2025-04-06 17:36:29,105:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:29,255:INFO:Calculating mean and std
2025-04-06 17:36:29,255:INFO:Creating metrics dataframe
2025-04-06 17:36:29,256:INFO:Finalizing model
2025-04-06 17:36:29,317:INFO:Uploading results into container
2025-04-06 17:36:29,318:INFO:Uploading model into container now
2025-04-06 17:36:29,318:INFO:_master_model_container: 12
2025-04-06 17:36:29,318:INFO:_display_container: 4
2025-04-06 17:36:29,319:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:36:29,319:INFO:create_model() successfully completed......................................
2025-04-06 17:36:29,424:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:29,425:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for AUC is 1.0
2025-04-06 17:36:29,425:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='entropy', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=4.402904844772163e-08,
                     min_samples_leaf=1, min_samples_split=6,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=300, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for AUC is 1.0
2025-04-06 17:36:29,426:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2025-04-06 17:36:29,426:INFO:choose_better completed
2025-04-06 17:36:29,426:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:36:29,431:INFO:_master_model_container: 12
2025-04-06 17:36:29,431:INFO:_display_container: 3
2025-04-06 17:36:29,431:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:36:29,431:INFO:tune_model() successfully completed......................................
2025-04-06 17:36:29,537:INFO:Initializing tune_model()
2025-04-06 17:36:29,537:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>)
2025-04-06 17:36:29,537:INFO:Checking exceptions
2025-04-06 17:36:29,537:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:36:29,545:INFO:Copying training dataset
2025-04-06 17:36:29,546:INFO:Checking base model
2025-04-06 17:36:29,546:INFO:Base model : Decision Tree Classifier
2025-04-06 17:36:29,548:INFO:Declaring metric variables
2025-04-06 17:36:29,551:INFO:Defining Hyperparameters
2025-04-06 17:36:29,674:INFO:Tuning with n_jobs=-1
2025-04-06 17:36:29,676:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:36:38,127:INFO:best_params: OrderedDict([('actual_estimator__criterion', 'gini'), ('actual_estimator__max_depth', 16), ('actual_estimator__max_features', 1.0), ('actual_estimator__min_impurity_decrease', 1.000000000000004e-09), ('actual_estimator__min_samples_leaf', 2), ('actual_estimator__min_samples_split', 2)])
2025-04-06 17:36:38,127:INFO:Hyperparameter search completed
2025-04-06 17:36:38,127:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:38,128:INFO:Initializing create_model()
2025-04-06 17:36:38,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFF11E7D30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'criterion': 'gini', 'max_depth': 16, 'max_features': 1.0, 'min_impurity_decrease': 1.000000000000004e-09, 'min_samples_leaf': 2, 'min_samples_split': 2})
2025-04-06 17:36:38,128:INFO:Checking exceptions
2025-04-06 17:36:38,128:INFO:Importing libraries
2025-04-06 17:36:38,128:INFO:Copying training dataset
2025-04-06 17:36:38,129:INFO:Defining folds
2025-04-06 17:36:38,129:INFO:Declaring metric variables
2025-04-06 17:36:38,131:INFO:Importing untrained model
2025-04-06 17:36:38,132:INFO:Declaring custom model
2025-04-06 17:36:38,134:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:36:38,137:INFO:Starting cross validation
2025-04-06 17:36:38,138:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:38,160:INFO:Calculating mean and std
2025-04-06 17:36:38,160:INFO:Creating metrics dataframe
2025-04-06 17:36:38,163:INFO:Finalizing model
2025-04-06 17:36:38,170:INFO:Uploading results into container
2025-04-06 17:36:38,170:INFO:Uploading model into container now
2025-04-06 17:36:38,171:INFO:_master_model_container: 13
2025-04-06 17:36:38,171:INFO:_display_container: 4
2025-04-06 17:36:38,171:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=1.000000000000004e-09,
                       min_samples_leaf=2, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best')
2025-04-06 17:36:38,171:INFO:create_model() successfully completed......................................
2025-04-06 17:36:38,280:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:38,280:INFO:choose_better activated
2025-04-06 17:36:38,282:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:38,282:INFO:Initializing create_model()
2025-04-06 17:36:38,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:38,282:INFO:Checking exceptions
2025-04-06 17:36:38,283:INFO:Importing libraries
2025-04-06 17:36:38,283:INFO:Copying training dataset
2025-04-06 17:36:38,284:INFO:Defining folds
2025-04-06 17:36:38,284:INFO:Declaring metric variables
2025-04-06 17:36:38,284:INFO:Importing untrained model
2025-04-06 17:36:38,285:INFO:Declaring custom model
2025-04-06 17:36:38,285:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:36:38,285:INFO:Starting cross validation
2025-04-06 17:36:38,285:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:38,320:INFO:Calculating mean and std
2025-04-06 17:36:38,320:INFO:Creating metrics dataframe
2025-04-06 17:36:38,321:INFO:Finalizing model
2025-04-06 17:36:38,326:INFO:Uploading results into container
2025-04-06 17:36:38,326:INFO:Uploading model into container now
2025-04-06 17:36:38,327:INFO:_master_model_container: 14
2025-04-06 17:36:38,327:INFO:_display_container: 5
2025-04-06 17:36:38,327:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:36:38,327:INFO:create_model() successfully completed......................................
2025-04-06 17:36:38,435:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:38,435:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for AUC is 1.0
2025-04-06 17:36:38,436:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=1.000000000000004e-09,
                       min_samples_leaf=2, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       random_state=123, splitter='best') result for AUC is 0.9862
2025-04-06 17:36:38,436:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2025-04-06 17:36:38,436:INFO:choose_better completed
2025-04-06 17:36:38,436:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:36:38,440:INFO:_master_model_container: 14
2025-04-06 17:36:38,441:INFO:_display_container: 4
2025-04-06 17:36:38,441:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:36:38,441:INFO:tune_model() successfully completed......................................
2025-04-06 17:36:38,548:INFO:Initializing tune_model()
2025-04-06 17:36:38,548:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>)
2025-04-06 17:36:38,548:INFO:Checking exceptions
2025-04-06 17:36:38,548:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:36:38,557:INFO:Copying training dataset
2025-04-06 17:36:38,558:INFO:Checking base model
2025-04-06 17:36:38,558:INFO:Base model : Random Forest Classifier
2025-04-06 17:36:38,560:INFO:Declaring metric variables
2025-04-06 17:36:38,562:INFO:Defining Hyperparameters
2025-04-06 17:36:38,685:INFO:Tuning with n_jobs=-1
2025-04-06 17:36:38,688:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:36:52,393:INFO:best_params: OrderedDict([('actual_estimator__bootstrap', True), ('actual_estimator__class_weight', None), ('actual_estimator__criterion', 'gini'), ('actual_estimator__max_depth', 8), ('actual_estimator__max_features', 0.9123307522482738), ('actual_estimator__min_impurity_decrease', 3.823965309928452e-06), ('actual_estimator__min_samples_leaf', 2), ('actual_estimator__min_samples_split', 3), ('actual_estimator__n_estimators', 27)])
2025-04-06 17:36:52,394:INFO:Hyperparameter search completed
2025-04-06 17:36:52,394:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:52,394:INFO:Initializing create_model()
2025-04-06 17:36:52,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFB5F4E040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'bootstrap': True, 'class_weight': None, 'criterion': 'gini', 'max_depth': 8, 'max_features': 0.9123307522482738, 'min_impurity_decrease': 3.823965309928452e-06, 'min_samples_leaf': 2, 'min_samples_split': 3, 'n_estimators': 27})
2025-04-06 17:36:52,394:INFO:Checking exceptions
2025-04-06 17:36:52,395:INFO:Importing libraries
2025-04-06 17:36:52,395:INFO:Copying training dataset
2025-04-06 17:36:52,396:INFO:Defining folds
2025-04-06 17:36:52,396:INFO:Declaring metric variables
2025-04-06 17:36:52,398:INFO:Importing untrained model
2025-04-06 17:36:52,398:INFO:Declaring custom model
2025-04-06 17:36:52,400:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:36:52,403:INFO:Starting cross validation
2025-04-06 17:36:52,404:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:52,521:INFO:Calculating mean and std
2025-04-06 17:36:52,522:INFO:Creating metrics dataframe
2025-04-06 17:36:52,525:INFO:Finalizing model
2025-04-06 17:36:52,571:INFO:Uploading results into container
2025-04-06 17:36:52,572:INFO:Uploading model into container now
2025-04-06 17:36:52,572:INFO:_master_model_container: 15
2025-04-06 17:36:52,572:INFO:_display_container: 5
2025-04-06 17:36:52,572:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=8,
                       max_features=0.9123307522482738, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.823965309928452e-06,
                       min_samples_leaf=2, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=27, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-04-06 17:36:52,572:INFO:create_model() successfully completed......................................
2025-04-06 17:36:52,681:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:52,681:INFO:choose_better activated
2025-04-06 17:36:52,683:INFO:SubProcess create_model() called ==================================
2025-04-06 17:36:52,683:INFO:Initializing create_model()
2025-04-06 17:36:52,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:36:52,684:INFO:Checking exceptions
2025-04-06 17:36:52,685:INFO:Importing libraries
2025-04-06 17:36:52,685:INFO:Copying training dataset
2025-04-06 17:36:52,686:INFO:Defining folds
2025-04-06 17:36:52,686:INFO:Declaring metric variables
2025-04-06 17:36:52,686:INFO:Importing untrained model
2025-04-06 17:36:52,686:INFO:Declaring custom model
2025-04-06 17:36:52,687:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:36:52,687:INFO:Starting cross validation
2025-04-06 17:36:52,687:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:36:52,853:INFO:Calculating mean and std
2025-04-06 17:36:52,853:INFO:Creating metrics dataframe
2025-04-06 17:36:52,854:INFO:Finalizing model
2025-04-06 17:36:52,932:INFO:Uploading results into container
2025-04-06 17:36:52,932:INFO:Uploading model into container now
2025-04-06 17:36:52,933:INFO:_master_model_container: 16
2025-04-06 17:36:52,933:INFO:_display_container: 6
2025-04-06 17:36:52,933:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:36:52,933:INFO:create_model() successfully completed......................................
2025-04-06 17:36:53,041:INFO:SubProcess create_model() end ==================================
2025-04-06 17:36:53,041:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for AUC is 1.0
2025-04-06 17:36:53,042:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=8,
                       max_features=0.9123307522482738, max_leaf_nodes=None,
                       max_samples=None,
                       min_impurity_decrease=3.823965309928452e-06,
                       min_samples_leaf=2, min_samples_split=3,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=27, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for AUC is 1.0
2025-04-06 17:36:53,042:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2025-04-06 17:36:53,042:INFO:choose_better completed
2025-04-06 17:36:53,042:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-06 17:36:53,046:INFO:_master_model_container: 16
2025-04-06 17:36:53,047:INFO:_display_container: 5
2025-04-06 17:36:53,047:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:36:53,047:INFO:tune_model() successfully completed......................................
2025-04-06 17:36:53,154:INFO:Initializing tune_model()
2025-04-06 17:36:53,154:INFO:tune_model(estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=4, round=4, n_iter=25, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>)
2025-04-06 17:36:53,154:INFO:Checking exceptions
2025-04-06 17:36:53,154:INFO:Soft dependency imported: skopt: 0.10.2
2025-04-06 17:36:53,162:INFO:Copying training dataset
2025-04-06 17:36:53,163:INFO:Checking base model
2025-04-06 17:36:53,164:INFO:Base model : MLP Classifier
2025-04-06 17:36:53,164:INFO:Model has a special tunable class, using that
2025-04-06 17:36:53,165:INFO:Declaring metric variables
2025-04-06 17:36:53,167:INFO:Defining Hyperparameters
2025-04-06 17:36:53,280:INFO:Tuning with n_jobs=-1
2025-04-06 17:36:53,282:INFO:Initializing skopt.BayesSearchCV
2025-04-06 17:36:53,542:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:53,545:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:53,547:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:53,549:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:54,010:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:54,015:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:54,023:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:54,698:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:54,704:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:54,706:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:55,828:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:55,836:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:55,849:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:57,985:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:57,987:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:57,998:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:58,004:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:58,633:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:58,639:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:58,640:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:58,696:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:59,992:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:59,995:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:36:59,998:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:00,001:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,204:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,218:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,226:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,229:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,849:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,852:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,863:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:02,868:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:04,234:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:04,239:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:04,240:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:04,255:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:05,194:INFO:best_params: OrderedDict([('actual_estimator__activation', 'relu'), ('actual_estimator__alpha', 4.7450264492347447e-07), ('actual_estimator__hidden_layer_size_0', 54), ('actual_estimator__hidden_layer_size_1', 46), ('actual_estimator__hidden_layer_size_2', 63), ('actual_estimator__learning_rate', 'constant')])
2025-04-06 17:37:05,194:INFO:Hyperparameter search completed
2025-04-06 17:37:05,194:INFO:Getting base sklearn object from tunable
2025-04-06 17:37:05,196:INFO:SubProcess create_model() called ==================================
2025-04-06 17:37:05,196:INFO:Initializing create_model()
2025-04-06 17:37:05,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFEE4C3E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'activation': 'relu', 'alpha': 4.7450264492347447e-07, 'batch_size': 'auto', 'beta_1': 0.9, 'beta_2': 0.999, 'early_stopping': False, 'epsilon': 1e-08, 'hidden_layer_sizes': [54, 46, 63], 'learning_rate': 'constant', 'learning_rate_init': 0.001, 'max_fun': 15000, 'max_iter': 500, 'momentum': 0.9, 'n_iter_no_change': 10, 'nesterovs_momentum': True, 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'solver': 'adam', 'tol': 0.0001, 'validation_fraction': 0.1, 'warm_start': False})
2025-04-06 17:37:05,197:INFO:Checking exceptions
2025-04-06 17:37:05,197:INFO:Importing libraries
2025-04-06 17:37:05,197:INFO:Copying training dataset
2025-04-06 17:37:05,198:INFO:Defining folds
2025-04-06 17:37:05,198:INFO:Declaring metric variables
2025-04-06 17:37:05,200:INFO:Importing untrained model
2025-04-06 17:37:05,200:INFO:Declaring custom model
2025-04-06 17:37:05,202:INFO:MLP Classifier Imported successfully
2025-04-06 17:37:05,206:INFO:Starting cross validation
2025-04-06 17:37:05,206:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:37:05,325:INFO:Calculating mean and std
2025-04-06 17:37:05,326:INFO:Creating metrics dataframe
2025-04-06 17:37:05,329:INFO:Finalizing model
2025-04-06 17:37:05,619:INFO:Uploading results into container
2025-04-06 17:37:05,620:INFO:Uploading model into container now
2025-04-06 17:37:05,620:INFO:_master_model_container: 17
2025-04-06 17:37:05,620:INFO:_display_container: 6
2025-04-06 17:37:05,621:INFO:MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False)
2025-04-06 17:37:05,621:INFO:create_model() successfully completed......................................
2025-04-06 17:37:05,733:INFO:SubProcess create_model() end ==================================
2025-04-06 17:37:05,733:INFO:choose_better activated
2025-04-06 17:37:05,735:INFO:SubProcess create_model() called ==================================
2025-04-06 17:37:05,736:INFO:Initializing create_model()
2025-04-06 17:37:05,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=StratifiedKFold(n_splits=4, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:37:05,736:INFO:Checking exceptions
2025-04-06 17:37:05,737:INFO:Importing libraries
2025-04-06 17:37:05,737:INFO:Copying training dataset
2025-04-06 17:37:05,738:INFO:Defining folds
2025-04-06 17:37:05,738:INFO:Declaring metric variables
2025-04-06 17:37:05,739:INFO:Importing untrained model
2025-04-06 17:37:05,739:INFO:Declaring custom model
2025-04-06 17:37:05,739:INFO:MLP Classifier Imported successfully
2025-04-06 17:37:05,739:INFO:Starting cross validation
2025-04-06 17:37:05,739:INFO:Cross validating with StratifiedKFold(n_splits=4, random_state=None, shuffle=False), n_jobs=-1
2025-04-06 17:37:05,821:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:05,821:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:05,825:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:05,829:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.
  warnings.warn(

2025-04-06 17:37:05,843:INFO:Calculating mean and std
2025-04-06 17:37:05,843:INFO:Creating metrics dataframe
2025-04-06 17:37:05,844:INFO:Finalizing model
2025-04-06 17:37:06,074:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\sklearn\neural_network\_multilayer_perceptron.py:691: ConvergenceWarning:

Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.


2025-04-06 17:37:06,074:INFO:Uploading results into container
2025-04-06 17:37:06,075:INFO:Uploading model into container now
2025-04-06 17:37:06,075:INFO:_master_model_container: 18
2025-04-06 17:37:06,075:INFO:_display_container: 7
2025-04-06 17:37:06,075:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2025-04-06 17:37:06,075:INFO:create_model() successfully completed......................................
2025-04-06 17:37:06,181:INFO:SubProcess create_model() end ==================================
2025-04-06 17:37:06,181:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=500,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=123, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False) result for AUC is 0.8912
2025-04-06 17:37:06,181:INFO:MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False) result for AUC is 1.0
2025-04-06 17:37:06,181:INFO:MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False) is best model
2025-04-06 17:37:06,181:INFO:choose_better completed
2025-04-06 17:37:06,186:INFO:_master_model_container: 18
2025-04-06 17:37:06,186:INFO:_display_container: 6
2025-04-06 17:37:06,186:INFO:MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False)
2025-04-06 17:37:06,186:INFO:tune_model() successfully completed......................................
2025-04-06 17:37:06,294:INFO:Initializing finalize_model()
2025-04-06 17:37:06,294:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:37:06,294:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-06 17:37:06,296:INFO:Initializing create_model()
2025-04-06 17:37:06,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:37:06,296:INFO:Checking exceptions
2025-04-06 17:37:06,297:INFO:Importing libraries
2025-04-06 17:37:06,297:INFO:Copying training dataset
2025-04-06 17:37:06,297:INFO:Defining folds
2025-04-06 17:37:06,297:INFO:Declaring metric variables
2025-04-06 17:37:06,297:INFO:Importing untrained model
2025-04-06 17:37:06,297:INFO:Declaring custom model
2025-04-06 17:37:06,297:INFO:Gradient Boosting Classifier Imported successfully
2025-04-06 17:37:06,297:INFO:Cross validation set to False
2025-04-06 17:37:06,297:INFO:Fitting Model
2025-04-06 17:37:06,333:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-04-06 17:37:06,333:INFO:create_model() successfully completed......................................
2025-04-06 17:37:06,438:INFO:_master_model_container: 18
2025-04-06 17:37:06,439:INFO:_display_container: 6
2025-04-06 17:37:06,441:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-04-06 17:37:06,441:INFO:finalize_model() successfully completed......................................
2025-04-06 17:37:06,543:INFO:Initializing finalize_model()
2025-04-06 17:37:06,544:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:37:06,544:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-06 17:37:06,545:INFO:Initializing create_model()
2025-04-06 17:37:06,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:37:06,545:INFO:Checking exceptions
2025-04-06 17:37:06,546:INFO:Importing libraries
2025-04-06 17:37:06,546:INFO:Copying training dataset
2025-04-06 17:37:06,546:INFO:Defining folds
2025-04-06 17:37:06,546:INFO:Declaring metric variables
2025-04-06 17:37:06,546:INFO:Importing untrained model
2025-04-06 17:37:06,546:INFO:Declaring custom model
2025-04-06 17:37:06,546:INFO:Extra Trees Classifier Imported successfully
2025-04-06 17:37:06,547:INFO:Cross validation set to False
2025-04-06 17:37:06,547:INFO:Fitting Model
2025-04-06 17:37:06,602:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-04-06 17:37:06,602:INFO:create_model() successfully completed......................................
2025-04-06 17:37:06,703:INFO:_master_model_container: 18
2025-04-06 17:37:06,703:INFO:_display_container: 6
2025-04-06 17:37:06,706:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-04-06 17:37:06,706:INFO:finalize_model() successfully completed......................................
2025-04-06 17:37:06,811:INFO:Initializing finalize_model()
2025-04-06 17:37:06,811:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:37:06,812:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-06 17:37:06,813:INFO:Initializing create_model()
2025-04-06 17:37:06,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:37:06,813:INFO:Checking exceptions
2025-04-06 17:37:06,814:INFO:Importing libraries
2025-04-06 17:37:06,814:INFO:Copying training dataset
2025-04-06 17:37:06,814:INFO:Defining folds
2025-04-06 17:37:06,814:INFO:Declaring metric variables
2025-04-06 17:37:06,814:INFO:Importing untrained model
2025-04-06 17:37:06,814:INFO:Declaring custom model
2025-04-06 17:37:06,815:INFO:Decision Tree Classifier Imported successfully
2025-04-06 17:37:06,815:INFO:Cross validation set to False
2025-04-06 17:37:06,815:INFO:Fitting Model
2025-04-06 17:37:06,822:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-04-06 17:37:06,822:INFO:create_model() successfully completed......................................
2025-04-06 17:37:06,933:INFO:_master_model_container: 18
2025-04-06 17:37:06,933:INFO:_display_container: 6
2025-04-06 17:37:06,935:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-04-06 17:37:06,935:INFO:finalize_model() successfully completed......................................
2025-04-06 17:37:07,040:INFO:Initializing finalize_model()
2025-04-06 17:37:07,052:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:37:07,052:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-06 17:37:07,054:INFO:Initializing create_model()
2025-04-06 17:37:07,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:37:07,054:INFO:Checking exceptions
2025-04-06 17:37:07,054:INFO:Importing libraries
2025-04-06 17:37:07,055:INFO:Copying training dataset
2025-04-06 17:37:07,055:INFO:Defining folds
2025-04-06 17:37:07,055:INFO:Declaring metric variables
2025-04-06 17:37:07,055:INFO:Importing untrained model
2025-04-06 17:37:07,055:INFO:Declaring custom model
2025-04-06 17:37:07,055:INFO:Random Forest Classifier Imported successfully
2025-04-06 17:37:07,055:INFO:Cross validation set to False
2025-04-06 17:37:07,055:INFO:Fitting Model
2025-04-06 17:37:07,135:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:37:07,136:INFO:create_model() successfully completed......................................
2025-04-06 17:37:07,245:INFO:_master_model_container: 18
2025-04-06 17:37:07,245:INFO:_display_container: 6
2025-04-06 17:37:07,250:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-04-06 17:37:07,250:INFO:finalize_model() successfully completed......................................
2025-04-06 17:37:07,359:INFO:Initializing finalize_model()
2025-04-06 17:37:07,359:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False), fit_kwargs=None, groups=None, model_only=True, experiment_custom_tags=None)
2025-04-06 17:37:07,359:INFO:Finalizing MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False)
2025-04-06 17:37:07,361:INFO:Initializing create_model()
2025-04-06 17:37:07,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFF11F6820>, estimator=MLPClassifier(activation='relu', alpha=4.7450264492347447e-07,
              batch_size='auto', beta_1=0.9, beta_2=0.999, early_stopping=False,
              epsilon=1e-08, hidden_layer_sizes=[54, 46, 63],
              learning_rate='constant', learning_rate_init=0.001, max_fun=15000,
              max_iter=500, momentum=0.9, n_iter_no_change=10,
              nesterovs_momentum=True, power_t=0.5, random_state=123,
              shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
              verbose=False, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-04-06 17:37:07,361:INFO:Checking exceptions
2025-04-06 17:37:07,362:INFO:Importing libraries
2025-04-06 17:37:07,362:INFO:Copying training dataset
2025-04-06 17:37:07,362:INFO:Defining folds
2025-04-06 17:37:07,362:INFO:Declaring metric variables
2025-04-06 17:37:07,362:INFO:Importing untrained model
2025-04-06 17:37:07,363:INFO:Declaring custom model
2025-04-06 17:37:07,363:INFO:MLP Classifier Imported successfully
2025-04-06 17:37:07,363:INFO:Cross validation set to False
2025-04-06 17:37:07,363:INFO:Fitting Model
2025-04-06 17:37:07,663:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                               batch_size='auto', beta_1=0.9, beta_2=0.999,
                               early_stopping=False, epsilon=1e-08,
                               hidden_layer_sizes=[54, 46, 63],
                               learning_rate='constant',
                               learning_rate_init=0.001, max_fun=15000,
                               max_iter=500, momentum=0.9, n_iter_no_change=10,
                               nesterovs_momentum=True, power_t=0.5,
                               random_state=123, shuffle=True, solver='adam',
                               tol=0.0001, validation_fraction=0.1,
                               verbose=False, warm_start=False))],
         verbose=False)
2025-04-06 17:37:07,663:INFO:create_model() successfully completed......................................
2025-04-06 17:37:07,766:INFO:_master_model_container: 18
2025-04-06 17:37:07,766:INFO:_display_container: 6
2025-04-06 17:37:07,769:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Inflation', 'FEDFUNDS', 'GS10',
                                             'UNRATE'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    t...
                               batch_size='auto', beta_1=0.9, beta_2=0.999,
                               early_stopping=False, epsilon=1e-08,
                               hidden_layer_sizes=[54, 46, 63],
                               learning_rate='constant',
                               learning_rate_init=0.001, max_fun=15000,
                               max_iter=500, momentum=0.9, n_iter_no_change=10,
                               nesterovs_momentum=True, power_t=0.5,
                               random_state=123, shuffle=True, solver='adam',
                               tol=0.0001, validation_fraction=0.1,
                               verbose=False, warm_start=False))],
         verbose=False)
2025-04-06 17:37:07,769:INFO:finalize_model() successfully completed......................................
2025-04-06 17:37:07,879:WARNING:c:\Users\harian\.conda\envs\risklab\lib\site-packages\arch\bootstrap\base.py:402: FutureWarning:

random_state is deprecated and will be removed in a future version. The default random number generator is changing to a NumPy Generator. To continue using RandomState, please directly pass a RandomState instance using the ``generator`` keyword argument.


2025-04-06 18:09:50,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 18:09:50,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 18:09:50,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 18:09:50,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-06 21:19:35,556:WARNING:C:\Users\harian\AppData\Local\Temp\ipykernel_52616\1791047875.py:30: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.
  df['Date'] = pd.to_datetime(df['Date'])

2025-04-06 21:34:00,711:INFO:PyCaret ClassificationExperiment
2025-04-06 21:34:00,711:INFO:Logging name: clf-default-name
2025-04-06 21:34:00,711:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 21:34:00,711:INFO:version 3.3.2
2025-04-06 21:34:00,711:INFO:Initializing setup()
2025-04-06 21:34:00,712:INFO:self.USI: 8049
2025-04-06 21:34:00,712:INFO:self._variable_keys: {'_available_plots', 'idx', 'gpu_n_jobs_param', 'fold_generator', 'memory', 'n_jobs_param', 'exp_name_log', 'X_test', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'logging_param', 'y', 'pipeline', 'data', 'y_train', 'exp_id', '_ml_usecase', 'X', 'target_param', 'y_test', 'fold_groups_param', 'X_train', 'gpu_param', 'USI', 'log_plots_param', 'html_param', 'is_multiclass'}
2025-04-06 21:34:00,712:INFO:Checking environment
2025-04-06 21:34:00,712:INFO:python_version: 3.9.21
2025-04-06 21:34:00,712:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 21:34:00,712:INFO:machine: AMD64
2025-04-06 21:34:00,712:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 21:34:00,719:INFO:Memory: svmem(total=137112563712, available=97941520384, percent=28.6, used=39171043328, free=97941520384)
2025-04-06 21:34:00,719:INFO:Physical Core: 24
2025-04-06 21:34:00,719:INFO:Logical Core: 32
2025-04-06 21:34:00,719:INFO:Checking libraries
2025-04-06 21:34:00,719:INFO:System:
2025-04-06 21:34:00,719:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 21:34:00,719:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 21:34:00,719:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 21:34:00,719:INFO:PyCaret required dependencies:
2025-04-06 21:34:00,759:INFO:                 pip: 25.0
2025-04-06 21:34:00,759:INFO:          setuptools: 72.1.0
2025-04-06 21:34:00,760:INFO:             pycaret: 3.3.2
2025-04-06 21:34:00,760:INFO:             IPython: 8.18.1
2025-04-06 21:34:00,760:INFO:          ipywidgets: 8.1.5
2025-04-06 21:34:00,760:INFO:                tqdm: 4.67.1
2025-04-06 21:34:00,760:INFO:               numpy: 1.26.4
2025-04-06 21:34:00,760:INFO:              pandas: 2.1.4
2025-04-06 21:34:00,760:INFO:              jinja2: 3.1.6
2025-04-06 21:34:00,760:INFO:               scipy: 1.11.4
2025-04-06 21:34:00,760:INFO:              joblib: 1.3.2
2025-04-06 21:34:00,760:INFO:             sklearn: 1.4.2
2025-04-06 21:34:00,760:INFO:                pyod: 2.0.4
2025-04-06 21:34:00,760:INFO:            imblearn: 0.12.4
2025-04-06 21:34:00,760:INFO:   category_encoders: 2.6.4
2025-04-06 21:34:00,760:INFO:            lightgbm: 4.6.0
2025-04-06 21:34:00,760:INFO:               numba: 0.60.0
2025-04-06 21:34:00,760:INFO:            requests: 2.32.3
2025-04-06 21:34:00,760:INFO:          matplotlib: 3.7.5
2025-04-06 21:34:00,760:INFO:          scikitplot: 0.3.7
2025-04-06 21:34:00,760:INFO:         yellowbrick: 1.5
2025-04-06 21:34:00,760:INFO:              plotly: 5.24.1
2025-04-06 21:34:00,760:INFO:    plotly-resampler: Not installed
2025-04-06 21:34:00,760:INFO:             kaleido: 0.2.1
2025-04-06 21:34:00,760:INFO:           schemdraw: 0.15
2025-04-06 21:34:00,760:INFO:         statsmodels: 0.14.4
2025-04-06 21:34:00,760:INFO:              sktime: 0.26.0
2025-04-06 21:34:00,760:INFO:               tbats: 1.1.3
2025-04-06 21:34:00,760:INFO:            pmdarima: 2.0.4
2025-04-06 21:34:00,760:INFO:              psutil: 7.0.0
2025-04-06 21:34:00,760:INFO:          markupsafe: 3.0.2
2025-04-06 21:34:00,760:INFO:             pickle5: Not installed
2025-04-06 21:34:00,760:INFO:         cloudpickle: 3.1.1
2025-04-06 21:34:00,760:INFO:         deprecation: 2.1.0
2025-04-06 21:34:00,760:INFO:              xxhash: 3.5.0
2025-04-06 21:34:00,760:INFO:           wurlitzer: Not installed
2025-04-06 21:34:00,760:INFO:PyCaret optional dependencies:
2025-04-06 21:34:00,765:INFO:                shap: Not installed
2025-04-06 21:34:00,765:INFO:           interpret: Not installed
2025-04-06 21:34:00,765:INFO:                umap: Not installed
2025-04-06 21:34:00,765:INFO:     ydata_profiling: Not installed
2025-04-06 21:34:00,765:INFO:  explainerdashboard: Not installed
2025-04-06 21:34:00,765:INFO:             autoviz: Not installed
2025-04-06 21:34:00,765:INFO:           fairlearn: Not installed
2025-04-06 21:34:00,765:INFO:          deepchecks: Not installed
2025-04-06 21:34:00,765:INFO:             xgboost: Not installed
2025-04-06 21:34:00,765:INFO:            catboost: Not installed
2025-04-06 21:34:00,765:INFO:              kmodes: Not installed
2025-04-06 21:34:00,765:INFO:             mlxtend: Not installed
2025-04-06 21:34:00,765:INFO:       statsforecast: Not installed
2025-04-06 21:34:00,765:INFO:        tune_sklearn: Not installed
2025-04-06 21:34:00,765:INFO:                 ray: Not installed
2025-04-06 21:34:00,765:INFO:            hyperopt: 0.2.7
2025-04-06 21:34:00,765:INFO:              optuna: 4.2.1
2025-04-06 21:34:00,766:INFO:               skopt: 0.10.2
2025-04-06 21:34:00,766:INFO:              mlflow: Not installed
2025-04-06 21:34:00,766:INFO:              gradio: Not installed
2025-04-06 21:34:00,766:INFO:             fastapi: Not installed
2025-04-06 21:34:00,766:INFO:             uvicorn: Not installed
2025-04-06 21:34:00,766:INFO:              m2cgen: Not installed
2025-04-06 21:34:00,766:INFO:           evidently: Not installed
2025-04-06 21:34:00,766:INFO:               fugue: Not installed
2025-04-06 21:34:00,766:INFO:           streamlit: Not installed
2025-04-06 21:34:00,766:INFO:             prophet: Not installed
2025-04-06 21:34:00,766:INFO:None
2025-04-06 21:34:00,766:INFO:Set up data.
2025-04-06 21:34:00,768:INFO:Set up folding strategy.
2025-04-06 21:34:00,768:INFO:Set up train/test split.
2025-04-06 21:56:14,354:INFO:PyCaret ClassificationExperiment
2025-04-06 21:56:14,354:INFO:Logging name: clf-default-name
2025-04-06 21:56:14,354:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-06 21:56:14,354:INFO:version 3.3.2
2025-04-06 21:56:14,354:INFO:Initializing setup()
2025-04-06 21:56:14,354:INFO:self.USI: 48b8
2025-04-06 21:56:14,354:INFO:self._variable_keys: {'_available_plots', 'idx', 'gpu_n_jobs_param', 'fold_generator', 'memory', 'n_jobs_param', 'exp_name_log', 'X_test', 'fix_imbalance', 'seed', 'fold_shuffle_param', 'logging_param', 'y', 'pipeline', 'data', 'y_train', 'exp_id', '_ml_usecase', 'X', 'target_param', 'y_test', 'fold_groups_param', 'X_train', 'gpu_param', 'USI', 'log_plots_param', 'html_param', 'is_multiclass'}
2025-04-06 21:56:14,354:INFO:Checking environment
2025-04-06 21:56:14,354:INFO:python_version: 3.9.21
2025-04-06 21:56:14,354:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-04-06 21:56:14,354:INFO:machine: AMD64
2025-04-06 21:56:14,355:INFO:platform: Windows-10-10.0.19045-SP0
2025-04-06 21:56:14,361:INFO:Memory: svmem(total=137112563712, available=97777881088, percent=28.7, used=39334682624, free=97777881088)
2025-04-06 21:56:14,361:INFO:Physical Core: 24
2025-04-06 21:56:14,361:INFO:Logical Core: 32
2025-04-06 21:56:14,361:INFO:Checking libraries
2025-04-06 21:56:14,361:INFO:System:
2025-04-06 21:56:14,361:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-04-06 21:56:14,361:INFO:executable: c:\Users\harian\.conda\envs\risklab\python.exe
2025-04-06 21:56:14,361:INFO:   machine: Windows-10-10.0.19045-SP0
2025-04-06 21:56:14,361:INFO:PyCaret required dependencies:
2025-04-06 21:56:14,362:INFO:                 pip: 25.0
2025-04-06 21:56:14,362:INFO:          setuptools: 72.1.0
2025-04-06 21:56:14,362:INFO:             pycaret: 3.3.2
2025-04-06 21:56:14,362:INFO:             IPython: 8.18.1
2025-04-06 21:56:14,362:INFO:          ipywidgets: 8.1.5
2025-04-06 21:56:14,362:INFO:                tqdm: 4.67.1
2025-04-06 21:56:14,362:INFO:               numpy: 1.26.4
2025-04-06 21:56:14,362:INFO:              pandas: 2.1.4
2025-04-06 21:56:14,362:INFO:              jinja2: 3.1.6
2025-04-06 21:56:14,362:INFO:               scipy: 1.11.4
2025-04-06 21:56:14,362:INFO:              joblib: 1.3.2
2025-04-06 21:56:14,362:INFO:             sklearn: 1.4.2
2025-04-06 21:56:14,362:INFO:                pyod: 2.0.4
2025-04-06 21:56:14,362:INFO:            imblearn: 0.12.4
2025-04-06 21:56:14,362:INFO:   category_encoders: 2.6.4
2025-04-06 21:56:14,362:INFO:            lightgbm: 4.6.0
2025-04-06 21:56:14,362:INFO:               numba: 0.60.0
2025-04-06 21:56:14,362:INFO:            requests: 2.32.3
2025-04-06 21:56:14,362:INFO:          matplotlib: 3.7.5
2025-04-06 21:56:14,362:INFO:          scikitplot: 0.3.7
2025-04-06 21:56:14,362:INFO:         yellowbrick: 1.5
2025-04-06 21:56:14,362:INFO:              plotly: 5.24.1
2025-04-06 21:56:14,362:INFO:    plotly-resampler: Not installed
2025-04-06 21:56:14,362:INFO:             kaleido: 0.2.1
2025-04-06 21:56:14,362:INFO:           schemdraw: 0.15
2025-04-06 21:56:14,362:INFO:         statsmodels: 0.14.4
2025-04-06 21:56:14,362:INFO:              sktime: 0.26.0
2025-04-06 21:56:14,362:INFO:               tbats: 1.1.3
2025-04-06 21:56:14,362:INFO:            pmdarima: 2.0.4
2025-04-06 21:56:14,362:INFO:              psutil: 7.0.0
2025-04-06 21:56:14,362:INFO:          markupsafe: 3.0.2
2025-04-06 21:56:14,362:INFO:             pickle5: Not installed
2025-04-06 21:56:14,362:INFO:         cloudpickle: 3.1.1
2025-04-06 21:56:14,362:INFO:         deprecation: 2.1.0
2025-04-06 21:56:14,362:INFO:              xxhash: 3.5.0
2025-04-06 21:56:14,362:INFO:           wurlitzer: Not installed
2025-04-06 21:56:14,362:INFO:PyCaret optional dependencies:
2025-04-06 21:56:14,362:INFO:                shap: Not installed
2025-04-06 21:56:14,362:INFO:           interpret: Not installed
2025-04-06 21:56:14,362:INFO:                umap: Not installed
2025-04-06 21:56:14,362:INFO:     ydata_profiling: Not installed
2025-04-06 21:56:14,362:INFO:  explainerdashboard: Not installed
2025-04-06 21:56:14,362:INFO:             autoviz: Not installed
2025-04-06 21:56:14,362:INFO:           fairlearn: Not installed
2025-04-06 21:56:14,362:INFO:          deepchecks: Not installed
2025-04-06 21:56:14,362:INFO:             xgboost: Not installed
2025-04-06 21:56:14,362:INFO:            catboost: Not installed
2025-04-06 21:56:14,362:INFO:              kmodes: Not installed
2025-04-06 21:56:14,362:INFO:             mlxtend: Not installed
2025-04-06 21:56:14,362:INFO:       statsforecast: Not installed
2025-04-06 21:56:14,362:INFO:        tune_sklearn: Not installed
2025-04-06 21:56:14,362:INFO:                 ray: Not installed
2025-04-06 21:56:14,362:INFO:            hyperopt: 0.2.7
2025-04-06 21:56:14,362:INFO:              optuna: 4.2.1
2025-04-06 21:56:14,362:INFO:               skopt: 0.10.2
2025-04-06 21:56:14,362:INFO:              mlflow: Not installed
2025-04-06 21:56:14,362:INFO:              gradio: Not installed
2025-04-06 21:56:14,362:INFO:             fastapi: Not installed
2025-04-06 21:56:14,362:INFO:             uvicorn: Not installed
2025-04-06 21:56:14,362:INFO:              m2cgen: Not installed
2025-04-06 21:56:14,362:INFO:           evidently: Not installed
2025-04-06 21:56:14,362:INFO:               fugue: Not installed
2025-04-06 21:56:14,362:INFO:           streamlit: Not installed
2025-04-06 21:56:14,362:INFO:             prophet: Not installed
2025-04-06 21:56:14,362:INFO:None
2025-04-06 21:56:14,362:INFO:Set up data.
2025-04-06 21:56:14,364:INFO:Set up folding strategy.
2025-04-06 21:56:14,364:INFO:Set up train/test split.
